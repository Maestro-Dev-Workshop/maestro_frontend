var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/About.html",[0,0.253]],["body/components/About.html",[0,0.341,1,1.355,2,0.174,3,0.174,4,1.125,5,1.125,6,1.125,7,0.155,8,3.9,9,3.9,10,0.96,11,1.745,12,1.744,13,1.409,14,5.866,15,1.65,16,5.866,17,0.414,18,0.015,19,0.542,20,1.039,21,0.256,22,0.57,23,5.866,24,1.125,25,1.409,26,1.466,27,0.922,28,1.729,29,1.125,30,0.636,31,1.125,32,1.125,33,1.039,34,1.125,35,1.039,36,1.081,37,1.125,38,1.039,39,1.125,40,1.125,41,1.039,42,1.125,43,0.96,44,0.999,45,0.999,46,1.125,47,1.039,48,1.125,49,0.96,50,1.125,51,0.999,52,1.125,53,1.039,54,1.125,55,1.039,56,1.039,57,1.125,58,0.922,59,1.125,60,1.039,61,1.125,62,1.125,63,1.039,64,1.125,65,0.96,66,1.125,67,1.039,68,1.125,69,0.96,70,0.999,71,1.125,72,1.039,73,1.125,74,0.96,75,1.125,76,1.039,77,1.125,78,1.039,79,1.125,80,1.039,81,1.125,82,1.039,83,1.125,84,1.039,85,1.039,86,1.125,87,0.999,88,1.081,89,0.849,90,0.96,91,0.999,92,1.125,93,0.999,94,1.081,95,1.125,96,0.011,97,0.011]],["title/interfaces/AnswerModel.html",[98,0.731,99,2.762]],["body/interfaces/AnswerModel.html",[2,0.213,3,0.213,7,0.189,18,0.015,21,0.313,96,0.013,97,0.013,98,1.038,99,4.746,100,1.971,101,4.767,102,0.262,103,0.686,104,7.436,105,7.436,106,6.444,107,7.436,108,6.444,109,7.436,110,1.08,111,0.334,112,2.674]],["title/components/App.html",[0,0.202,12,0.826]],["body/components/App.html",[0,0.329,1,1.29,2,0.162,3,0.162,4,1.045,5,1.045,6,1.045,7,0.144,10,0.891,11,1.737,12,1.741,13,1.342,15,1.572,17,0.619,18,0.015,19,0.504,20,1.29,21,0.238,22,0.529,24,1.045,25,1.342,26,1.396,27,0.856,28,1.679,29,1.045,30,0.614,31,1.045,32,1.045,33,0.965,34,1.045,35,0.965,36,1.004,37,1.045,38,0.965,39,1.045,40,1.045,41,0.965,42,1.045,43,0.891,44,0.928,45,0.928,46,1.045,47,0.965,48,1.045,49,1.432,50,1.045,51,0.928,52,1.045,53,0.965,54,1.045,55,0.965,56,0.965,57,1.045,58,0.856,59,1.045,60,0.965,61,1.045,62,1.045,63,0.965,64,1.045,65,0.891,66,1.045,67,0.965,68,1.045,69,0.891,70,0.928,71,1.045,72,0.965,73,1.045,74,0.891,75,1.045,76,0.965,77,1.045,78,0.965,79,1.045,80,0.965,81,1.045,82,1.551,83,1.045,84,0.965,85,0.965,86,1.045,87,0.928,88,1.004,89,0.789,90,0.891,91,0.928,92,1.045,93,0.928,94,1.004,95,1.045,96,0.011,97,0.011,102,0.199,103,0.576,113,3.622,114,2.614,115,6.293,116,5.587,117,5.587,118,6.293,119,5.453,120,4.487,121,0.856,122,0.891,123,5.587,124,0.609,125,4.179,126,2.761,127,1.379,128,4.179,129,2.286]],["title/interceptors/AuthInterceptor.html",[130,3.357,131,2.762]],["body/interceptors/AuthInterceptor.html",[2,0.183,3,0.183,7,0.162,17,0.671,18,0.016,19,0.57,21,0.269,22,0.599,30,0.591,58,0.969,96,0.012,97,0.012,102,0.225,111,0.261,124,0.883,127,1.561,131,4.319,132,4.729,133,4.098,134,1.097,135,6.057,136,1.384,137,4.098,138,3.65,139,2.832,140,4.729,141,1.143,142,0.965,143,4.717,144,6.057,145,7.047,146,2.607,147,7.047,148,4.729,149,5.249,150,0.856,151,2.723,152,1.845,153,6.057,154,5.249,155,4.729,156,3.124,157,4.098,158,6.057,159,1.695,160,4.729,161,2.325,162,1.844,163,1.626,164,1.845,165,4.765,166,4.729,167,4.729,168,4.729,169,4.729,170,4.098,171,4.098,172,1.704,173,4.729,174,4.098,175,4.729,176,4.729,177,4.729,178,4.729,179,4.098,180,3.682,181,4.098,182,4.729,183,4.729,184,4.098,185,4.729,186,3.372,187,3.682,188,2.213]],["title/injectables/AuthService.html",[138,2.006,152,1.18]],["body/injectables/AuthService.html",[2,0.146,3,0.146,7,0.13,17,0.623,18,0.016,19,0.456,21,0.215,22,0.479,30,0.659,58,1.069,74,1.113,87,1.158,89,1.276,96,0.01,97,0.01,102,0.18,103,0.538,110,1.022,111,0.32,114,1.769,121,0.774,122,0.806,124,1.093,134,0.945,138,2.703,141,1.276,142,1.077,150,1.322,151,3.155,152,1.589,159,1.355,163,2.055,164,1.151,165,4.262,172,2.016,189,1.859,190,3.276,191,3.525,192,5.266,193,6.445,194,4.467,195,4.523,196,5.219,197,5.219,198,3.948,199,5.219,200,5.018,201,3.781,202,5.219,203,3.781,204,1.743,205,3.781,206,3.781,207,5.219,208,3.781,209,5.219,210,3.781,211,4.064,212,5.219,213,3.736,214,3.781,215,3.276,216,5.219,217,3.781,218,3.721,219,3.781,220,3.781,221,3.781,222,1.3,223,2.191,224,2.696,225,1.958,226,3.276,227,3.781,228,3.781,229,1.859,230,2.944,231,1.198,232,3.781,233,3.781,234,2.944,235,2.944,236,3.025,237,3.781,238,2.696,239,3.781,240,3.781,241,3.781,242,3.781,243,2.944,244,5.219,245,5.219,246,3.781,247,2.566,248,3.781,249,3.781,250,1.413,251,3.276,252,3.276,253,3.781,254,3.276,255,3.781]],["title/interfaces/ChatMessage.html",[98,0.731,256,2.559]],["body/interfaces/ChatMessage.html",[2,0.225,3,0.225,7,0.199,18,0.015,21,0.33,96,0.013,97,0.013,98,1.096,100,2.082,102,0.277,103,0.709,110,1.065,111,0.316,256,4.543,257,4.524,258,5.034,259,3.921,260,5.896,261,5.896]],["title/components/Chatbot.html",[0,0.202,33,0.895]],["body/components/Chatbot.html",[0,0.247,1,0.895,2,0.097,3,0.097,4,0.629,5,1.181,6,0.629,7,0.086,10,1.132,11,1.666,12,1.662,13,0.931,15,1.09,17,0.6,18,0.016,19,0.303,20,0.895,21,0.143,22,0.319,24,0.629,25,0.931,26,0.969,27,0.516,28,1.327,29,0.629,30,0.518,31,0.629,32,0.629,33,1.398,34,0.629,35,0.581,36,0.605,37,0.629,38,0.581,39,0.629,40,0.629,41,0.581,42,0.629,43,0.537,44,0.559,45,0.559,46,0.629,47,0.581,48,0.629,49,0.537,50,0.629,51,0.559,52,0.629,53,0.581,54,0.629,55,0.581,56,0.581,57,0.629,58,0.516,59,0.629,60,0.581,61,0.629,62,0.629,63,0.581,64,0.629,65,0.537,66,0.629,67,0.581,68,0.629,69,0.537,70,0.559,71,0.629,72,0.581,73,0.629,74,0.537,75,0.629,76,0.581,77,0.629,78,0.581,79,0.629,80,0.581,81,0.629,82,0.581,83,0.629,84,0.581,85,0.581,86,0.629,87,0.559,88,0.605,89,0.475,90,0.537,91,0.559,92,0.629,93,0.559,94,0.605,95,0.629,96,0.007,97,0.007,102,0.225,103,0.4,110,0.628,111,0.281,121,1.334,122,1.389,124,1.086,134,0.702,136,0.737,141,0.475,142,0.401,146,0.982,150,0.961,159,0.902,162,0.982,163,2.504,164,1.439,172,1.494,188,1.814,204,1.436,222,0.865,231,1.498,247,1.238,256,3.122,259,2.749,260,3.018,261,3.68,262,2.181,263,2.448,264,2.916,265,3.876,266,3.876,267,4.726,268,3.507,269,4.726,270,4.726,271,6.055,272,2.109,273,2.109,274,4.726,275,5.309,276,5.309,277,5.309,278,4.601,279,2.391,280,5.467,281,2.585,282,2.12,283,4.726,284,1.96,285,2.369,286,3.876,287,1.906,288,3.876,289,2.561,290,2.517,291,2.517,292,2.517,293,2.517,294,2.517,295,2.517,296,2.517,297,4.601,298,3.786,299,3.359,300,3.276,301,3.359,302,3.876,303,2.324,304,4.726,305,2.764,306,2.764,307,3.876,308,4.726,309,3.876,310,1.652,311,3.876,312,3.876,313,3.876,314,3.876,315,4.726,316,4.726,317,3.876,318,2.517,319,3.359,320,2.517,321,4.726,322,1.663,323,3.876,324,2.517,325,3.876,326,2.517,327,2.357,328,2.517,329,1.814,330,2.517,331,2.517,332,2.916,333,3.876,334,2.12,335,2.517,336,1.795,337,1.178,338,3.359,339,2.181,340,2.181,341,1.96,342,1.96,343,1.304,344,1.026,345,1.178,346,2.517,347,1.663,348,2.517,349,2.517,350,1.229,351,2.181,352,2.181,353,2.517,354,3.876,355,2.517,356,2.517,357,2.517,358,2.611,359,5.309,360,2.517,361,2.517,362,1.377,363,3.876,364,2.517,365,2.517,366,2.517,367,1.96,368,2.517,369,1.795,370,1.729,371,0.865,372,1.96,373,2.517,374,1.795,375,4.096,376,1.377,377,1.377,378,3.359]],["title/injectables/ChatbotService.html",[152,1.18,268,2.559]],["body/injectables/ChatbotService.html",[2,0.192,3,0.192,7,0.17,10,1.529,17,0.66,18,0.016,19,0.597,21,0.282,22,0.627,30,0.608,96,0.012,97,0.012,102,0.236,103,0.643,110,1.038,111,0.269,114,2.319,121,1.015,122,1.057,124,0.995,134,1.13,141,1.178,142,0.994,150,1.13,151,3.01,152,1.9,159,1.776,172,1.755,189,2.437,191,3.921,218,4.449,222,1.704,223,2.872,224,3.533,229,2.437,259,3.827,268,4.122,278,5.407,289,4.736,298,3.533,341,3.858,379,4.294,380,6.24,381,6.24,382,4.955,383,4.859,384,4.736,385,6.24,386,4.955,387,4.955,388,4.955,389,4.955,390,4.955]],["title/components/CheckEmail.html",[0,0.202,35,0.895]],["body/components/CheckEmail.html",[0,0.281,1,1.054,2,0.121,3,0.121,4,0.783,5,0.783,6,0.783,7,0.108,10,0.668,11,1.7,12,1.697,13,1.097,15,1.284,17,0.545,18,0.016,19,0.377,20,0.723,21,0.178,22,0.396,24,0.783,25,1.097,26,1.141,27,0.641,28,1.48,29,0.783,30,0.577,31,0.783,32,0.783,33,0.723,34,0.783,35,1.367,36,1.671,37,0.783,38,0.723,39,0.783,40,0.783,41,0.723,42,0.783,43,0.668,44,0.695,45,0.695,46,0.783,47,0.723,48,0.783,49,0.668,50,0.783,51,0.695,52,0.783,53,0.723,54,0.783,55,0.723,56,0.723,57,0.783,58,0.641,59,0.783,60,0.723,61,0.783,62,0.783,63,0.723,64,0.783,65,0.668,66,0.783,67,0.723,68,0.783,69,0.668,70,0.695,71,0.783,72,0.723,73,0.783,74,0.668,75,0.783,76,0.723,77,0.783,78,0.723,79,0.783,80,0.723,81,0.783,82,0.723,83,0.783,84,0.723,85,0.723,86,0.783,87,0.695,88,1.294,89,1.446,90,0.668,91,0.695,92,0.783,93,0.695,94,0.752,95,0.783,96,0.009,97,0.009,102,0.149,103,0.471,110,0.606,111,0.232,121,1.289,122,1.342,124,1.013,127,1.033,134,0.826,136,0.916,138,3.066,139,2.456,141,0.591,142,0.499,150,0.826,162,1.221,163,1.076,164,1.39,195,4.669,204,1.235,222,1.076,243,4.902,247,1.54,250,1.706,272,2.809,273,2.404,285,2.642,287,2.649,303,1.54,310,2.523,327,2.213,329,2.136,344,1.276,345,1.465,358,2.245,370,2.037,371,1.852,374,2.233,376,2.497,377,1.712,391,6.145,392,5.522,393,2.438,394,3.956,395,3.956,396,6.295,397,5.921,398,1.465,399,4.565,400,3.131,401,3.131,402,3.255,403,3.131,404,2.713,405,3.131,406,1.54,407,3.131,408,2.068,409,3.131,410,3.131,411,3.956,412,3.131,413,3.131,414,4.565,415,5.388,416,4.565,417,5.388,418,3.131,419,3.131,420,3.131,421,2.233,422,3.131,423,3.131,424,3.131,425,3.131,426,2.233,427,5.388,428,2.771,429,5.921,430,4.565,431,4.565,432,4.565]],["title/components/ConfirmLogout.html",[0,0.202,38,0.895]],["body/components/ConfirmLogout.html",[0,0.324,1,1.267,2,0.157,3,0.157,4,1.016,5,1.016,6,1.016,7,0.14,10,0.867,11,1.734,12,1.732,13,1.318,15,1.543,17,0.505,18,0.015,19,0.49,20,1.267,21,0.231,22,0.515,24,1.016,25,1.318,26,1.371,27,0.833,28,1.66,29,1.016,30,0.605,31,1.016,32,1.016,33,0.939,34,1.016,35,0.939,36,0.977,37,1.016,38,1.534,39,1.881,40,1.016,41,0.939,42,1.016,43,0.867,44,0.902,45,0.902,46,1.016,47,0.939,48,1.016,49,0.867,50,1.016,51,0.902,52,1.016,53,0.939,54,1.016,55,0.939,56,0.939,57,1.016,58,0.833,59,1.016,60,0.939,61,1.016,62,1.016,63,0.939,64,1.016,65,0.867,66,1.016,67,0.939,68,1.016,69,0.867,70,0.902,71,1.016,72,0.939,73,1.016,74,0.867,75,1.016,76,0.939,77,1.016,78,0.939,79,1.016,80,0.939,81,1.016,82,0.939,83,1.016,84,0.939,85,0.939,86,1.016,87,0.902,88,0.977,89,0.767,90,0.867,91,0.902,92,1.016,93,0.902,94,0.977,95,1.016,96,0.01,97,0.01,111,0.236,124,0.799,180,4.271,192,5.565,231,1.739,282,2.224,334,3.394,384,3.623,433,5.378,434,4.833,435,3.523,436,3.394,437,5.484,438,5.484,439,5.757,440,4.946,441,4.066,442,4.066,443,1.999,444,4.753,445,3.384,446,4.753]],["title/components/Contact.html",[0,0.202,41,0.895]],["body/components/Contact.html",[0,0.317,1,1.23,2,0.151,3,0.151,4,0.974,5,0.974,6,0.974,7,0.134,10,0.831,11,1.729,12,1.727,13,1.28,15,1.499,17,0.359,18,0.015,19,0.469,20,0.9,21,0.222,22,0.493,24,0.974,25,1.28,26,1.332,27,0.798,28,1.631,29,0.974,30,0.592,31,0.974,32,0.974,33,0.9,34,0.974,35,0.9,36,0.936,37,0.974,38,0.9,39,0.974,40,0.974,41,1.698,42,0.974,43,0.831,44,0.865,45,0.865,46,0.974,47,1.402,48,0.974,49,0.831,50,0.974,51,1.347,52,0.974,53,0.9,54,0.974,55,0.9,56,0.9,57,0.974,58,0.798,59,0.974,60,0.9,61,0.974,62,0.974,63,0.9,64,0.974,65,0.831,66,0.974,67,1.402,68,0.974,69,0.831,70,0.865,71,0.974,72,0.9,73,0.974,74,0.831,75,0.974,76,0.9,77,0.974,78,0.9,79,0.974,80,0.9,81,0.974,82,0.9,83,0.974,84,0.9,85,0.9,86,0.974,87,0.865,88,0.936,89,0.735,90,0.831,91,0.865,92,0.974,93,0.865,94,0.936,95,0.974,96,0.01,97,0.01,102,0.186,111,0.168,124,0.951,134,0.964,150,1.099,204,1.642,231,1.235,282,2.914,334,2.914,428,3.054,440,4.329,447,3.376,448,5.327,449,5.327,450,5.656,451,5.656,452,5.656,453,5.261,454,3.895,455,3.895,456,3.895,457,3.895,458,3.376,459,3.376,460,3.376,461,3.519,462,3.287,463,5.327,464,5.327,465,5.327,466,4.616,467,5.327,468,3.895,469,5.327,470,5.327,471,5.327]],["title/components/CreationStepTab.html",[0,0.202,43,0.826]],["body/components/CreationStepTab.html",[0,0.296,1,1.126,2,0.133,3,0.133,4,0.857,5,0.857,6,0.857,7,0.118,10,0.731,11,1.713,12,1.71,13,1.171,15,1.371,17,0.449,18,0.016,19,0.413,20,1.126,21,0.195,22,0.434,24,0.857,25,1.171,26,1.218,27,0.702,28,1.543,29,0.857,30,0.553,31,0.857,32,0.857,33,0.792,34,0.857,35,0.792,36,0.824,37,0.857,38,0.792,39,0.857,40,0.857,41,0.792,42,0.857,43,1.317,44,1.548,45,1.748,46,0.857,47,0.792,48,0.857,49,0.731,50,0.857,51,0.761,52,0.857,53,0.792,54,0.857,55,0.792,56,0.792,57,0.857,58,0.702,59,0.857,60,0.792,61,0.857,62,0.857,63,0.792,64,0.857,65,0.731,66,0.857,67,0.792,68,0.857,69,0.731,70,0.761,71,0.857,72,0.792,73,0.857,74,0.731,75,0.857,76,0.792,77,0.857,78,0.792,79,0.857,80,0.792,81,0.857,82,0.792,83,0.857,84,0.792,85,0.792,86,0.857,87,0.761,88,0.824,89,0.647,90,0.731,91,0.761,92,0.857,93,0.761,94,0.824,95,0.857,96,0.009,97,0.009,102,0.163,103,0.502,110,0.82,111,0.266,121,1.161,122,1.209,124,0.988,134,0.882,150,0.621,161,2.397,204,0.928,250,1.822,279,3.008,332,3.008,350,1.798,436,3.102,443,1.687,472,3.814,473,6.042,474,4.042,475,2.972,476,3.287,477,3.008,478,3.008,479,4.874,480,4.874,481,5.671,482,5.671,483,3.579,484,5.671,485,5.671,486,4.042,487,3.43,488,3.43,489,2.266,490,3.43,491,3.43,492,3.43,493,3.43,494,3.43,495,3.43,496,3.43,497,3.43,498,4.874,499,4.224,500,6.175,501,5.351,502,3.43,503,4.874,504,3.43,505,3.43,506,2.972]],["title/interfaces/ExamModel.html",[98,0.731,507,3.017]],["body/interfaces/ExamModel.html",[2,0.222,3,0.222,7,0.197,17,0.528,18,0.015,21,0.326,96,0.013,97,0.013,98,1.082,100,2.055,102,0.273,103,0.703,110,0.967,111,0.314,142,1.087,406,3.582,507,5.314,508,4.97,509,2.489,510,4.37,511,4.981,512,4.124,513,4.97]],["title/classes/ExamSettings.html",[22,0.49,514,2.559]],["body/classes/ExamSettings.html",[0,0.241,2,0.123,3,0.123,7,0.109,11,0.679,12,0.679,13,0.765,15,0.895,17,0.643,18,0.016,19,0.384,20,0.735,21,0.181,22,0.585,43,0.985,44,0.706,45,1.025,49,0.985,65,0.679,69,0.679,70,1.406,96,0.009,97,0.009,102,0.152,103,0.476,110,0.722,111,0.285,112,1.726,121,1.222,122,1.272,124,0.869,127,1.05,129,1.741,139,1.189,146,2.121,151,1.882,159,1.14,164,0.969,172,1.679,188,3.093,222,1.094,231,1.464,250,1.726,263,2.393,272,1.42,273,1.42,281,1.741,285,1.42,305,2.269,310,2.317,327,2.768,329,1.489,337,1.489,344,1.297,345,1.489,350,1.724,358,3.435,370,1.42,371,1.87,472,3.466,474,1.845,477,1.964,510,1.845,514,3.942,515,2.269,516,4.186,517,4.186,518,2.269,519,3.878,520,5.147,521,3.878,522,3.878,523,3.183,524,3.183,525,3.294,526,3.183,527,3.183,528,1.565,529,1.845,530,2.103,531,1.964,532,2.478,533,2.478,534,3.052,535,1.845,536,1.845,537,3.597,538,3.597,539,2.478,540,2.478,541,2.478,542,3.597,543,2.478,544,1.845,545,4.235,546,4.235,547,3.294,548,1.845,549,3.597,550,3.597,551,2.478,552,3.597,553,2.678,554,2.269,555,3.597,556,2.478,557,3.294,558,2.393,559,3.597,560,2.478,561,3.597,562,2.478,563,2.478,564,4.646,565,2.103,566,2.269,567,3.597,568,2.478,569,3.052,570,2.478,571,2.478,572,2.103,573,2.269,574,2.478,575,3.831,576,2.478,577,2.478,578,4.235,579,2.478,580,2.478,581,2.103,582,3.597,583,3.597,584,3.597,585,3.294,586,4.646,587,3.597,588,3.593,589,3.294,590,3.294,591,2.478,592,2.478,593,3.294,594,1.964,595,2.269,596,2.269]],["title/interfaces/ExerciseModel.html",[98,0.731,597,3.017]],["body/interfaces/ExerciseModel.html",[2,0.222,3,0.222,7,0.197,17,0.528,18,0.015,21,0.326,96,0.013,97,0.013,98,1.082,100,2.055,102,0.273,103,0.703,110,0.967,111,0.314,142,1.087,406,3.582,509,2.489,510,4.37,511,4.981,512,4.124,513,4.97,597,5.314,598,4.97]],["title/injectables/ExerciseService.html",[152,1.18,599,3.017]],["body/injectables/ExerciseService.html",[2,0.191,3,0.191,7,0.169,17,0.679,18,0.016,19,0.594,21,0.28,22,0.624,30,0.664,96,0.012,97,0.012,99,3.514,102,0.235,103,0.641,110,1,111,0.294,114,2.306,121,1.009,122,1.051,124,1.042,134,1.126,136,1.442,141,1.286,142,1.085,150,1.126,151,3.006,152,1.894,156,3.256,159,1.766,162,1.922,163,2.342,172,1.749,189,2.423,191,3.401,229,2.423,509,2.052,599,4.842,600,4.27,601,5.305,602,6.218,603,5.388,604,3.837,605,5.101,606,6.218,607,6.218,608,4.928,609,6.218,610,7.154,611,4.928,612,6.218,613,4.928,614,3.041,615,3.837,616,4.928,617,4.928]],["title/classes/ExerciseSettings.html",[22,0.49,534,2.559]],["body/classes/ExerciseSettings.html",[0,0.244,2,0.125,3,0.125,7,0.111,11,0.689,12,0.689,13,0.777,15,0.909,17,0.646,18,0.016,19,0.389,20,0.746,21,0.184,22,0.591,43,0.996,44,0.717,45,1.037,49,0.996,65,0.689,69,0.689,70,1.415,96,0.009,97,0.009,102,0.154,103,0.482,110,0.729,111,0.275,112,1.746,121,1.124,122,1.17,124,0.799,127,1.067,129,1.768,139,1.208,146,2.14,151,1.903,159,1.158,164,0.984,172,1.691,188,3.11,222,1.111,231,1.481,250,1.208,263,2.419,272,1.442,273,1.442,281,1.768,285,1.442,305,2.305,310,2.338,327,2.776,329,1.513,337,1.513,344,1.317,345,1.513,350,1.739,358,3.45,370,1.442,371,1.886,472,3.287,474,1.874,477,1.994,510,1.874,514,3.624,515,2.305,516,3.971,517,3.971,518,2.305,519,3.912,520,5.174,521,3.912,522,2.305,525,3.331,528,1.589,529,1.874,530,2.135,531,1.994,532,2.517,533,2.517,534,3.624,535,1.874,536,1.874,537,3.638,538,3.638,539,2.517,540,2.517,541,2.517,542,3.638,543,2.517,544,1.874,545,4.272,546,4.272,547,3.331,548,1.874,549,3.638,550,3.638,551,2.517,552,3.638,553,2.708,554,2.305,555,3.638,556,2.517,557,3.331,558,2.419,559,3.638,560,2.517,561,3.638,562,2.517,563,2.517,564,4.68,565,2.135,566,2.305,567,3.638,568,2.517,569,3.086,570,2.517,571,2.517,572,2.135,573,2.305,574,2.517,575,3.851,576,2.517,577,2.517,578,4.272,579,2.517,580,2.517,581,2.135,582,3.638,583,3.638,584,3.638,585,3.331,586,4.68,587,3.638,588,3.624,589,3.331,590,3.331,591,2.517,592,2.517,593,3.331,594,1.994,595,2.305,596,2.305,618,3.232,619,3.232,620,3.232]],["title/components/Features.html",[0,0.202,47,0.895]],["body/components/Features.html",[0,0.308,1,1.185,2,0.143,3,0.143,4,0.922,5,0.922,6,0.922,7,0.127,10,0.786,11,1.722,12,1.72,13,1.232,15,1.443,17,0.34,18,0.015,19,0.444,20,0.852,21,0.21,22,0.467,24,0.922,25,1.232,26,1.282,27,0.755,28,1.594,29,0.922,30,0.575,31,0.922,32,0.922,33,0.852,34,0.922,35,0.852,36,0.886,37,0.922,38,0.852,39,0.922,40,0.922,41,0.852,42,0.922,43,0.786,44,0.818,45,0.818,46,0.922,47,1.676,48,0.922,49,0.786,50,0.922,51,0.818,52,0.922,53,0.852,54,0.922,55,0.852,56,0.852,57,0.922,58,0.755,59,0.922,60,0.852,61,0.922,62,0.922,63,0.852,64,0.922,65,1.258,66,0.922,67,0.852,68,0.922,69,0.786,70,0.818,71,0.922,72,0.852,73,0.922,74,0.786,75,0.922,76,0.852,77,0.922,78,0.852,79,0.922,80,0.852,81,0.922,82,0.852,83,0.922,84,0.852,85,0.852,86,0.922,87,0.818,88,0.886,89,0.696,90,0.786,91,0.818,92,0.922,93,0.818,94,0.886,95,0.922,96,0.01,97,0.01,428,3.247,462,4.478,558,2.657,621,3.196,622,5.13,623,5.13,624,5.13,625,5.13,626,5.13,627,4.965,628,5.13,629,5.13,630,3.165,631,4.445,632,4.445,633,3.389,634,5.13,635,4.445,636,3.389,637,3.389,638,5.13,639,5.525,640,4.445,641,5.13,642,5.13,643,5.13,644,5.13,645,3.389,646,5.13,647,5.13,648,6.376,649,6.376,650,5.13,651,5.13,652,5.13,653,5.13,654,5.13,655,3.994,656,5.13,657,4.445,658,5.13,659,5.13,660,3.165,661,5.13,662,5.13,663,3.994,664,5.13,665,4.445,666,5.13,667,5.13,668,3.389,669,5.13,670,5.13,671,5.13]],["title/directives/FileTypeDirective.html",[27,0.793,91,0.86]],["body/directives/FileTypeDirective.html",[2,0.16,3,0.16,7,0.23,10,0.883,11,1.184,17,0.511,18,0.016,19,0.499,21,0.235,22,0.524,27,1.137,30,0.404,90,0.883,91,1.232,96,0.011,97,0.011,102,0.197,110,0.737,111,0.301,121,1.371,122,1.184,124,1.047,134,1.005,141,0.781,142,0.659,150,0.75,164,1.908,172,1.165,204,1.12,215,3.588,231,1.76,250,2.075,279,3.426,282,3.037,322,2.736,332,4.129,334,3.426,350,1.76,352,4.811,371,1.909,406,2.036,440,4.977,478,3.426,672,6.36,673,3.588,674,6.979,675,5.552,676,5.428,677,6.264,678,6.264,679,5.552,680,4.811,681,4.141,682,5.552,683,5.552,684,3.218,685,5.552,686,4.811,687,6.693,688,4.141,689,4.811,690,4.811,691,5.552,692,4.811,693,4.141,694,6.693,695,5.552,696,6.693,697,4.141,698,5.552,699,4.141,700,4.746,701,5.552,702,5.552,703,5.552,704,4.141,705,4.141,706,3.224,707,4.141,708,4.141,709,4.141,710,4.141,711,4.811,712,4.141,713,4.141,714,4.141,715,4.141,716,4.141,717,4.141,718,4.141,719,3.224,720,4.141,721,4.141,722,4.141,723,2.144]],["title/components/Header.html",[0,0.202,49,0.826]],["body/components/Header.html",[0,0.302,1,1.156,2,0.138,3,0.138,4,0.89,5,0.89,6,0.89,7,0.122,10,0.759,11,1.718,12,1.715,13,1.203,17,0.609,18,0.016,19,0.429,20,1.156,21,0.203,22,0.451,24,0.89,25,1.203,26,1.251,27,0.729,28,1.57,29,0.89,30,0.612,31,0.89,32,0.89,33,0.822,34,0.89,35,0.822,36,0.856,37,0.89,38,1.662,39,1.251,40,0.89,41,0.822,42,0.89,43,0.759,44,0.79,45,0.79,46,0.89,47,0.822,48,0.89,49,1.463,50,0.89,51,0.79,52,0.89,53,0.822,54,0.89,55,0.822,56,0.822,57,0.89,58,0.729,59,0.89,60,0.822,61,0.89,62,0.89,63,0.822,64,0.89,65,0.759,66,0.89,67,0.822,68,0.89,69,0.759,70,0.79,71,0.89,72,0.822,73,0.89,74,0.759,75,0.89,76,0.822,77,0.89,78,0.822,79,0.89,80,0.822,81,0.89,82,0.822,83,0.89,84,0.822,85,0.822,86,0.89,87,0.79,88,0.856,89,1.295,90,0.759,91,0.79,92,0.89,93,0.79,94,0.856,95,0.89,96,0.01,97,0.01,102,0.17,103,0.516,111,0.154,121,1.186,122,1.234,124,1.048,126,2.353,127,1.175,134,0.906,136,1.042,137,3.086,138,3.252,139,2.634,141,0.672,142,0.567,143,3.898,150,1.137,162,1.389,163,1.224,184,3.086,192,4.508,204,1.698,350,1.587,408,2.353,428,2.343,434,2.773,436,3.166,443,1.751,478,3.089,724,3.086,725,4.508,726,5.006,727,6.616,728,5.789,729,6.28,730,6.28,731,6.28,732,5.006,733,3.561,734,3.561,735,3.561,736,3.561,737,5.006,738,6.28,739,3.561,740,3.561,741,3.561,742,5.006,743,3.086,744,3.561,745,4.338]],["title/components/Home.html",[0,0.202,51,0.86]],["body/components/Home.html",[0,0.308,1,1.184,2,0.142,3,0.142,4,0.92,5,0.92,6,0.92,7,0.126,10,0.785,11,1.722,12,1.72,13,1.231,15,1.442,17,0.655,18,0.016,19,0.444,20,1.184,21,0.209,22,0.466,24,0.92,25,1.231,26,1.281,27,0.754,28,1.593,29,0.92,30,0.653,31,0.92,32,0.92,33,0.85,34,0.92,35,0.85,36,0.885,37,0.92,38,0.85,39,0.92,40,0.92,41,1.643,42,0.92,43,0.785,44,0.817,45,0.817,46,0.92,47,1.643,48,0.92,49,0.785,50,0.92,51,1.539,52,0.92,53,1.472,54,0.92,55,0.85,56,0.85,57,0.92,58,0.754,59,0.92,60,0.85,61,0.92,62,0.92,63,0.85,64,0.92,65,0.785,66,0.92,67,1.643,68,0.92,69,0.785,70,0.817,71,0.92,72,0.85,73,0.92,74,0.785,75,0.92,76,0.85,77,0.92,78,0.85,79,0.92,80,0.85,81,0.92,82,0.85,83,0.92,84,0.85,85,0.85,86,0.92,87,0.817,88,0.885,89,0.695,90,0.785,91,0.817,92,0.92,93,0.817,94,0.885,95,0.92,96,0.01,97,0.01,102,0.175,111,0.221,124,0.859,127,1.215,134,0.928,136,1.5,139,2.592,141,0.967,142,0.816,150,0.928,163,1.762,187,2.868,204,1.594,310,1.569,398,1.723,443,1.811,483,3.694,746,3.191,747,5.125,748,5.125,749,5.125,750,5.894,751,6.372,752,3.683,753,3.683,754,5.125,755,6.372,756,3.683,757,5.125,758,3.683,759,3.683,760,3.683,761,3.683,762,3.683,763,3.683]],["title/injectables/HttpBaseService.html",[152,1.18,223,2.245]],["body/injectables/HttpBaseService.html",[2,0.158,3,0.158,7,0.14,17,0.613,18,0.016,19,0.492,21,0.232,22,0.517,30,0.649,96,0.01,97,0.01,102,0.194,103,0.567,110,1.028,111,0.321,114,1.911,119,5.39,121,1.127,122,1.173,124,1.065,134,0.996,141,1.403,142,1.06,150,1.258,151,3.07,152,1.675,156,2.698,159,1.464,163,2.46,164,1.244,165,4.435,170,3.539,171,3.539,172,1.954,189,2.008,191,3.402,222,1.404,223,3.189,229,2.008,231,1.295,251,3.539,601,4.844,605,2.912,614,2.52,615,3.18,764,6.444,765,3.539,766,5.501,767,6.655,768,5.501,769,5.501,770,5.501,771,4.084,772,6.655,773,6.655,774,5.501,775,4.084,776,4.084,777,6.655,778,5.501,779,7.436,780,4.084,781,5.501,782,4.084,783,5.501,784,4.084,785,5.501,786,4.084,787,4.084,788,6.655,789,6.655,790,4.084,791,4.084,792,4.084]],["title/components/Landing.html",[0,0.202,53,0.895]],["body/components/Landing.html",[0,0.3,1,1.148,2,0.136,3,0.136,4,0.881,5,0.881,6,0.881,7,0.121,10,0.751,11,1.716,12,1.714,13,1.194,15,1.398,17,0.53,18,0.015,19,0.425,20,1.148,21,0.2,22,0.446,24,0.881,25,1.194,26,1.242,27,0.722,28,1.562,29,0.881,30,0.61,31,0.881,32,0.881,33,0.814,34,0.881,35,0.814,36,0.847,37,0.881,38,0.814,39,0.881,40,0.881,41,1.329,42,0.881,43,0.751,44,0.782,45,0.782,46,0.881,47,1.329,48,0.881,49,0.751,50,0.881,51,1.277,52,0.881,53,1.579,54,0.881,55,0.814,56,0.814,57,0.881,58,0.722,59,0.881,60,0.814,61,0.881,62,0.881,63,0.814,64,0.881,65,0.751,66,0.881,67,1.329,68,0.881,69,0.751,70,0.782,71,0.881,72,0.814,73,0.881,74,0.751,75,0.881,76,0.814,77,0.881,78,0.814,79,0.881,80,0.814,81,0.881,82,0.814,83,0.881,84,0.814,85,0.814,86,0.881,87,0.782,88,0.847,89,0.665,90,0.751,91,0.782,92,0.881,93,0.782,94,0.847,95,0.881,96,0.009,97,0.009,102,0.168,111,0.214,124,1.024,127,1.163,134,0.9,136,1.031,139,2.555,141,0.665,142,0.561,150,1.193,162,1.374,187,2.744,204,1.782,231,1.117,282,2.718,303,2.443,334,3.148,398,1.649,428,3.2,436,3.148,440,4.104,443,1.733,450,5.416,451,5.416,452,5.416,453,4.988,458,3.054,459,3.054,460,3.054,462,3.857,630,3.066,637,3.283,640,4.306,663,3.869,665,4.306,793,3.054,794,4.969,795,4.969,796,6.25,797,6.25,798,4.969,799,3.524,800,3.524,801,3.524,802,3.524,803,3.524,804,3.524,805,4.306,806,4.969,807,3.869,808,4.969,809,4.969,810,4.969,811,3.543,812,3.869,813,3.869,814,3.283,815,4.306,816,4.969]],["title/components/LessonPage.html",[0,0.202,55,0.895]],["body/components/LessonPage.html",[0,0.131,1,0.428,2,0.04,3,0.04,4,0.26,5,0.26,6,0.26,7,0.036,10,0.222,11,1.452,12,1.443,13,0.445,15,0.521,17,0.487,18,0.016,19,0.125,20,0.428,21,0.059,22,0.132,24,0.26,25,0.445,26,0.463,27,0.213,28,0.759,29,0.26,30,0.459,31,0.26,32,0.26,33,0.701,34,0.26,35,0.24,36,0.445,37,0.26,38,0.24,39,0.26,40,0.26,41,0.24,42,0.26,43,0.222,44,0.231,45,0.231,46,0.26,47,0.24,48,0.26,49,0.647,50,0.26,51,0.231,52,0.26,53,0.24,54,0.26,55,0.701,56,0.966,57,0.26,58,0.213,59,0.26,60,0.24,61,0.26,62,0.26,63,0.24,64,0.26,65,0.823,66,0.26,67,0.24,68,0.26,69,0.222,70,0.773,71,0.26,72,0.701,73,0.26,74,0.222,75,0.26,76,0.428,77,0.26,78,0.24,79,0.26,80,1.486,81,0.26,82,0.24,83,0.26,84,0.24,85,1.182,86,0.26,87,0.231,88,0.25,89,0.196,90,0.222,91,0.231,92,0.26,93,0.231,94,0.25,95,0.26,96,0.004,97,0.004,102,0.05,103,0.191,110,0.593,111,0.264,120,3.774,121,0.914,122,0.952,124,0.906,126,0.687,129,0.569,134,0.335,136,0.304,141,0.789,142,0.615,146,1.631,150,0.892,159,0.373,161,0.911,162,0.406,164,1.94,172,1.44,186,1.32,188,1.629,204,1.207,222,0.358,230,0.81,231,0.33,247,0.511,250,2.473,256,1.653,259,0.959,260,1.442,261,1.442,268,2.006,272,0.464,280,2.631,281,1.904,284,0.81,285,1.355,287,0.911,289,2.549,298,1.32,299,0.901,306,2.165,310,1.483,319,1.605,327,2.576,338,1.605,339,0.901,340,0.901,341,0.81,343,0.539,350,1.85,351,0.901,362,0.569,367,0.81,370,0.464,371,0.358,372,0.81,378,1.605,384,0.687,476,1.45,483,1.76,509,2.201,510,2.424,511,2.3,525,1.32,528,0.511,529,0.603,530,1.223,535,1.45,536,1.073,548,3.603,553,1.073,558,3.077,566,0.742,569,1.223,572,0.687,573,0.742,585,0.742,588,0.687,614,1.873,636,3.111,645,3.855,655,1.949,660,1.873,668,0.687,680,0.901,700,1.223,723,0.959,811,0.742,814,0.687,815,0.901,817,5.455,818,4.902,819,0.901,820,1.852,821,1.852,822,2.502,823,1.784,824,1.873,825,3.481,826,1.852,827,1.852,828,1.852,829,3.036,830,3.036,831,3.036,832,1.852,833,1.852,834,3.036,835,1.852,836,1.852,837,1.04,838,1.04,839,1.852,840,1.04,841,1.852,842,1.04,843,1.949,844,1.04,845,1.04,846,1.04,847,1.04,848,1.852,849,1.04,850,1.04,851,1.852,852,1.04,853,1.04,854,1.04,855,1.04,856,1.04,857,3.858,858,1.852,859,1.852,860,1.04,861,1.442,862,1.04,863,1.04,864,1.04,865,1.04,866,1.04,867,1.04,868,1.04,869,1.04,870,0.81,871,0.901,872,1.442,873,1.852,874,5.119,875,2.502,876,3.036,877,1.04,878,3.667,879,4.182,880,1.852,881,1.04,882,1.04,883,1.04,884,1.04,885,1.04,886,1.04,887,3.475,888,1.852,889,2.502,890,1.04,891,1.852,892,1.852,893,1.04,894,1.04,895,1.04,896,1.04,897,1.04,898,2.502,899,1.04,900,1.04,901,0.901,902,1.04,903,1.04,904,1.852,905,3.036,906,3.624,907,2.502,908,4.182,909,1.04,910,4.182,911,1.76,912,1.073,913,5.835,914,3.855,915,5.835,916,1.04,917,5.835,918,3.191,919,2.549,920,1.04,921,2.482,922,1.04,923,2.711,924,1.04,925,2.502,926,1.04,927,1.852,928,1.04,929,1.852,930,1.04,931,1.04,932,1.852,933,1.04,934,1.04,935,1.852,936,1.04,937,1.04,938,2.502,939,1.04,940,1.04,941,1.45,942,2.502,943,3.036,944,2.502,945,1.852,946,1.04,947,1.04,948,1.04,949,1.04,950,3.036,951,1.04,952,1.04,953,1.04,954,1.04,955,1.04,956,2.502,957,1.04,958,1.04,959,1.04,960,1.04,961,1.04,962,1.04,963,1.852,964,1.852,965,2.631,966,0.901,967,1.04,968,1.04,969,1.04,970,1.04,971,1.04,972,1.04,973,1.04,974,1.04,975,2.502,976,1.04,977,1.04,978,1.04,979,1.04,980,1.04,981,1.04,982,1.04,983,1.04,984,1.04,985,1.04,986,1.04,987,1.04,988,0.901,989,1.04,990,0.901,991,1.04,992,1.04,993,1.04,994,1.04,995,1.04,996,1.442,997,1.04,998,2.711,999,1.04,1000,1.04,1001,2.502,1002,0.742,1003,1.04,1004,2.502,1005,1.04,1006,2.502,1007,1.04,1008,1.04,1009,1.04,1010,1.852,1011,1.04,1012,2.165,1013,1.04,1014,1.04,1015,1.442,1016,1.04,1017,0.901,1018,1.04,1019,1.04,1020,1.04,1021,1.04,1022,1.04,1023,1.04,1024,1.442,1025,0.81,1026,2.502,1027,3.481,1028,1.442,1029,1.04,1030,1.04,1031,1.04,1032,1.852,1033,1.04,1034,1.04,1035,1.04,1036,2.168,1037,1.04,1038,3.344,1039,1.04,1040,1.04,1041,1.04,1042,1.04,1043,1.04,1044,3.036,1045,1.852,1046,0.687,1047,1.04,1048,1.04,1049,0.901,1050,1.605,1051,1.852,1052,1.04,1053,1.852,1054,3.481,1055,1.04,1056,1.852,1057,3.036,1058,1.852,1059,1.04,1060,1.04,1061,1.04,1062,4.463,1063,1.04,1064,1.852,1065,1.04,1066,1.04,1067,1.04,1068,0.901,1069,1.04,1070,3.481,1071,1.852,1072,1.852,1073,2.168,1074,3.481,1075,1.04,1076,1.04,1077,0.901,1078,1.04,1079,1.852,1080,1.04,1081,1.04,1082,1.04,1083,1.04,1084,1.04,1085,1.04,1086,1.04,1087,1.852,1088,3.036,1089,1.04,1090,1.04,1091,3.858,1092,1.04,1093,1.04,1094,1.04,1095,2.502,1096,1.04,1097,1.04,1098,1.04,1099,1.04,1100,1.04,1101,0.901,1102,1.605,1103,0.901,1104,1.852,1105,1.04,1106,2.502,1107,1.04,1108,1.04,1109,1.04,1110,1.04,1111,0.901,1112,1.04,1113,0.81,1114,1.04,1115,1.04,1116,3.036,1117,1.852,1118,1.04,1119,1.852,1120,1.852,1121,1.852,1122,1.605,1123,1.852,1124,1.04,1125,1.04,1126,1.852,1127,1.04,1128,0.81,1129,1.442,1130,1.04,1131,2.168,1132,1.04,1133,2.168,1134,1.852,1135,0.901,1136,1.04,1137,2.502,1138,1.04,1139,2.502,1140,1.852,1141,2.502,1142,1.852,1143,2.502,1144,2.502,1145,1.04,1146,2.502,1147,2.502,1148,2.502,1149,1.04,1150,1.852,1151,1.04,1152,1.04,1153,1.04,1154,1.04,1155,5.292,1156,1.852,1157,1.852,1158,1.852,1159,3.036,1160,1.852,1161,1.852,1162,1.852,1163,1.442,1164,1.605,1165,3.036,1166,1.852]],["title/injectables/LessonService.html",[152,1.18,824,2.39]],["body/injectables/LessonService.html",[2,0.135,3,0.135,7,0.12,17,0.574,18,0.016,19,0.422,21,0.199,22,0.443,30,0.699,70,0.777,96,0.009,97,0.009,102,0.167,103,0.51,108,5.401,110,1.08,111,0.309,114,1.638,121,0.717,122,0.746,124,1.061,134,0.895,141,1.352,142,1.141,150,1.297,151,3.17,152,1.506,159,1.254,172,2.015,189,1.722,191,3.409,218,3.527,222,1.204,223,2.029,224,2.496,229,1.722,250,2.55,383,5.119,384,4.934,406,3.356,511,4.879,548,2.867,558,2.561,645,2.313,824,3.052,887,2.726,906,3.034,965,5.401,1167,3.034,1168,4.946,1169,4.946,1170,4.946,1171,4.946,1172,4.946,1173,4.946,1174,4.946,1175,4.946,1176,4.946,1177,3.501,1178,5.401,1179,4.946,1180,3.501,1181,4.946,1182,3.501,1183,4.946,1184,3.501,1185,4.946,1186,6.232,1187,3.501,1188,4.946,1189,6.232,1190,6.208,1191,4.066,1192,3.501,1193,4.946,1194,6.232,1195,3.501,1196,4.946,1197,3.501,1198,3.501,1199,3.501,1200,3.501,1201,4.946,1202,3.034,1203,3.501,1204,3.501,1205,3.501,1206,3.501,1207,3.501,1208,3.501,1209,4.946,1210,3.501,1211,3.501]],["title/components/Login.html",[0,0.202,58,0.793]],["body/components/Login.html",[0,0.243,1,1.075,2,0.124,3,0.124,4,0.804,5,0.804,6,0.804,7,0.11,10,0.686,11,1.701,12,1.698,13,0.773,17,0.586,18,0.016,19,0.388,20,0.743,24,0.804,25,1.119,26,1.164,27,0.659,28,1.499,29,0.804,30,0.585,31,0.804,32,0.804,33,0.743,34,0.804,35,0.743,36,0.773,37,0.804,38,0.743,39,0.804,40,0.804,41,0.743,42,0.804,43,0.686,44,0.714,45,0.714,46,0.804,47,0.743,48,0.804,49,0.686,50,0.804,51,0.714,52,0.804,53,0.743,54,0.804,55,0.743,56,0.743,57,0.804,58,1.228,59,0.804,60,0.743,61,0.804,62,0.804,63,0.743,64,0.804,65,0.686,66,0.804,67,0.743,68,0.804,69,0.686,70,0.714,71,0.804,72,0.743,73,0.804,74,0.686,75,0.804,76,0.743,77,0.804,78,0.743,79,0.804,80,0.743,81,0.804,82,0.743,83,0.804,84,0.743,85,0.743,86,0.804,87,0.714,88,0.773,89,1.368,90,0.686,91,0.714,92,0.804,93,0.714,94,0.773,95,0.804,96,0.009,97,0.009,102,0.153,103,0.48,110,0.727,111,0.286,121,1.359,122,1.414,124,1.07,127,1.062,134,0.843,136,0.942,138,2.834,139,2.241,141,0.607,142,0.512,146,1.816,150,0.843,164,0.98,179,4.034,204,1.259,222,1.106,231,1.476,236,4.061,238,3.32,247,1.582,252,2.788,254,2.788,263,2.411,272,2.077,273,2.077,285,2.441,287,2.289,322,3.076,327,2.045,329,1.505,336,2.294,337,1.505,344,1.311,345,1.505,358,2.289,362,2.993,370,1.435,371,1.881,398,1.505,402,2.294,408,2.125,421,2.294,426,2.294,428,3.104,461,3.076,489,3.962,544,3.171,637,3.076,719,3.625,807,3.625,1212,2.788,1213,3.217,1214,4.034,1215,4.034,1216,4.034,1217,4.741,1218,4.656,1219,3.217,1220,3.217,1221,3.217,1222,3.217,1223,4.261,1224,2.788,1225,3.217,1226,3.217,1227,3.217,1228,3.217,1229,2.788,1230,3.217,1231,3.217,1232,3.217,1233,3.217,1234,3.217,1235,3.217,1236,3.217,1237,3.217,1238,3.217,1239,3.217,1240,3.217,1241,4.656,1242,3.625,1243,4.034,1244,4.034,1245,4.034,1246,4.034,1247,2.788,1248,2.788,1249,4.034,1250,4.034,1251,4.034,1252,4.656,1253,2.788,1254,2.788]],["title/interfaces/LoginPayload.html",[98,0.731,1255,2.39]],["body/interfaces/LoginPayload.html",[2,0.212,3,0.212,7,0.188,17,0.503,18,0.015,21,0.422,30,0.533,89,1.435,96,0.013,97,0.013,98,1.4,100,1.959,102,0.26,103,0.684,110,1.074,111,0.286,112,2.043,194,3.612,198,3.612,213,3.169,225,3.434,236,4.406,259,2.832,362,2.99,1255,4.091,1256,3.612,1257,3.612,1258,3.899,1259,3.373,1260,3.899,1261,3.373,1262,3.169]],["title/interfaces/LoginResponse.html",[98,0.731,213,2.245]],["body/interfaces/LoginResponse.html",[2,0.209,3,0.209,7,0.185,17,0.496,18,0.015,21,0.42,30,0.526,89,1.241,96,0.012,97,0.012,98,1.394,100,1.932,102,0.257,103,0.678,110,1.072,111,0.306,112,2.015,194,4.879,198,4.879,213,3.811,225,3.824,236,3.811,259,2.792,362,4.039,1255,3.326,1256,3.561,1257,3.561,1258,3.844,1259,3.326,1260,3.844,1261,3.326,1262,3.125]],["title/pipes/MarkdownPipe.html",[264,2.39,343,2.006]],["body/pipes/MarkdownPipe.html",[2,0.191,3,0.191,7,0.17,10,1.053,17,0.659,18,0.016,19,0.595,21,0.281,22,0.625,25,1.638,30,0.665,96,0.012,97,0.012,103,0.509,110,0.905,111,0.213,121,1.011,122,1.454,124,0.907,134,0.894,141,0.932,142,0.786,150,0.894,161,2.428,162,1.926,163,2.14,164,1.504,172,1.751,231,1.973,250,2.548,264,3.841,343,3.224,350,2.454,478,3.841,1102,5.908,1263,4.278,1264,5.908,1265,4.278,1266,5.105,1267,4.937,1268,6.225,1269,4.937,1270,6.818,1271,6.225,1272,6.818,1273,6.225,1274,6.225,1275,6.225,1276,4.937,1277,6.225,1278,6.225,1279,4.278,1280,3.844,1281,4.937,1282,4.278,1283,4.937,1284,4.937,1285,4.937]],["title/components/NamingUpload.html",[0,0.202,60,0.895]],["body/components/NamingUpload.html",[0,0.161,1,0.713,2,0.073,3,0.073,4,0.472,5,0.472,6,0.472,7,0.24,10,0.403,11,1.605,12,1.599,13,0.454,15,0.531,17,0.519,18,0.016,19,0.228,20,0.436,24,0.472,25,0.742,26,0.771,27,0.387,28,1.129,29,0.472,30,0.689,31,0.472,32,0.472,33,0.436,34,0.472,35,0.436,36,0.454,37,0.472,38,0.436,39,0.472,40,0.472,41,0.436,42,0.472,43,0.834,44,0.868,45,0.868,46,0.472,47,0.436,48,0.472,49,0.834,50,0.472,51,0.419,52,0.472,53,0.436,54,0.472,55,0.436,56,0.436,57,0.472,58,0.387,59,0.472,60,0.904,61,1.564,62,0.472,63,0.436,64,0.472,65,0.403,66,0.472,67,0.436,68,0.472,69,0.403,70,0.419,71,0.472,72,0.436,73,0.472,74,0.403,75,0.472,76,0.436,77,0.472,78,0.436,79,0.472,80,0.436,81,0.472,82,0.436,83,0.472,84,0.436,85,0.713,86,0.472,87,0.419,88,0.454,89,0.357,90,0.403,91,0.419,92,0.472,93,0.419,94,0.454,95,0.472,96,0.006,97,0.006,102,0.186,103,0.318,110,0.52,111,0.282,121,1.246,122,1.297,124,1.038,127,0.624,129,1.033,134,0.559,136,0.553,139,1.688,141,1.11,142,0.937,146,1.526,150,1.102,151,0.77,161,0.929,163,1.061,164,0.575,172,1.271,174,1.637,188,1.831,204,1.646,222,0.65,231,0.978,247,1.518,250,1.153,263,1.598,272,2.016,273,1.377,281,1.688,285,1.746,287,1.518,300,1.904,303,1.518,310,1.925,327,1.997,329,0.884,337,0.884,343,0.978,344,0.77,345,0.884,347,2.039,350,1.24,358,2.992,369,1.347,370,1.377,371,0.65,374,1.347,376,1.688,377,1.688,398,0.884,461,2.039,472,3.928,474,1.095,476,1.789,477,1.166,483,2.618,489,1.248,509,0.624,528,0.929,529,1.095,535,1.789,536,1.095,544,2.618,553,1.095,557,2.79,569,1.248,575,1.789,588,2.039,589,1.347,595,1.347,596,1.347,630,3.072,631,2.674,632,2.674,633,3.885,636,1.248,637,2.039,684,1.095,689,2.674,690,5.423,700,3.53,711,1.637,814,1.248,872,2.403,914,2.039,918,1.688,919,2.585,921,1.347,998,1.471,1002,1.347,1012,4.939,1046,1.248,1049,1.637,1111,2.674,1286,5.592,1287,5.592,1288,1.637,1289,1.889,1290,1.889,1291,3.086,1292,3.086,1293,3.086,1294,3.086,1295,3.086,1296,3.086,1297,3.086,1298,3.086,1299,3.086,1300,3.086,1301,3.086,1302,1.889,1303,3.912,1304,1.889,1305,4.517,1306,1.889,1307,1.889,1308,1.889,1309,5.343,1310,1.889,1311,1.889,1312,1.889,1313,1.889,1314,1.889,1315,1.889,1316,1.889,1317,1.889,1318,3.086,1319,1.889,1320,1.889,1321,1.889,1322,1.889,1323,1.889,1324,1.889,1325,1.889,1326,1.889,1327,1.889,1328,3.086,1329,1.889,1330,1.889,1331,1.889,1332,3.086,1333,1.889,1334,1.637,1335,1.889,1336,1.889,1337,1.889,1338,1.889,1339,1.889,1340,1.889,1341,1.889,1342,1.889,1343,1.637,1344,1.889,1345,1.889,1346,4.517,1347,1.889,1348,1.889,1349,1.889,1350,1.889,1351,1.889,1352,4.315,1353,3.086,1354,3.086,1355,1.889,1356,3.086,1357,1.889,1358,1.889,1359,3.912,1360,1.889,1361,1.889,1362,1.889,1363,3.086,1364,1.889,1365,5.343,1366,4.63,1367,2.403,1368,4.517,1369,2.403,1370,1.471,1371,2.039,1372,1.889,1373,1.889,1374,1.889,1375,1.889,1376,1.889,1377,1.889,1378,1.889,1379,4.979,1380,1.889,1381,1.889,1382,3.912,1383,3.086,1384,3.086,1385,1.637,1386,1.471,1387,1.637,1388,1.889,1389,1.889,1390,1.889,1391,3.086,1392,1.889,1393,1.889,1394,1.889,1395,1.889,1396,4.517,1397,3.912,1398,3.086,1399,3.086,1400,1.889,1401,3.086,1402,3.086,1403,3.086,1404,2.403,1405,3.086,1406,2.201,1407,1.889,1408,1.889,1409,1.637,1410,1.637,1411,1.889,1412,1.889,1413,1.889,1414,1.889,1415,1.889,1416,1.637,1417,1.889,1418,1.637,1419,1.889,1420,1.889,1421,1.889,1422,1.889,1423,3.086,1424,3.086,1425,1.889,1426,2.403,1427,2.201,1428,2.674,1429,3.086,1430,3.086,1431,3.086,1432,3.086,1433,3.086,1434,3.086,1435,2.674,1436,1.889]],["title/components/NotFound.html",[0,0.202,63,0.895]],["body/components/NotFound.html",[0,0.3,1,1.144,2,0.136,3,0.136,4,0.877,5,0.877,6,0.877,7,0.121,10,0.748,11,1.716,12,1.713,13,1.191,15,1.394,17,0.529,18,0.015,19,0.423,20,1.144,21,0.2,22,0.444,24,0.877,25,1.191,26,1.239,27,0.719,28,1.56,29,0.877,30,0.608,31,0.877,32,0.877,33,0.811,34,0.877,35,0.811,36,0.843,37,0.877,38,0.811,39,0.877,40,0.877,41,0.811,42,0.877,43,0.748,44,0.779,45,0.779,46,0.877,47,0.811,48,0.877,49,0.748,50,0.877,51,1.275,52,0.877,53,1.326,54,0.877,55,0.811,56,0.811,57,0.877,58,0.719,59,0.877,60,0.811,61,0.877,62,0.877,63,1.441,64,0.877,65,0.748,66,0.877,67,0.811,68,0.877,69,0.748,70,0.779,71,0.877,72,0.811,73,0.877,74,0.748,75,0.877,76,0.811,77,0.877,78,0.811,79,0.877,80,0.811,81,0.877,82,0.811,83,0.877,84,0.811,85,1.326,86,0.877,87,0.779,88,0.843,89,0.662,90,0.748,91,0.779,92,0.877,93,0.779,94,0.843,95,0.877,96,0.009,97,0.009,102,0.167,111,0.151,124,0.722,127,1.159,134,0.897,136,1.027,139,2.552,141,0.662,142,0.559,150,0.635,162,1.369,172,1.394,180,4.859,186,4.449,204,0.949,398,1.643,428,2.92,436,3.141,443,1.726,462,3.85,655,3.859,743,3.042,1015,3.859,1163,4.859,1242,4.859,1426,3.859,1437,4.977,1438,4.472,1439,3.042,1440,4.955,1441,4.955,1442,6.24,1443,3.51,1444,3.51,1445,4.955,1446,4.955,1447,4.955,1448,4.955,1449,3.51,1450,4.955,1451,4.955,1452,4.955,1453,4.955,1454,4.955,1455,4.955,1456,3.51,1457,4.955,1458,6.83,1459,4.955,1460,4.955,1461,4.955,1462,4.294,1463,5.407,1464,4.955,1465,4.955,1466,4.955,1467,4.955,1468,3.51,1469,4.955,1470,4.955,1471,3.51,1472,4.294,1473,4.955,1474,3.51,1475,4.955,1476,4.955,1477,4.955,1478,4.955,1479,3.51,1480,3.51,1481,3.51,1482,3.51,1483,3.51]],["title/injectables/NotificationService.html",[152,1.18,344,1.578]],["body/injectables/NotificationService.html",[2,0.222,3,0.168,7,0.15,17,0.401,18,0.016,19,0.525,21,0.326,22,0.551,30,0.626,96,0.011,97,0.011,102,0.207,103,0.592,110,1.013,111,0.329,114,2.038,121,1.453,122,1.513,124,1.083,126,2.877,134,1.039,141,1.212,142,1.13,150,1.236,152,1.749,163,2.208,181,5.917,189,2.141,204,1.847,229,2.141,259,3.326,344,2.339,371,1.497,406,3.709,1262,2.524,1462,4.975,1484,3.391,1485,6.423,1486,5.741,1487,5.741,1488,4.355,1489,5.741,1490,5.317,1491,5.787,1492,7.815,1493,4.355,1494,5.741,1495,5.741,1496,4.355,1497,5.741,1498,5.741,1499,4.355,1500,5.741,1501,4.355,1502,5.917,1503,4.355,1504,4.355,1505,3.391,1506,4.355,1507,4.355,1508,4.355,1509,4.355,1510,4.355,1511,4.355,1512,4.355,1513,4.355,1514,4.355,1515,4.355]],["title/directives/PasswordValidator.html",[27,0.793,93,0.86]],["body/directives/PasswordValidator.html",[2,0.193,3,0.193,7,0.172,10,1.066,11,1.338,17,0.578,18,0.016,19,0.603,21,0.284,22,0.633,27,1.285,30,0.488,90,1.066,93,1.596,94,1.508,96,0.012,97,0.012,102,0.238,111,0.216,124,0.729,134,1.136,141,0.944,142,0.796,150,0.905,161,3.086,164,2.089,172,1.93,250,2.769,337,2.34,350,2.174,547,4.475,1516,5.438,1517,4.334,1518,5.944,1519,4.887,1520,6.276,1521,7.193,1522,5.001,1523,5.001,1524,6.859,1525,6.276,1526,4.334,1527,5.001,1528,4.334,1529,5.001,1530,5.001,1531,6.276,1532,5.001,1533,5.001,1534,3.894,1535,5.001,1536,5.001,1537,6.276,1538,5.001,1539,6.276,1540,5.001,1541,5.001]],["title/interfaces/Plan.html",[98,0.731,1542,2.39]],["body/interfaces/Plan.html",[2,0.211,3,0.211,7,0.187,18,0.015,21,0.377,30,0.723,96,0.013,97,0.013,98,1.25,100,1.955,102,0.26,103,0.683,110,1.047,111,0.328,112,2.039,406,3.906,509,2.447,1542,4.575,1543,4.249,1544,6.426,1545,6.426,1546,6.426,1547,3.367,1548,4.728,1549,4.728,1550,4.728]],["title/components/Practice.html",[0,0.202,65,0.826]],["body/components/Practice.html",[0,0.222,1,0.789,2,0.083,3,0.083,4,0.535,5,0.535,6,0.535,7,0.074,10,0.457,11,1.636,12,1.631,13,0.82,15,0.961,17,0.547,18,0.016,19,0.258,20,0.789,21,0.122,22,0.271,24,0.535,25,0.82,26,0.853,27,0.439,28,1.215,29,0.535,30,0.579,31,0.535,32,0.535,33,0.495,34,0.535,35,0.495,36,0.514,37,0.535,38,0.495,39,0.535,40,0.535,41,0.495,42,0.535,43,0.457,44,0.475,45,0.475,46,0.535,47,0.495,48,0.535,49,0.457,50,0.535,51,0.475,52,0.535,53,0.495,54,0.535,55,0.495,56,0.495,57,0.535,58,0.439,59,0.535,60,0.495,61,0.535,62,0.535,63,0.495,64,0.535,65,1.206,66,0.535,67,0.495,68,0.535,69,0.457,70,1.445,71,0.535,72,0.495,73,0.535,74,0.457,75,0.535,76,0.495,77,0.535,78,0.495,79,0.535,80,0.495,81,0.535,82,0.495,83,0.535,84,0.495,85,0.495,86,0.535,87,0.475,88,0.514,89,0.404,90,0.457,91,0.475,92,0.535,93,0.475,94,0.514,95,0.535,96,0.006,97,0.006,102,0.102,103,0.352,106,2.959,110,0.645,111,0.292,121,0.995,122,1.036,124,1.047,134,0.618,136,0.627,141,0.917,142,0.774,146,2.07,150,0.961,151,1.98,157,1.856,159,0.767,162,0.835,163,1.464,164,1.723,172,1.367,188,1.993,204,1.314,222,0.736,250,1.984,263,2.205,264,2.628,272,2.369,273,2.168,279,2.107,281,2.329,282,1.868,284,1.667,285,2.168,287,1.679,297,3.69,300,2.107,301,1.856,303,1.053,306,2.435,310,1.455,327,1.816,329,1.598,332,2.998,334,2.658,337,1.002,342,1.667,343,1.109,344,0.872,345,1.002,350,0.679,358,2.094,370,1.524,371,0.736,372,1.667,374,2.435,376,1.171,377,1.171,444,1.856,445,1.321,476,1.241,509,1.752,511,3.21,512,1.868,530,1.415,548,1.241,558,1.109,565,2.256,603,4.211,660,1.321,668,1.415,700,2.813,723,1.768,814,1.415,823,3.785,824,2.998,861,2.659,870,1.667,872,2.659,911,2.817,912,1.979,914,3.21,918,1.171,941,3.44,996,1.667,1046,1.415,1068,1.856,1077,2.959,1128,2.659,1129,2.659,1131,1.856,1133,3.69,1135,1.856,1163,1.667,1164,1.856,1178,3.69,1190,2.959,1191,2.468,1409,2.959,1551,1.856,1552,3.414,1553,3.414,1554,4.259,1555,3.414,1556,3.414,1557,5.657,1558,3.414,1559,4.259,1560,4.259,1561,4.259,1562,3.414,1563,2.141,1564,2.141,1565,2.141,1566,2.141,1567,2.141,1568,2.141,1569,2.141,1570,2.141,1571,2.141,1572,2.141,1573,2.141,1574,2.141,1575,3.414,1576,2.141,1577,2.141,1578,2.141,1579,2.141,1580,2.141,1581,2.141,1582,2.141,1583,4.259,1584,4.259,1585,3.414,1586,2.141,1587,2.141,1588,2.141,1589,2.141,1590,2.141,1591,3.414,1592,2.141,1593,4.259,1594,4.259,1595,4.859,1596,2.141,1597,2.141,1598,2.141,1599,2.141,1600,3.414,1601,2.141,1602,5.308,1603,5.657,1604,3.414,1605,2.141,1606,2.141,1607,3.414,1608,5.657,1609,1.527,1610,1.527,1611,2.141,1612,3.414,1613,2.141,1614,2.141,1615,2.141,1616,2.141,1617,4.259,1618,2.141,1619,2.141,1620,2.141,1621,2.141,1622,2.141,1623,2.141,1624,2.141,1625,2.141,1626,2.141,1627,2.141,1628,2.141,1629,4.859,1630,3.414,1631,2.141,1632,2.141,1633,2.141,1634,2.141,1635,3.414,1636,2.141,1637,2.141,1638,2.141,1639,1.856,1640,2.141,1641,2.141,1642,2.141,1643,3.69,1644,5.308,1645,3.414,1646,3.414,1647,2.141,1648,3.414,1649,2.141,1650,2.141,1651,2.141,1652,2.141,1653,2.141,1654,2.141,1655,2.141,1656,2.141,1657,2.141,1658,1.856,1659,2.141,1660,3.414,1661,4.859,1662,3.414,1663,3.414]],["title/components/Pricing.html",[0,0.202,67,0.895]],["body/components/Pricing.html",[0,0.297,1,1.133,2,0.134,3,0.134,4,0.865,5,0.865,6,0.865,7,0.119,10,0.738,11,1.714,12,1.711,13,1.179,15,1.38,17,0.319,18,0.015,19,0.417,20,0.799,21,0.197,22,0.438,24,0.865,25,1.179,26,1.226,27,0.709,28,1.55,29,0.865,30,0.556,31,0.865,32,0.865,33,0.799,34,0.865,35,0.799,36,0.831,37,0.865,38,0.799,39,0.865,40,0.865,41,0.799,42,0.865,43,0.738,44,0.768,45,0.768,46,0.865,47,1.614,48,0.865,49,0.738,50,0.865,51,0.768,52,0.865,53,0.799,54,0.865,55,0.799,56,0.799,57,0.865,58,0.709,59,0.865,60,0.799,61,0.865,62,0.865,63,0.799,64,0.865,65,0.738,66,0.865,67,1.57,68,0.865,69,0.738,70,0.768,71,0.865,72,0.799,73,0.865,74,0.738,75,0.865,76,0.799,77,0.865,78,0.799,79,0.865,80,0.799,81,0.865,82,0.799,83,0.865,84,0.799,85,0.799,86,0.865,87,0.768,88,0.831,89,0.653,90,0.738,91,0.768,92,0.865,93,0.768,94,0.831,95,0.865,96,0.009,97,0.009,238,5.253,303,2.412,347,3.241,428,2.296,445,3.826,461,3.241,594,3.027,627,3.82,630,4.195,633,4.096,637,4.971,692,4.251,805,4.251,811,3.498,812,3.82,813,4.828,919,3.241,1028,4.828,1103,4.251,1113,3.82,1243,4.251,1334,4.251,1343,4.251,1416,4.251,1427,3.498,1534,3.82,1643,4.251,1664,2.999,1665,4.906,1666,4.906,1667,4.906,1668,4.906,1669,4.906,1670,6.2,1671,4.906,1672,4.906,1673,6.2,1674,4.906,1675,4.906,1676,7.524,1677,4.906,1678,6.798,1679,4.251,1680,4.251,1681,4.906,1682,6.2,1683,4.906,1684,4.906,1685,4.906,1686,4.906,1687,4.906,1688,4.906,1689,4.251,1690,4.906,1691,4.251,1692,4.906,1693,6.2,1694,4.906,1695,4.906,1696,4.906,1697,4.906]],["title/interfaces/QuestionModel.html",[98,0.731,512,2.119]],["body/interfaces/QuestionModel.html",[2,0.182,3,0.182,7,0.162,18,0.016,21,0.4,96,0.011,97,0.011,98,1.259,100,1.689,102,0.224,103,0.623,110,1.074,111,0.341,112,2.493,142,1.186,250,2.954,486,4.218,509,2.499,512,3.306,660,4.49,684,3.503,723,2.441,911,3.503,912,3.867,918,3.306,941,2.732,1191,2.732,1609,5.189,1610,5.189,1698,3.113,1699,4.649,1700,4.808,1701,3.67,1702,3.67]],["title/interfaces/QuestionOption.html",[98,0.731,1699,2.559]],["body/interfaces/QuestionOption.html",[2,0.191,3,0.191,7,0.169,18,0.016,21,0.407,96,0.012,97,0.012,98,1.286,100,1.766,102,0.235,103,0.641,110,1.074,111,0.334,112,2.858,250,2.815,486,4.276,509,2.524,512,2.695,660,3.837,684,3.604,723,2.552,911,3.604,912,3.949,918,4.035,941,2.856,1191,2.856,1609,4.434,1610,4.434,1698,3.256,1699,4.501,1700,4.501,1701,5.571,1702,5.571]],["title/components/QuestionSettings.html",[0,0.202,69,0.826]],["body/components/QuestionSettings.html",[0,0.232,1,0.829,2,0.088,3,0.088,4,0.57,5,0.57,6,0.57,7,0.078,10,0.486,11,1.648,12,1.643,13,0.862,15,1.01,17,0.58,18,0.016,19,0.275,20,0.829,21,0.13,22,0.454,24,0.57,25,0.862,26,0.897,27,0.467,28,1.258,29,0.57,30,0.567,31,0.57,32,0.57,33,0.527,34,0.57,35,0.527,36,0.548,37,0.57,38,0.527,39,0.57,40,0.57,41,0.527,42,0.57,43,1.073,44,0.797,45,0.985,46,0.57,47,0.527,48,0.57,49,1.073,50,0.57,51,0.506,52,0.57,53,0.527,54,0.57,55,0.527,56,1.264,57,0.57,58,0.467,59,0.57,60,0.527,61,0.57,62,0.57,63,0.527,64,0.57,65,1.24,66,0.57,67,0.527,68,0.57,69,1.073,70,1.549,71,0.57,72,0.527,73,0.57,74,0.486,75,0.57,76,0.527,77,0.57,78,0.527,79,0.57,80,0.527,81,0.57,82,0.527,83,0.57,84,0.527,85,1.025,86,0.57,87,0.506,88,0.548,89,0.43,90,0.486,91,0.506,92,0.57,93,0.506,94,0.548,95,0.57,96,0.007,97,0.007,102,0.109,103,0.37,110,0.589,111,0.251,112,0.852,121,1.191,122,1.24,124,0.967,127,0.753,129,1.247,134,0.65,136,0.668,139,1.881,141,0.838,142,0.707,146,2.135,150,0.804,151,1.463,159,0.817,164,0.695,172,1.416,188,2.721,204,1.2,222,0.784,231,1.596,250,0.852,263,2.299,272,2.443,273,1.981,281,2.428,285,1.981,287,1.765,305,1.626,310,1.891,327,2.571,329,1.68,337,1.067,344,0.929,345,1.067,350,1.407,358,3.099,370,1.018,371,1.526,384,3.326,398,1.067,445,3.888,472,3.701,474,1.322,477,1.407,510,2.573,514,3.841,516,4.47,517,4.47,518,1.626,519,3.904,520,3.92,521,1.626,522,1.626,525,1.626,528,1.122,529,1.322,530,1.507,531,2.215,532,2.795,533,2.795,534,3.617,535,2.573,536,2.081,537,2.795,538,2.795,539,2.795,540,1.776,541,1.776,542,2.795,543,1.776,544,2.918,545,3.456,546,3.456,547,2.56,548,2.573,549,2.795,550,2.795,551,1.776,552,2.795,553,2.081,554,4.623,555,2.795,556,1.776,557,2.56,558,3.563,559,2.795,560,1.776,561,2.795,562,1.776,563,1.776,564,3.92,565,1.507,566,1.626,567,2.795,568,1.776,569,2.371,570,1.776,571,1.776,572,1.507,573,1.626,574,1.776,575,3.37,576,1.776,577,1.776,578,3.456,579,1.776,580,1.776,581,1.507,582,2.795,583,2.795,584,2.795,585,2.56,586,3.92,587,2.795,588,2.932,589,2.56,590,2.56,591,1.776,592,1.776,593,2.56,594,2.739,595,1.626,596,1.626,684,2.918,700,2.371,723,2.607,911,3.653,912,2.918,941,2.918,1028,2.795,1050,3.111,1703,3.589,1704,3.589,1705,3.589,1706,2.281,1707,2.281,1708,2.281,1709,2.281,1710,2.281,1711,2.281,1712,2.281,1713,2.281,1714,2.281,1715,3.111,1716,3.589,1717,3.589]],["title/interfaces/SaveQuestionData.html",[98,0.731,1191,2.245]],["body/interfaces/SaveQuestionData.html",[2,0.184,3,0.184,7,0.163,18,0.016,21,0.402,96,0.012,97,0.012,98,1.264,100,1.704,102,0.226,103,0.626,110,1.07,111,0.343,112,2.504,142,1.189,200,4.733,250,2.957,486,3.523,509,2.504,512,2.6,660,4.502,684,3.523,723,2.462,911,3.523,912,3.883,918,3.324,941,2.756,1191,3.523,1609,5.203,1610,5.203,1698,3.141,1699,4.015,1700,4.821,1701,3.702,1702,3.702]],["title/components/Sidebar.html",[0,0.202,72,0.895]],["body/components/Sidebar.html",[0,0.295,1,1.123,2,0.132,3,0.132,4,0.854,5,0.854,6,0.854,7,0.117,10,0.729,11,1.712,12,1.71,13,1.168,15,1.368,17,0.448,18,0.016,19,0.412,20,1.123,21,0.194,22,0.432,24,0.854,25,1.168,26,1.215,27,0.7,28,1.541,29,0.854,30,0.635,31,0.854,32,0.854,33,0.789,34,0.854,35,0.789,36,0.821,37,0.854,38,0.789,39,0.854,40,0.854,41,0.789,42,0.854,43,0.729,44,0.758,45,0.758,46,0.854,47,0.789,48,0.854,49,0.729,50,0.854,51,0.758,52,0.854,53,0.789,54,0.854,55,0.789,56,0.789,57,0.854,58,0.7,59,0.854,60,0.789,61,0.854,62,0.854,63,0.789,64,0.854,65,0.729,66,0.854,67,0.789,68,0.854,69,0.729,70,0.758,71,0.854,72,1.563,73,0.854,74,0.729,75,0.854,76,1.307,77,0.854,78,0.789,79,0.854,80,1.307,81,0.854,82,0.789,83,0.854,84,0.789,85,1.504,86,0.854,87,0.758,88,0.821,89,0.645,90,0.729,91,0.758,92,0.854,93,0.758,94,0.821,95,0.854,96,0.009,97,0.009,102,0.163,110,0.962,111,0.317,124,0.986,127,1.128,134,0.88,141,0.917,142,0.774,150,1.025,164,1.041,204,1.53,279,2.999,282,2.659,300,3.804,306,2.436,332,3.492,334,2.659,509,2.035,548,2.818,558,2.518,645,3.739,725,4.407,823,4.035,843,3.785,1024,3.785,1025,3.785,1036,4.213,1038,4.213,1073,4.213,1122,2.961,1242,3.785,1718,2.961,1719,4.861,1720,4.861,1721,6.165,1722,4.861,1723,4.861,1724,5.659,1725,3.417,1726,3.417,1727,3.417,1728,3.417,1729,4.861,1730,3.417,1731,4.861,1732,3.417,1733,3.417,1734,3.417,1735,6.165,1736,3.417,1737,3.417,1738,4.861,1739,4.861,1740,4.861]],["title/components/Signup.html",[0,0.202,74,0.826]],["body/components/Signup.html",[0,0.247,1,0.894,2,0.097,3,0.097,4,0.629,5,0.629,6,0.629,7,0.086,10,0.536,11,1.666,12,1.661,13,0.931,17,0.557,18,0.016,19,0.303,20,0.894,21,0.143,22,0.318,24,0.629,25,0.931,26,0.968,27,0.515,28,1.326,29,0.629,30,0.703,31,0.629,32,0.629,33,0.581,34,0.629,35,0.581,36,0.604,37,0.629,38,0.581,39,0.629,40,0.629,41,0.581,42,0.629,43,0.536,44,0.558,45,0.558,46,0.629,47,0.581,48,0.629,49,0.536,50,0.629,51,0.558,52,0.629,53,0.581,54,0.629,55,0.581,56,0.581,57,0.629,58,0.515,59,0.629,60,0.581,61,0.629,62,0.629,63,0.581,64,0.629,65,0.536,66,0.629,67,0.581,68,0.629,69,0.536,70,0.558,71,0.629,72,0.581,73,0.629,74,1.291,75,0.629,76,1.091,77,0.629,78,0.581,79,0.629,80,0.581,81,0.629,82,0.581,83,0.629,84,0.581,85,0.581,86,0.629,87,0.558,88,0.604,89,1.361,90,0.536,91,0.558,92,0.629,93,1.178,94,0.604,95,0.629,96,0.007,97,0.007,102,0.12,103,0.399,110,0.761,111,0.294,121,1.333,122,1.388,124,1.061,127,0.83,134,0.701,136,1.134,138,2.748,139,2.262,141,0.475,142,0.401,146,1.842,150,0.701,163,1.332,204,1.047,222,0.865,234,1.958,235,1.958,236,4.221,238,2.762,247,1.905,263,2.446,272,2.108,273,2.108,285,2.368,287,2.323,303,1.237,322,3.506,327,2.141,329,1.813,336,1.793,337,1.177,344,1.025,345,1.177,350,0.797,358,2.609,367,3.016,370,1.122,371,1.624,376,2.118,377,1.375,398,1.177,402,2.762,408,1.661,411,3.356,421,2.762,426,2.762,428,3.047,446,4.093,486,1.458,489,4.413,519,2.762,544,3.076,635,3.356,663,3.016,719,3.016,745,3.356,814,3.506,996,4.462,1046,1.661,1214,4.093,1215,4.093,1216,4.093,1217,4.598,1223,5.201,1224,3.356,1229,3.356,1244,3.356,1245,3.356,1246,3.356,1247,2.179,1248,2.179,1249,3.356,1250,3.356,1251,3.356,1253,2.179,1254,2.179,1371,1.661,1386,1.958,1518,2.179,1534,3.016,1741,2.179,1742,3.873,1743,4.724,1744,4.724,1745,4.724,1746,4.724,1747,3.873,1748,2.515,1749,2.515,1750,2.515,1751,2.515,1752,2.515,1753,2.515,1754,3.873,1755,2.515,1756,2.515,1757,3.873,1758,2.515,1759,2.515,1760,2.515,1761,2.515,1762,2.515,1763,2.515,1764,4.724,1765,2.515,1766,2.515,1767,2.179,1768,2.515,1769,2.515,1770,2.515,1771,2.515,1772,2.515,1773,3.873,1774,2.515,1775,2.515,1776,2.515,1777,2.515,1778,2.515,1779,2.515,1780,2.515,1781,2.515,1782,2.515,1783,2.515,1784,3.873,1785,3.873,1786,3.873,1787,3.873,1788,3.873,1789,3.873,1790,3.873,1791,3.873,1792,2.515,1793,2.515,1794,3.873,1795,3.873,1796,3.873,1797,3.873,1798,2.515,1799,2.515]],["title/interfaces/SignupPayload.html",[98,0.731,1259,2.39]],["body/interfaces/SignupPayload.html",[2,0.206,3,0.206,7,0.183,17,0.49,18,0.015,21,0.418,30,0.717,89,1.423,96,0.012,97,0.012,98,1.387,100,1.905,102,0.253,103,0.672,110,1.081,111,0.317,112,1.987,194,3.512,198,3.512,213,3.082,225,3.376,236,4.371,259,2.753,362,2.908,1255,3.28,1256,3.512,1257,3.512,1258,3.791,1259,4.022,1260,5.241,1261,3.28,1262,3.082]],["title/components/Subjects.html",[0,0.202,76,0.895]],["body/components/Subjects.html",[0,0.243,1,0.878,2,0.095,3,0.095,4,0.614,5,0.614,6,0.614,7,0.084,10,0.524,11,1.661,12,1.657,13,0.914,15,1.07,17,0.552,18,0.016,19,0.296,20,0.878,21,0.14,22,0.311,24,0.614,25,0.914,26,0.95,27,0.503,28,1.31,29,0.614,30,0.692,31,0.614,32,0.614,33,0.567,34,0.614,35,0.567,36,0.59,37,0.614,38,0.567,39,0.614,40,0.614,41,0.567,42,0.614,43,0.524,44,0.545,45,0.545,46,0.614,47,0.567,48,0.614,49,1.117,50,0.614,51,0.545,52,0.614,53,0.567,54,0.614,55,0.567,56,0.878,57,0.614,58,0.503,59,0.614,60,0.567,61,0.95,62,0.614,63,0.567,64,0.614,65,0.811,66,0.614,67,0.567,68,0.614,69,0.524,70,0.844,71,0.614,72,0.567,73,0.614,74,0.524,75,0.614,76,1.725,77,0.614,78,0.567,79,0.614,80,0.567,81,0.614,82,0.567,83,0.614,84,0.567,85,1.075,86,0.614,87,0.545,88,0.59,89,0.463,90,0.524,91,0.545,92,0.614,93,0.545,94,0.59,95,0.614,96,0.007,97,0.007,102,0.117,103,0.392,111,0.226,121,1.073,122,1.117,124,0.941,127,0.81,129,1.343,134,0.688,136,0.719,139,2.24,141,0.718,142,0.606,146,1.483,150,0.842,161,1.87,162,0.958,163,0.844,164,0.748,188,2.452,204,1.417,222,0.844,231,2.249,247,1.87,272,1.697,285,2.338,287,2.288,298,2.711,300,2.346,303,1.87,310,2.232,327,0.917,347,4.13,350,1.205,369,1.751,370,1.096,371,1.307,376,2.08,377,2.08,398,1.149,436,2.545,443,1.207,462,2.346,476,2.697,483,3.037,509,2.132,528,1.207,529,1.423,531,1.515,535,2.697,536,2.204,575,3.745,593,2.711,627,2.961,630,2.871,668,3.461,686,5.598,723,1.272,725,3.623,807,2.961,811,2.711,813,2.961,878,2.961,1002,1.751,1012,4.729,1017,3.295,1113,2.961,1366,5.195,1367,1.912,1369,2.961,1370,1.912,1371,2.512,1404,4.08,1406,1.751,1410,2.128,1427,2.711,1472,3.295,1679,3.295,1800,2.128,1801,3.802,1802,3.802,1803,5.668,1804,4.653,1805,5.239,1806,3.802,1807,3.802,1808,2.455,1809,3.802,1810,5.03,1811,2.455,1812,2.455,1813,2.455,1814,6.46,1815,6.46,1816,6.46,1817,3.802,1818,6.46,1819,6.46,1820,6.46,1821,6.46,1822,3.802,1823,3.802,1824,3.802,1825,3.295,1826,2.455,1827,2.455,1828,2.455,1829,2.455,1830,2.455,1831,2.455,1832,2.455,1833,2.455,1834,3.802,1835,2.455,1836,2.455,1837,2.455,1838,2.455,1839,2.455,1840,6.46,1841,2.455,1842,2.455,1843,2.455,1844,2.455,1845,3.802,1846,3.802,1847,3.802,1848,3.802,1849,3.802,1850,3.802]],["title/injectables/SubjectsService.html",[152,1.18,528,1.905]],["body/injectables/SubjectsService.html",[2,0.123,3,0.123,7,0.217,17,0.5,18,0.016,19,0.383,21,0.181,22,0.402,30,0.735,56,0.733,96,0.009,97,0.009,102,0.151,103,0.475,110,1.085,111,0.312,112,2.03,114,1.486,121,0.945,122,0.983,124,1.089,134,0.835,141,1.364,142,1.151,150,1.34,151,3.219,152,1.405,159,1.138,164,0.967,172,2.083,189,1.561,191,3.26,218,3.288,222,1.092,223,1.84,224,2.264,229,1.561,231,1.007,327,1.723,383,5.629,406,2.671,521,4.978,522,4.25,528,2.268,554,2.264,558,1.644,575,3.669,633,3.588,636,3.047,668,4.182,1202,2.752,1387,3.997,1851,2.752,1852,5.96,1853,4.612,1854,4.612,1855,4.612,1856,5.96,1857,4.612,1858,4.612,1859,4.612,1860,4.612,1861,4.612,1862,4.612,1863,3.175,1864,4.612,1865,7.403,1866,3.175,1867,4.612,1868,3.175,1869,4.612,1870,3.175,1871,3.175,1872,4.612,1873,3.175,1874,4.612,1875,3.175,1876,4.612,1877,3.175,1878,4.612,1879,3.175,1880,4.612,1881,5.96,1882,3.175,1883,4.612,1884,3.175,1885,4.612,1886,3.175,1887,3.175,1888,3.175,1889,3.175,1890,3.175,1891,5.431,1892,3.175,1893,3.175,1894,3.175,1895,3.175,1896,3.175,1897,5.431,1898,3.175,1899,3.175,1900,4.612,1901,3.175,1902,3.175,1903,4.612,1904,3.175]],["title/components/Subscription.html",[0,0.202,78,0.895]],["body/components/Subscription.html",[0,0.307,1,1.181,2,0.142,3,0.142,4,0.918,5,0.918,6,0.918,7,0.126,10,0.783,11,1.722,12,1.719,17,0.586,18,0.016,19,0.443,20,1.181,21,0.209,22,0.465,24,0.918,25,1.229,26,1.278,27,0.752,28,1.591,29,0.918,30,0.653,31,0.918,32,0.918,33,0.848,34,0.918,35,0.848,36,0.882,37,0.918,38,0.848,39,0.918,40,0.918,41,0.848,42,0.918,43,0.783,44,0.815,45,0.815,46,0.918,47,0.848,48,0.918,49,0.783,50,0.918,51,0.815,52,0.918,53,0.848,54,0.918,55,0.848,56,0.848,57,0.918,58,0.752,59,0.918,60,0.848,61,0.918,62,0.918,63,0.848,64,0.918,65,0.783,66,0.918,67,0.848,68,0.918,69,0.783,70,0.815,71,0.918,72,0.848,73,0.918,74,0.783,75,0.918,76,0.848,77,0.918,78,1.6,79,0.918,80,0.848,81,0.918,82,0.848,83,0.918,84,0.848,85,0.848,86,0.918,87,0.815,88,0.882,89,0.693,90,0.783,91,0.815,92,0.918,93,0.815,94,0.882,95,0.918,96,0.01,97,0.01,102,0.175,103,0.527,110,0.782,111,0.221,121,1.048,122,1.091,124,1.036,126,3.888,134,0.926,136,1.075,141,0.965,142,0.815,150,1.152,161,2.515,162,1.432,163,2.023,204,1.721,350,1.621,436,3.219,443,1.806,476,3.411,478,3.156,483,3.689,509,1.212,575,3.411,812,4.583,1502,4.432,1542,2.266,1547,2.266,1658,5.516,1905,3.183,1906,6.365,1907,5.115,1908,3.183,1909,4.205,1910,5.115,1911,4.432,1912,3.673,1913,3.673,1914,5.115,1915,3.673,1916,3.673,1917,3.673,1918,3.673,1919,3.673,1920,3.673,1921,3.673,1922,5.885,1923,3.673,1924,3.673,1925,3.673,1926,3.673]],["title/guards/SubscriptionGuard.html",[1927,3.017,1928,3.017]],["body/guards/SubscriptionGuard.html",[2,0.203,3,0.203,7,0.18,17,0.674,18,0.016,19,0.633,21,0.299,22,0.665,30,0.512,96,0.012,97,0.012,102,0.25,111,0.227,114,2.459,124,0.943,127,1.734,134,1.172,136,1.894,139,2.898,141,0.992,142,0.837,150,0.951,152,1.971,159,1.883,161,2.584,163,2.225,172,1.973,229,2.584,327,1.964,350,1.666,871,4.553,1908,4.553,1909,4.836,1911,5.608,1928,5.039,1929,5.254,1930,4.553,1931,7.654,1932,5.254,1933,5.254,1934,5.254,1935,5.254,1936,5.254,1937,5.254,1938,5.254]],["title/injectables/SubscriptionService.html",[152,1.18,1909,2.559]],["body/injectables/SubscriptionService.html",[2,0.183,3,0.183,7,0.162,17,0.67,18,0.016,19,0.569,21,0.268,22,0.598,30,0.59,96,0.011,97,0.011,102,0.225,103,0.624,110,0.935,111,0.288,114,2.209,121,0.967,122,1.007,124,1.085,134,1.095,136,1.382,141,1.142,142,0.964,150,1.275,151,3.157,152,1.843,156,3.119,159,1.692,162,1.841,163,2.296,172,1.981,189,2.321,191,3.309,229,2.321,439,6.103,604,3.676,605,5.022,614,2.913,615,3.676,1046,3.997,1542,2.913,1547,2.913,1909,3.997,1939,4.091,1940,5.787,1941,7.042,1942,7.042,1943,6.05,1944,4.721,1945,4.721,1946,4.721,1947,6.05,1948,4.721,1949,6.05,1950,6.05,1951,4.721,1952,4.721,1953,4.721,1954,4.721,1955,4.721]],["title/interfaces/SubscriptionStatus.html",[98,0.731,1547,2.39]],["body/interfaces/SubscriptionStatus.html",[2,0.214,3,0.214,7,0.19,18,0.015,21,0.38,30,0.54,96,0.013,97,0.013,98,1.261,100,1.983,102,0.264,103,0.689,110,1.05,111,0.321,112,2.681,406,3.528,509,1.827,1542,4.879,1543,4.31,1544,4.796,1545,4.796,1546,4.796,1547,4.122,1548,6.457,1549,6.457,1550,6.457]],["title/components/Subtopic.html",[0,0.202,80,0.895]],["body/components/Subtopic.html",[0,0.313,1,1.209,2,0.147,3,0.147,4,0.949,5,0.949,6,0.949,7,0.13,10,0.81,11,1.726,12,1.724,13,1.258,15,1.473,17,0.552,18,0.016,19,0.457,20,1.209,21,0.216,22,0.481,24,0.949,25,1.258,26,1.308,27,0.778,28,1.614,29,0.949,30,0.584,31,0.949,32,0.949,33,0.877,34,0.949,35,0.877,36,0.912,37,0.949,38,0.877,39,0.949,40,0.949,41,0.877,42,0.949,43,0.81,44,0.843,45,0.843,46,0.949,47,0.877,48,0.949,49,0.81,50,0.949,51,0.843,52,0.949,53,0.877,54,0.949,55,0.877,56,0.877,57,0.949,58,0.778,59,0.949,60,0.877,61,0.949,62,0.949,63,0.877,64,0.949,65,0.81,66,0.949,67,0.877,68,0.949,69,0.81,70,0.843,71,0.949,72,0.877,73,0.949,74,0.81,75,0.949,76,0.877,77,0.949,78,0.877,79,0.949,80,1.617,81,0.949,82,0.877,83,0.949,84,0.877,85,0.877,86,0.949,87,0.843,88,0.912,89,0.717,90,0.81,91,0.843,92,0.949,93,0.843,94,0.912,95,0.949,96,0.01,97,0.01,102,0.181,111,0.258,124,0.987,134,0.948,146,2.336,150,0.948,204,1.416,264,3.696,279,3.229,282,2.863,332,3.696,334,2.863,342,2.956,343,1.966,509,1.728,823,4.271,1128,4.076,1129,4.076,1266,2.707,1956,3.29,1957,5.234,1958,5.234,1959,6.456,1960,6.456,1961,5.99,1962,5.99,1963,3.797,1964,3.797,1965,3.797,1966,3.797,1967,3.797,1968,3.797,1969,3.29,1970,5.234,1971,5.234,1972,3.797,1973,5.234,1974,6.456]],["title/interfaces/SubtopicModel.html",[98,0.731,1975,3.017]],["body/interfaces/SubtopicModel.html",[2,0.215,3,0.215,7,0.191,18,0.015,21,0.317,96,0.013,97,0.013,98,1.051,100,1.996,102,0.265,103,0.691,110,1.073,111,0.329,112,2.688,120,5.324,486,3.228,509,2.464,645,4.933,887,5.814,1266,3.971,1975,5.221,1976,4.826,1977,6.47]],["title/components/Toast.html",[0,0.202,82,0.895]],["body/components/Toast.html",[0,0.293,1,1.111,2,0.217,3,0.13,4,0.841,5,0.841,6,0.841,7,0.116,10,0.718,11,1.71,12,1.708,13,1.156,17,0.517,18,0.016,19,0.406,20,1.111,21,0.191,22,0.426,24,0.841,25,1.156,26,1.202,27,0.689,28,1.53,29,0.841,30,0.597,31,0.841,32,0.841,33,0.777,34,0.841,35,0.777,36,0.809,37,0.841,38,0.777,39,0.841,40,0.841,41,0.777,42,0.841,43,0.718,44,0.747,45,0.747,46,0.841,47,0.777,48,0.841,49,0.718,50,0.841,51,0.747,52,0.841,53,0.777,54,0.841,55,0.777,56,0.777,57,0.841,58,0.689,59,0.841,60,0.777,61,0.841,62,0.841,63,0.777,64,0.841,65,0.718,66,0.841,67,0.777,68,0.841,69,0.718,70,0.747,71,0.841,72,0.777,73,0.841,74,0.718,75,0.841,76,0.777,77,0.841,78,0.777,79,0.841,80,0.777,81,0.841,82,1.556,83,0.841,84,0.777,85,0.777,86,0.841,87,0.747,88,0.809,89,0.635,90,0.718,91,0.747,92,0.841,93,0.747,94,0.809,95,0.841,96,0.009,97,0.009,102,0.16,103,0.496,111,0.299,121,0.689,122,0.718,124,0.981,134,0.871,136,0.985,141,0.635,142,0.536,150,0.609,204,0.91,273,2.732,344,2.744,345,1.575,350,1.941,371,1.653,436,3.069,443,1.655,478,2.967,486,2.788,499,6.145,501,4.168,506,6.145,515,4.002,921,3.429,923,5.245,1262,2.788,1435,4.168,1491,5.043,1505,3.745,1519,2.621,1825,4.168,1978,2.916,1979,4.809,1980,4.809,1981,6.123,1982,3.365,1983,3.365,1984,3.365,1985,5.612,1986,4.809,1987,4.809,1988,4.809,1989,4.809,1990,4.809,1991,4.809,1992,4.809,1993,4.809,1994,4.809,1995,4.809,1996,4.809,1997,4.809,1998,4.809,1999,4.809,2000,7.218,2001,4.809,2002,4.809,2003,3.365,2004,3.365,2005,3.365,2006,3.365,2007,3.365,2008,3.365,2009,3.365,2010,3.365,2011,3.365,2012,4.809]],["title/interfaces/TopicModel.html",[98,0.731,2013,2.762]],["body/interfaces/TopicModel.html",[2,0.217,3,0.217,7,0.192,18,0.015,21,0.319,96,0.013,97,0.013,98,1.058,100,2.008,102,0.267,103,0.694,110,1.059,111,0.33,112,2.904,120,5.335,509,2.47,878,5.826,918,4.092,1977,6.484,2013,4.799,2014,4.856]],["title/components/TopicPreferences.html",[0,0.202,84,0.895]],["body/components/TopicPreferences.html",[0,0.191,1,0.844,2,0.09,3,0.09,4,0.583,5,0.583,6,0.583,7,0.08,10,0.497,11,1.648,12,1.643,13,0.56,15,0.656,17,0.601,18,0.016,19,0.281,20,0.539,24,0.583,25,0.878,26,0.913,27,0.478,28,1.274,29,0.583,30,0.675,31,0.583,32,0.583,33,0.539,34,0.583,35,0.539,36,0.56,37,0.583,38,0.539,39,0.583,40,0.583,41,0.539,42,0.583,43,0.96,44,0.811,45,0.999,46,0.583,47,0.844,48,0.583,49,0.96,50,0.583,51,0.518,52,0.583,53,0.539,54,0.583,55,0.539,56,1.572,57,0.583,58,0.478,59,0.583,60,0.539,61,0.583,62,0.583,63,0.539,64,0.583,65,0.497,66,0.583,67,0.539,68,0.583,69,0.497,70,0.518,71,0.583,72,0.539,73,0.583,74,0.497,75,0.583,76,0.539,77,0.583,78,0.539,79,0.583,80,0.539,81,0.583,82,0.539,83,0.583,84,1.04,85,1.417,86,0.583,87,0.518,88,0.56,89,0.44,90,0.497,91,0.518,92,0.583,93,0.518,94,0.56,95,0.583,96,0.007,97,0.007,102,0.111,103,0.377,110,0.485,111,0.264,121,1.3,122,1.354,124,1.022,127,0.77,129,1.275,134,0.815,136,0.683,139,1.904,141,0.689,142,0.582,146,2.158,150,0.815,161,1.147,164,0.71,172,1.028,188,2.746,204,1.378,211,1.816,222,0.802,247,2.721,263,1.892,272,2.274,273,1.63,281,1.998,285,2.009,287,1.796,300,2.254,303,2.214,310,0.994,322,1.541,327,2.681,329,1.091,336,1.663,337,1.091,344,0.95,345,1.091,347,2.413,350,0.739,358,3.123,369,1.663,370,2.009,371,1.548,375,2.021,376,2.463,377,2.463,398,1.091,428,1.709,445,2.254,461,2.413,462,3.414,472,3.883,474,1.352,476,2.117,477,1.439,483,2.954,489,2.975,509,2.025,510,1.352,528,1.147,529,1.352,531,1.439,535,2.117,536,1.352,544,2.954,553,1.352,581,2.413,594,2.254,636,4.57,639,4.795,657,2.021,824,2.778,843,2.844,861,1.816,870,1.816,914,1.541,918,3.571,919,1.541,921,1.663,923,1.816,998,1.816,1002,1.663,1024,3.506,1025,2.844,1223,2.844,1367,2.844,1369,3.506,1370,1.816,1371,2.975,1404,1.816,1406,1.663,1426,1.816,1428,2.021,1639,2.021,1680,2.021,2013,2.605,2015,5.062,2016,5.062,2017,1.816,2018,2.332,2019,2.332,2020,3.653,2021,3.653,2022,3.653,2023,3.653,2024,3.653,2025,2.332,2026,2.332,2027,2.332,2028,2.332,2029,2.332,2030,2.332,2031,2.332,2032,2.332,2033,2.332,2034,6.134,2035,6.134,2036,6.134,2037,2.332,2038,4.503,2039,1.663,2040,2.332,2041,1.816,2042,2.332,2043,2.332,2044,2.332,2045,2.332,2046,2.332,2047,2.332,2048,2.332,2049,2.332,2050,2.332,2051,2.332,2052,5.533,2053,3.165,2054,2.332,2055,2.332,2056,2.332,2057,2.332,2058,4.503,2059,2.332,2060,2.332,2061,2.332,2062,2.332,2063,2.332,2064,2.332,2065,2.332,2066,2.332,2067,2.332,2068,5.096,2069,2.332,2070,2.332,2071,2.332,2072,2.332,2073,2.332,2074,2.332,2075,2.332,2076,2.332,2077,2.332,2078,2.332,2079,3.653,2080,3.653,2081,3.653,2082,3.653]],["title/interfaces/UserModel.html",[98,0.731,225,2.006]],["body/interfaces/UserModel.html",[2,0.221,3,0.221,7,0.196,18,0.015,21,0.325,89,1.421,96,0.013,97,0.013,98,1.078,100,2.046,102,0.272,103,0.702,110,1.076,111,0.325,225,3.525,234,5.863,235,5.863,509,2.485,2083,4.949]],["title/injectables/UserService.html",[152,1.18,2084,3.017]],["body/injectables/UserService.html",[2,0.178,3,0.178,7,0.158,17,0.642,18,0.016,19,0.554,21,0.262,22,0.582,30,0.643,96,0.011,97,0.011,102,0.219,103,0.613,110,0.611,111,0.301,114,2.153,121,1.219,122,1.269,124,1.097,134,1.077,136,1.346,141,1.245,142,1.05,150,1.263,151,3.068,152,1.812,156,3.039,159,1.648,162,1.794,163,2.544,172,1.856,189,2.262,191,3.254,204,1.609,211,4.633,225,3.612,226,3.986,229,2.262,231,1.886,362,2.516,604,3.582,605,4.973,1940,5.716,2084,4.633,2085,3.986,2086,6.596,2087,6.974,2088,6.974,2089,5.95,2090,5.95,2091,5.95,2092,4.6,2093,4.6,2094,5.95,2095,4.6,2096,5.95,2097,6.596,2098,4.6,2099,5.95,2100,4.6,2101,5.95,2102,4.6,2103,4.6,2104,4.6,2105,4.6,2106,4.6]],["title/components/VerifyEmail.html",[0,0.202,87,0.86]],["body/components/VerifyEmail.html",[0,0.302,1,1.154,2,0.137,3,0.137,4,0.888,5,0.888,6,0.888,7,0.122,10,0.757,11,1.718,12,1.715,13,1.201,15,1.406,17,0.532,18,0.016,19,0.428,20,0.82,21,0.202,22,0.45,24,0.888,25,1.201,26,1.249,27,0.727,28,1.568,29,0.888,30,0.612,31,0.888,32,0.888,33,0.82,34,0.888,35,0.82,36,0.853,37,0.888,38,0.82,39,0.888,40,0.888,41,0.82,42,0.888,43,0.757,44,0.788,45,0.788,46,0.888,47,0.82,48,0.888,49,0.757,50,0.888,51,0.788,52,0.888,53,0.82,54,0.888,55,0.82,56,0.82,57,0.888,58,1.184,59,0.888,60,0.82,61,0.888,62,0.888,63,0.82,64,0.888,65,0.757,66,0.888,67,0.82,68,0.888,69,0.757,70,0.788,71,0.888,72,0.82,73,0.888,74,0.757,75,0.888,76,0.82,77,0.888,78,0.82,79,0.888,80,0.82,81,0.888,82,0.82,83,0.888,84,0.82,85,0.82,86,0.888,87,1.467,88,1.692,89,1.329,90,0.757,91,0.788,92,0.888,93,0.788,94,0.853,95,0.888,96,0.009,97,0.009,102,0.169,103,0.515,111,0.153,121,1.023,122,1.065,124,0.842,127,1.172,136,1.04,138,3.248,139,2.562,141,0.67,142,0.566,146,1.385,162,1.385,164,1.522,165,4.122,222,1.221,231,1.126,243,4.884,247,2.457,303,1.747,327,1.867,350,1.126,371,1.987,376,3.161,377,1.943,393,2.766,394,4.33,395,4.33,398,1.662,402,3.563,404,4.33,408,2.346,421,2.532,426,3.563,428,2.935,572,3.301,988,3.078,990,3.078,1386,2.766,2107,5.435,2108,4.884,2109,7.043,2110,3.552,2111,3.552,2112,3.552,2113,3.552,2114,3.552,2115,3.552,2116,3.552,2117,3.552,2118,3.552,2119,3.552,2120,3.552,2121,3.552,2122,4.996,2123,3.552,2124,3.552,2125,4.996,2126,4.996,2127,4.996]],["title/interfaces/VerifyEmailResponse.html",[98,0.731,1261,2.39]],["body/interfaces/VerifyEmailResponse.html",[2,0.212,3,0.212,7,0.188,17,0.503,18,0.015,21,0.422,30,0.533,89,1.251,96,0.013,97,0.013,98,1.4,100,1.959,102,0.26,103,0.684,110,1.066,111,0.286,112,2.667,194,3.612,198,3.612,213,3.169,225,3.434,236,3.843,259,3.843,362,2.99,1255,3.373,1256,3.612,1257,3.612,1258,3.899,1259,3.373,1260,3.899,1261,4.091,1262,4.301]],["title/coverage.html",[2128,4.599]],["body/coverage.html",[0,0.411,7,0.103,8,2.61,9,2.61,12,0.642,18,0.016,22,0.562,27,0.909,33,0.696,35,0.696,38,0.696,41,0.696,43,0.642,45,0.985,47,0.696,49,0.642,51,0.668,53,0.696,55,0.696,58,0.617,60,0.696,63,0.696,65,0.642,67,0.696,69,0.642,72,0.696,74,0.642,76,0.696,78,0.696,80,0.696,82,0.696,84,0.696,85,0.696,87,0.668,91,0.668,93,0.668,96,0.008,97,0.008,98,1.429,99,2.148,101,2.61,111,0.279,113,2.61,130,2.61,131,2.148,133,2.61,138,1.56,152,2.138,190,2.61,213,1.746,223,1.746,225,1.56,231,0.955,256,1.99,257,3.455,258,2.61,262,2.61,264,1.858,268,1.99,289,1.99,310,3.497,343,1.56,344,1.227,379,2.61,391,2.61,392,2.345,393,3.455,433,2.61,434,2.345,435,2.61,447,2.61,472,3.666,473,2.61,474,1.746,475,2.61,507,2.345,508,2.61,512,1.647,514,1.99,516,3.48,517,3.48,518,3.757,528,1.481,534,1.99,597,2.345,598,2.61,599,2.345,600,2.61,614,2.738,621,2.61,672,2.61,673,2.61,706,2.345,724,2.61,746,2.61,764,2.61,765,2.61,793,2.61,817,2.61,818,2.345,819,2.61,824,1.858,1167,2.61,1191,1.746,1212,2.61,1255,1.858,1256,3.84,1257,3.84,1259,1.858,1261,1.858,1264,2.61,1265,2.61,1286,2.345,1287,2.345,1288,2.61,1437,2.61,1438,2.345,1439,2.61,1484,3.455,1490,2.345,1516,2.61,1517,2.61,1542,1.858,1543,3.455,1547,1.858,1551,2.61,1664,2.61,1698,3.84,1699,1.99,1700,1.99,1718,2.61,1741,2.61,1800,2.61,1810,2.345,1851,2.61,1905,2.61,1909,1.99,1927,2.345,1928,2.345,1930,2.61,1939,2.61,1956,2.61,1975,2.345,1976,2.61,1978,2.61,2013,2.148,2014,2.61,2015,3.164,2016,3.164,2017,3.455,2083,2.61,2084,2.345,2085,2.61,2107,2.61,2108,2.345,2128,2.61,2129,3.012,2130,3.012,2131,3.012,2132,2.61,2133,6.197,2134,2.61,2135,7.522,2136,2.61,2137,2.148,2138,4.437,2139,6.482,2140,2.61,2141,2.61,2142,2.61,2143,6.482,2144,6.878,2145,6.482,2146,2.61,2147,6.197,2148,6.482,2149,2.61,2150,4.437,2151,6.197,2152,4.437,2153,5.268,2154,3.012,2155,3.012,2156,3.012,2157,3.012,2158,3.012,2159,3.012,2160,3.012,2161,3.012,2162,3.012,2163,2.61,2164,2.61,2165,3.012,2166,2.61,2167,2.61,2168,3.012,2169,3.012]],["title/dependencies.html",[2170,2.795,2171,4.042]],["body/dependencies.html",[18,0.016,19,0.697,96,0.013,97,0.013,127,1.909,159,2.073,337,2.707,443,2.844,1266,5.213,1279,5.012,1280,4.504,1282,5.943,1969,5.012,2171,5.012,2172,7.828,2173,5.784,2174,5.784,2175,5.784,2176,5.784,2177,5.784,2178,5.784,2179,5.784,2180,5.784,2181,5.784,2182,5.784,2183,5.784]],["title/miscellaneous/functions.html",[2184,1.99,2185,4.042]],["body/miscellaneous/functions.html",[7,0.256,18,0.014,30,0.589,96,0.013,97,0.013,102,0.288,111,0.261,141,1.141,142,0.963,406,3.461,676,6.099,684,4.079,706,5.48,2163,5.237,2164,6.099,2184,3.729,2185,5.237,2186,6.044,2187,6.044]],["title/index.html",[102,0.184,2188,3.874]],["body/index.html",[0,0.352,1,1.112,3,0.186,18,0.012,90,1.026,96,0.012,97,0.012,121,1.255,186,3.432,231,1.526,466,4.171,553,2.79,565,4.839,581,3.18,590,3.432,594,4.158,633,3.18,901,4.171,966,4.171,1263,4.171,1280,3.748,1352,6.488,1385,4.171,1427,3.432,1463,5.309,1689,4.171,1691,4.171,1715,4.171,2039,3.432,2189,4.813,2190,6.739,2191,6.126,2192,7.093,2193,7.325,2194,4.171,2195,4.813,2196,6.126,2197,6.739,2198,4.171,2199,7.487,2200,7.487,2201,4.813,2202,6.126,2203,4.813,2204,4.813,2205,4.813,2206,6.126,2207,4.813,2208,4.813,2209,4.813,2210,4.813,2211,6.126,2212,4.813,2213,4.813,2214,4.813,2215,4.813,2216,4.813,2217,4.813,2218,4.813,2219,4.813,2220,6.739,2221,4.813,2222,4.813,2223,4.813,2224,4.813,2225,4.813,2226,4.171,2227,4.813,2228,4.813,2229,4.813,2230,6.126,2231,6.739,2232,4.813,2233,4.813,2234,4.813,2235,4.813,2236,4.813,2237,4.813,2238,6.739,2239,4.813,2240,4.813,2241,6.126,2242,4.813,2243,4.813,2244,4.813,2245,4.813,2246,4.813,2247,4.813,2248,4.813,2249,4.813,2250,4.813,2251,4.813]],["title/modules.html",[2041,4.133]],["body/modules.html",[18,0.014,96,0.014,97,0.014,2041,4.962]],["title/overview.html",[2039,3.784]],["body/overview.html",[1,1.421,18,0.014,90,1.312,96,0.014,97,0.014,100,2.205,189,3.026,310,2.622,343,3.187,515,4.388,914,4.698,919,4.698,1927,4.792,2039,4.388,2252,6.154,2253,6.154,2254,6.154]],["title/properties.html",[103,0.481,2170,2.795]],["body/properties.html",[18,0.014,96,0.014,97,0.014,103,0.652,2194,5.483,2255,6.327]],["title/routes.html",[2137,3.784]],["body/routes.html",[18,0.014,96,0.014,97,0.014,2137,4.544]],["title/miscellaneous/typealiases.html",[2184,1.99,2256,4.665]],["body/miscellaneous/typealiases.html",[2,0.221,18,0.015,85,1.572,96,0.013,97,0.013,102,0.272,111,0.325,200,5.662,257,4.447,289,4.497,371,1.963,472,3.123,723,2.958,911,3.945,912,3.31,941,3.31,1262,3.31,1484,4.447,1490,5.3,1505,4.447,1698,3.773,1700,4.497,1810,5.3,2015,4.072,2016,4.072,2017,5.3,2146,5.898,2149,4.949,2184,3.524,2257,5.711,2258,5.711,2259,5.711,2260,5.711,2261,5.711,2262,5.711]],["title/miscellaneous/variables.html",[2184,1.99,2263,4.042]],["body/miscellaneous/variables.html",[18,0.016,36,0.91,44,0.84,51,0.84,56,0.874,58,0.775,74,0.807,88,0.91,89,0.986,96,0.01,97,0.01,102,0.18,111,0.292,121,1.386,122,1.443,131,2.7,143,2.948,146,1.477,149,3.281,154,3.281,164,1.591,172,1.065,188,2.445,230,2.948,273,1.689,327,1.415,329,1.772,350,1.656,371,1.796,392,2.948,445,2.336,516,2.501,517,2.501,531,2.336,601,4.068,614,3.979,630,2.336,818,2.948,1012,4.598,1015,2.948,1101,4.527,1286,2.948,1287,2.948,1371,2.501,1406,2.7,1418,3.281,1438,2.948,1491,2.948,1519,2.948,1526,3.281,1528,3.281,1767,4.527,2015,2.7,2016,2.7,2053,3.281,2108,2.948,2132,3.281,2134,4.527,2136,3.281,2137,4.265,2140,3.281,2141,4.527,2142,4.527,2166,3.281,2167,3.281,2184,2.336,2198,3.281,2226,4.527,2263,3.281,2264,3.786,2265,3.786,2266,3.786,2267,3.786,2268,3.786,2269,3.786,2270,3.786,2271,3.786,2272,3.786,2273,3.786,2274,3.786,2275,3.786,2276,3.786,2277,3.786,2278,3.786,2279,3.786,2280,3.786,2281,3.786,2282,3.786,2283,3.786,2284,3.786,2285,3.786,2286,3.786,2287,3.786,2288,3.786,2289,7.643,2290,7.643,2291,3.786,2292,3.786,2293,3.786,2294,3.786,2295,3.786,2296,3.786,2297,3.786,2298,5.224,2299,3.786,2300,3.786,2301,3.786,2302,5.224,2303,3.786,2304,3.786,2305,3.786,2306,3.786,2307,3.786,2308,3.786,2309,3.786,2310,3.786,2311,5.981,2312,3.786,2313,3.786,2314,3.786,2315,3.786,2316,3.786,2317,3.786,2318,3.786,2319,3.786,2320,3.786,2321,3.786,2322,3.786,2323,3.786,2324,3.786,2325,3.786,2326,3.786]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"components/About.html":{},"interfaces/AnswerModel.html":{},"components/App.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/ChatMessage.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"interfaces/ExamModel.html":{},"classes/ExamSettings.html":{},"interfaces/ExerciseModel.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"directives/PasswordValidator.html":{},"interfaces/Plan.html":{},"components/Practice.html":{},"components/Pricing.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"interfaces/SignupPayload.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"interfaces/SubscriptionStatus.html":{},"components/Subtopic.html":{},"interfaces/SubtopicModel.html":{},"components/Toast.html":{},"interfaces/TopicModel.html":{},"components/TopicPreferences.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"components/VerifyEmail.html":{},"interfaces/VerifyEmailResponse.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":310,"title":{},"body":{"components/Chatbot.html":{},"components/CheckEmail.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Home.html":{},"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{},"coverage.html":{},"overview.html":{}}}],["0.0.0",{"_index":2255,"title":{},"body":{"properties.html":{}}}],["0.16.22",{"_index":2174,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2135,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2150,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2160,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2154,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2152,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2155,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2158,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2156,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2138,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2159,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2157,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2139,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2144,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2145,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2148,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2143,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2151,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2153,"title":{},"body":{"coverage.html":{}}}],["0/per",{"_index":1675,"title":{},"body":{"components/Pricing.html":{}}}],["01t12:00:00z",{"_index":1820,"title":{},"body":{"components/Subjects.html":{}}}],["1",{"_index":914,"title":{},"body":{"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/TopicPreferences.html":{},"overview.html":{}}}],["1.3.1",{"_index":2181,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":686,"title":{},"body":{"directives/FileTypeDirective.html":{},"components/Subjects.html":{}}}],["100",{"_index":1113,"title":{},"body":{"components/LessonPage.html":{},"components/Pricing.html":{},"components/Subjects.html":{}}}],["1024",{"_index":687,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["10mb",{"_index":692,"title":{},"body":{"directives/FileTypeDirective.html":{},"components/Pricing.html":{}}}],["14.1.0",{"_index":2175,"title":{},"body":{"dependencies.html":{}}}],["15,000/per",{"_index":1694,"title":{},"body":{"components/Pricing.html":{}}}],["16",{"_index":2254,"title":{},"body":{"overview.html":{}}}],["1_000",{"_index":1356,"title":{},"body":{"components/NamingUpload.html":{}}}],["1_000_000",{"_index":1353,"title":{},"body":{"components/NamingUpload.html":{}}}],["2",{"_index":919,"title":{},"body":{"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/Pricing.html":{},"components/TopicPreferences.html":{},"overview.html":{}}}],["2.0.3",{"_index":2176,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":2183,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1692,"title":{},"body":{"components/Pricing.html":{}}}],["20.0.0",{"_index":2177,"title":{},"body":{"dependencies.html":{}}}],["20.1.5",{"_index":2195,"title":{},"body":{"index.html":{}}}],["20.3.2",{"_index":2172,"title":{},"body":{"dependencies.html":{}}}],["2025",{"_index":469,"title":{},"body":{"components/Contact.html":{}}}],["20_000_000",{"_index":1333,"title":{},"body":{"components/NamingUpload.html":{}}}],["20mb",{"_index":1334,"title":{},"body":{"components/NamingUpload.html":{},"components/Pricing.html":{}}}],["25",{"_index":1696,"title":{},"body":{"components/Pricing.html":{}}}],["250",{"_index":505,"title":{},"body":{"components/CreationStepTab.html":{}}}],["2500",{"_index":1500,"title":{},"body":{"injectables/NotificationService.html":{}}}],["25mb",{"_index":1432,"title":{},"body":{"components/NamingUpload.html":{}}}],["26",{"_index":2252,"title":{},"body":{"overview.html":{}}}],["2dkap",{"_index":1815,"title":{},"body":{"components/Subjects.html":{}}}],["3",{"_index":921,"title":{},"body":{"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{}}}],["30",{"_index":1822,"title":{},"body":{"components/Subjects.html":{}}}],["3mb",{"_index":1683,"title":{},"body":{"components/Pricing.html":{}}}],["4",{"_index":923,"title":{},"body":{"components/LessonPage.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{}}}],["4/7",{"_index":2162,"title":{},"body":{"coverage.html":{}}}],["4000",{"_index":1494,"title":{},"body":{"injectables/NotificationService.html":{}}}],["401",{"_index":176,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["404",{"_index":1465,"title":{},"body":{"components/NotFound.html":{}}}],["5",{"_index":1680,"title":{},"body":{"components/Pricing.html":{},"components/TopicPreferences.html":{}}}],["50",{"_index":1825,"title":{},"body":{"components/Subjects.html":{},"components/Toast.html":{}}}],["500",{"_index":506,"title":{},"body":{"components/CreationStepTab.html":{},"components/Toast.html":{}}}],["5000",{"_index":1497,"title":{},"body":{"injectables/NotificationService.html":{}}}],["57",{"_index":2161,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":2042,"title":{},"body":{"components/TopicPreferences.html":{}}}],["60",{"_index":416,"title":{},"body":{"components/CheckEmail.html":{}}}],["6000/per",{"_index":1686,"title":{},"body":{"components/Pricing.html":{}}}],["7",{"_index":2044,"title":{},"body":{"components/TopicPreferences.html":{}}}],["7.8.0",{"_index":2178,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1534,"title":{},"body":{"directives/PasswordValidator.html":{},"components/Pricing.html":{},"components/Signup.html":{}}}],["800",{"_index":502,"title":{},"body":{"components/CreationStepTab.html":{}}}],["9",{"_index":2253,"title":{},"body":{"overview.html":{}}}],["900",{"_index":504,"title":{},"body":{"components/CreationStepTab.html":{}}}],["_timer",{"_index":1485,"title":{},"body":{"injectables/NotificationService.html":{}}}],["a2m90",{"_index":2036,"title":{},"body":{"components/TopicPreferences.html":{}}}],["about'},{'name",{"_index":31,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["about.css",{"_index":16,"title":{},"body":{"components/About.html":{}}}],["about.html",{"_index":14,"title":{},"body":{"components/About.html":{}}}],["abstractcontrol",{"_index":1521,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["access",{"_index":1243,"title":{},"body":{"components/Login.html":{},"components/Pricing.html":{}}}],["accessors",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesstoken",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"interfaces/SignupPayload.html":{},"interfaces/VerifyEmailResponse.html":{}}}],["account",{"_index":745,"title":{},"body":{"components/Header.html":{},"components/Signup.html":{}}}],["active",{"_index":484,"title":{},"body":{"components/CreationStepTab.html":{}}}],["activities",{"_index":963,"title":{},"body":{"components/LessonPage.html":{}}}],["actual_component",{"_index":95,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["actually",{"_index":1634,"title":{},"body":{"components/Practice.html":{}}}],["adapt",{"_index":667,"title":{},"body":{"components/Features.html":{}}}],["added",{"_index":1350,"title":{},"body":{"components/NamingUpload.html":{}}}],["addfiles",{"_index":1294,"title":{},"body":{"components/NamingUpload.html":{}}}],["addfiles(filelist",{"_index":1302,"title":{},"body":{"components/NamingUpload.html":{}}}],["additional",{"_index":2246,"title":{},"body":{"index.html":{}}}],["address",{"_index":1244,"title":{},"body":{"components/Login.html":{},"components/Signup.html":{}}}],["africa",{"_index":979,"title":{},"body":{"components/LessonPage.html":{}}}],["afterviewinit",{"_index":335,"title":{},"body":{"components/Chatbot.html":{}}}],["again",{"_index":377,"title":{},"body":{"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["ai",{"_index":663,"title":{},"body":{"components/Features.html":{},"components/Landing.html":{},"components/Signup.html":{}}}],["alert(\"failed",{"_index":1834,"title":{},"body":{"components/Subjects.html":{}}}],["alert('email",{"_index":2121,"title":{},"body":{"components/VerifyEmail.html":{}}}],["alert('invalid",{"_index":2123,"title":{},"body":{"components/VerifyEmail.html":{}}}],["alias",{"_index":2147,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":2257,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowed",{"_index":682,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["allowedextensions.includes(ext",{"_index":1330,"title":{},"body":{"components/NamingUpload.html":{}}}],["allsubtopicsread",{"_index":1123,"title":{},"body":{"components/LessonPage.html":{}}}],["alongside",{"_index":1717,"title":{},"body":{"components/QuestionSettings.html":{}}}],["altering",{"_index":971,"title":{},"body":{"components/LessonPage.html":{}}}],["always",{"_index":1476,"title":{},"body":{"components/NotFound.html":{}}}],["amazon",{"_index":931,"title":{},"body":{"components/LessonPage.html":{}}}],["america",{"_index":981,"title":{},"body":{"components/LessonPage.html":{}}}],["angular",{"_index":2192,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":443,"title":{},"body":{"components/ConfirmLogout.html":{},"components/CreationStepTab.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/NotFound.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Toast.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":156,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/ExerciseService.html":{},"injectables/HttpBaseService.html":{},"injectables/SubscriptionService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":2173,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":19,"title":{},"body":{"components/About.html":{},"components/App.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"injectables/UserService.html":{},"components/VerifyEmail.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":337,"title":{},"body":{"components/Chatbot.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{},"components/TopicPreferences.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1279,"title":{},"body":{"pipes/MarkdownPipe.html":{},"dependencies.html":{}}}],["angular/router",{"_index":127,"title":{},"body":{"components/App.html":{},"interceptors/AuthInterceptor.html":{},"components/CheckEmail.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"guards/SubscriptionGuard.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"dependencies.html":{}}}],["answer",{"_index":965,"title":{},"body":{"components/LessonPage.html":{},"injectables/LessonService.html":{}}}],["answermodel",{"_index":99,"title":{"interfaces/AnswerModel.html":{}},"body":{"interfaces/AnswerModel.html":{},"injectables/ExerciseService.html":{},"coverage.html":{}}}],["answers",{"_index":1660,"title":{},"body":{"components/Practice.html":{}}}],["anyways",{"_index":1460,"title":{},"body":{"components/NotFound.html":{}}}],["api",{"_index":1767,"title":{},"body":{"components/Signup.html":{},"miscellaneous/variables.html":{}}}],["api/users",{"_index":2099,"title":{},"body":{"injectables/UserService.html":{}}}],["apiurl",{"_index":601,"title":{},"body":{"injectables/ExerciseService.html":{},"injectables/HttpBaseService.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":12,"title":{"components/App.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["app.css",{"_index":117,"title":{},"body":{"components/App.html":{}}}],["app.html",{"_index":116,"title":{},"body":{"components/App.html":{}}}],["appconfig",{"_index":2134,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appfiletype",{"_index":674,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["appfiletype]'},{'name",{"_index":92,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["application",{"_index":2206,"title":{},"body":{"index.html":{}}}],["application/pdf','image/png",{"_index":685,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["applicationconfig",{"_index":2269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apppasswordvalidator",{"_index":94,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["arctic",{"_index":959,"title":{},"body":{"components/LessonPage.html":{}}}],["areas",{"_index":670,"title":{},"body":{"components/Features.html":{}}}],["arguments",{"_index":699,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["array",{"_index":525,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/QuestionSettings.html":{}}}],["array.isarray(topic.subtopics",{"_index":1124,"title":{},"body":{"components/LessonPage.html":{}}}],["artifacts",{"_index":2223,"title":{},"body":{"index.html":{}}}],["asia",{"_index":978,"title":{},"body":{"components/LessonPage.html":{}}}],["asked",{"_index":1639,"title":{},"body":{"components/Practice.html":{},"components/TopicPreferences.html":{}}}],["assesment",{"_index":2043,"title":{},"body":{"components/TopicPreferences.html":{}}}],["assistant",{"_index":367,"title":{},"body":{"components/Chatbot.html":{},"components/LessonPage.html":{},"components/Signup.html":{}}}],["assuming",{"_index":995,"title":{},"body":{"components/LessonPage.html":{}}}],["async",{"_index":1636,"title":{},"body":{"components/Practice.html":{}}}],["atlantic",{"_index":928,"title":{},"body":{"components/LessonPage.html":{}}}],["auth",{"_index":143,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/Header.html":{},"miscellaneous/variables.html":{}}}],["authinterceptor",{"_index":131,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authorization",{"_index":170,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/HttpBaseService.html":{}}}],["authreq",{"_index":167,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authservice",{"_index":138,"title":{"injectables/AuthService.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CheckEmail.html":{},"components/Header.html":{},"components/Login.html":{},"components/Signup.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["automatically",{"_index":2207,"title":{},"body":{"index.html":{}}}],["autoresize",{"_index":1555,"title":{},"body":{"components/Practice.html":{}}}],["autoresize(event",{"_index":1569,"title":{},"body":{"components/Practice.html":{}}}],["autoscrolleffect",{"_index":267,"title":{},"body":{"components/Chatbot.html":{}}}],["available",{"_index":2217,"title":{},"body":{"index.html":{}}}],["b",{"_index":1358,"title":{},"body":{"components/NamingUpload.html":{}}}],["back",{"_index":1242,"title":{},"body":{"components/Login.html":{},"components/NotFound.html":{},"components/Sidebar.html":{}}}],["backend",{"_index":2053,"title":{},"body":{"components/TopicPreferences.html":{},"miscellaneous/variables.html":{}}}],["base.service",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatbotService.html":{},"injectables/LessonService.html":{},"injectables/SubjectsService.html":{}}}],["base.service.ts",{"_index":765,"title":{},"body":{"injectables/HttpBaseService.html":{},"coverage.html":{}}}],["base.service.ts:11",{"_index":784,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["base.service.ts:12",{"_index":786,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["base.service.ts:14",{"_index":776,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["base.service.ts:21",{"_index":775,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["base.service.ts:25",{"_index":780,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["base.service.ts:29",{"_index":782,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["base.service.ts:33",{"_index":771,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["based",{"_index":859,"title":{},"body":{"components/LessonPage.html":{}}}],["baseurl",{"_index":1940,"title":{},"body":{"injectables/SubscriptionService.html":{},"injectables/UserService.html":{}}}],["basic",{"_index":1674,"title":{},"body":{"components/Pricing.html":{}}}],["basics",{"_index":881,"title":{},"body":{"components/LessonPage.html":{}}}],["bearer",{"_index":171,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/HttpBaseService.html":{}}}],["before",{"_index":305,"title":{},"body":{"components/Chatbot.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["behaviorsubject",{"_index":2102,"title":{},"body":{"injectables/UserService.html":{}}}],["behaviorsubject(null",{"_index":2101,"title":{},"body":{"injectables/UserService.html":{}}}],["berlin",{"_index":922,"title":{},"body":{"components/LessonPage.html":{}}}],["between",{"_index":884,"title":{},"body":{"components/LessonPage.html":{}}}],["bg",{"_index":499,"title":{},"body":{"components/CreationStepTab.html":{},"components/Toast.html":{}}}],["bgcolour",{"_index":481,"title":{},"body":{"components/CreationStepTab.html":{}}}],["biodiversity",{"_index":974,"title":{},"body":{"components/LessonPage.html":{}}}],["blue",{"_index":501,"title":{},"body":{"components/CreationStepTab.html":{},"components/Toast.html":{}}}],["body",{"_index":779,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["boolean",{"_index":112,"title":{},"body":{"interfaces/AnswerModel.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"interfaces/Plan.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{},"interfaces/SignupPayload.html":{},"injectables/SubjectsService.html":{},"interfaces/SubscriptionStatus.html":{},"interfaces/SubtopicModel.html":{},"interfaces/TopicModel.html":{},"interfaces/VerifyEmailResponse.html":{}}}],["bottom",{"_index":1987,"title":{},"body":{"components/Toast.html":{}}}],["break",{"_index":1056,"title":{},"body":{"components/LessonPage.html":{}}}],["brief_description",{"_index":1977,"title":{},"body":{"interfaces/SubtopicModel.html":{},"interfaces/TopicModel.html":{}}}],["brings",{"_index":1477,"title":{},"body":{"components/NotFound.html":{}}}],["bro",{"_index":1638,"title":{},"body":{"components/Practice.html":{}}}],["browser",{"_index":1280,"title":{},"body":{"pipes/MarkdownPipe.html":{},"dependencies.html":{},"index.html":{}}}],["bug",{"_index":1458,"title":{},"body":{"components/NotFound.html":{}}}],["build",{"_index":2220,"title":{},"body":{"index.html":{}}}],["buildthis",{"_index":2221,"title":{},"body":{"index.html":{}}}],["bytes",{"_index":691,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["calculate",{"_index":1105,"title":{},"body":{"components/LessonPage.html":{}}}],["call",{"_index":1386,"title":{},"body":{"components/NamingUpload.html":{},"components/Signup.html":{},"components/VerifyEmail.html":{}}}],["can't",{"_index":1471,"title":{},"body":{"components/NotFound.html":{}}}],["can\\'t",{"_index":1482,"title":{},"body":{"components/NotFound.html":{}}}],["canactivate",{"_index":1931,"title":{},"body":{"guards/SubscriptionGuard.html":{}}}],["cancel",{"_index":439,"title":{},"body":{"components/ConfirmLogout.html":{},"injectables/SubscriptionService.html":{}}}],["cancellogout",{"_index":729,"title":{},"body":{"components/Header.html":{}}}],["cap",{"_index":1335,"title":{},"body":{"components/NamingUpload.html":{}}}],["capital",{"_index":891,"title":{},"body":{"components/LessonPage.html":{}}}],["capitalizefirstletter",{"_index":826,"title":{},"body":{"components/LessonPage.html":{}}}],["capitalizefirstletter(currentview.type",{"_index":1156,"title":{},"body":{"components/LessonPage.html":{}}}],["capitalizefirstletter(str",{"_index":836,"title":{},"body":{"components/LessonPage.html":{}}}],["capitals",{"_index":890,"title":{},"body":{"components/LessonPage.html":{}}}],["caps",{"_index":1135,"title":{},"body":{"components/LessonPage.html":{},"components/Practice.html":{}}}],["case",{"_index":1384,"title":{},"body":{"components/NamingUpload.html":{}}}],["catcherror",{"_index":157,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/Practice.html":{}}}],["catcherror((err",{"_index":174,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/NamingUpload.html":{}}}],["catcherror(err",{"_index":1628,"title":{},"body":{"components/Practice.html":{}}}],["categorized",{"_index":1848,"title":{},"body":{"components/Subjects.html":{}}}],["cdr",{"_index":287,"title":{},"body":{"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["center",{"_index":1992,"title":{},"body":{"components/Toast.html":{}}}],["chain",{"_index":1394,"title":{},"body":{"components/NamingUpload.html":{}}}],["challenge",{"_index":661,"title":{},"body":{"components/Features.html":{}}}],["change",{"_index":680,"title":{},"body":{"directives/FileTypeDirective.html":{},"components/LessonPage.html":{}}}],["changedetectorref",{"_index":285,"title":{},"body":{"components/Chatbot.html":{},"components/CheckEmail.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["changeprogress",{"_index":1559,"title":{},"body":{"components/Practice.html":{}}}],["changequestion",{"_index":1560,"title":{},"body":{"components/Practice.html":{}}}],["changes",{"_index":301,"title":{},"body":{"components/Chatbot.html":{},"components/Practice.html":{}}}],["changesubtopic",{"_index":827,"title":{},"body":{"components/LessonPage.html":{}}}],["changesubtopic(event",{"_index":839,"title":{},"body":{"components/LessonPage.html":{}}}],["characters",{"_index":1794,"title":{},"body":{"components/Signup.html":{}}}],["chat",{"_index":378,"title":{},"body":{"components/Chatbot.html":{},"components/LessonPage.html":{}}}],["chatbot",{"_index":33,"title":{"components/Chatbot.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["chatbot'},{'name",{"_index":34,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["chatbot.css",{"_index":266,"title":{},"body":{"components/Chatbot.html":{}}}],["chatbot.html",{"_index":265,"title":{},"body":{"components/Chatbot.html":{}}}],["chatbot/chatbot",{"_index":867,"title":{},"body":{"components/LessonPage.html":{}}}],["chatbotservice",{"_index":268,"title":{"injectables/ChatbotService.html":{}},"body":{"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/LessonPage.html":{},"coverage.html":{}}}],["chatcontainer",{"_index":269,"title":{},"body":{"components/Chatbot.html":{}}}],["chathistory",{"_index":280,"title":{},"body":{"components/Chatbot.html":{},"components/LessonPage.html":{}}}],["chatmessage",{"_index":256,"title":{"interfaces/ChatMessage.html":{}},"body":{"interfaces/ChatMessage.html":{},"components/Chatbot.html":{},"components/LessonPage.html":{},"coverage.html":{}}}],["chatmetadata",{"_index":289,"title":{},"body":{"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/LessonPage.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["chatopen",{"_index":822,"title":{},"body":{"components/LessonPage.html":{}}}],["check",{"_index":36,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"miscellaneous/variables.html":{}}}],["checkemail",{"_index":35,"title":{"components/CheckEmail.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["checkfortopiccompleteness",{"_index":828,"title":{},"body":{"components/LessonPage.html":{}}}],["checkfortopiccompleteness(topic_id",{"_index":841,"title":{},"body":{"components/LessonPage.html":{}}}],["cheeky",{"_index":1446,"title":{},"body":{"components/NotFound.html":{}}}],["choice",{"_index":912,"title":{},"body":{"components/LessonPage.html":{},"components/Practice.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{},"miscellaneous/typealiases.html":{}}}],["choose",{"_index":1715,"title":{},"body":{"components/QuestionSettings.html":{},"index.html":{}}}],["city",{"_index":892,"title":{},"body":{"components/LessonPage.html":{}}}],["clarity",{"_index":1478,"title":{},"body":{"components/NotFound.html":{}}}],["class",{"_index":22,"title":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{}},"body":{"components/About.html":{},"components/App.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"pipes/MarkdownPipe.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"injectables/UserService.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["classes",{"_index":515,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Toast.html":{},"overview.html":{}}}],["clear",{"_index":181,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/NotificationService.html":{}}}],["cleartimeout(this._timer",{"_index":1508,"title":{},"body":{"injectables/NotificationService.html":{}}}],["cli",{"_index":2193,"title":{},"body":{"index.html":{}}}],["click)=\"resendverificationemail",{"_index":431,"title":{},"body":{"components/CheckEmail.html":{}}}],["climate",{"_index":943,"title":{},"body":{"components/LessonPage.html":{}}}],["climates",{"_index":903,"title":{},"body":{"components/LessonPage.html":{}}}],["close",{"_index":1981,"title":{},"body":{"components/Toast.html":{}}}],["closechat",{"_index":283,"title":{},"body":{"components/Chatbot.html":{}}}],["code",{"_index":1463,"title":{},"body":{"components/NotFound.html":{},"index.html":{}}}],["collect",{"_index":563,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["come",{"_index":2243,"title":{},"body":{"index.html":{}}}],["command",{"_index":2238,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":436,"title":{},"body":{"components/ConfirmLogout.html":{},"components/CreationStepTab.html":{},"components/Header.html":{},"components/Landing.html":{},"components/NotFound.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Toast.html":{}}}],["companion",{"_index":463,"title":{},"body":{"components/Contact.html":{}}}],["compile",{"_index":2222,"title":{},"body":{"index.html":{}}}],["complete",{"_index":590,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{},"index.html":{}}}],["completed",{"_index":878,"title":{},"body":{"components/LessonPage.html":{},"components/Subjects.html":{},"interfaces/TopicModel.html":{}}}],["completed}/${total",{"_index":1115,"title":{},"body":{"components/LessonPage.html":{}}}],["completion",{"_index":1821,"title":{},"body":{"components/Subjects.html":{}}}],["complex",{"_index":635,"title":{},"body":{"components/Features.html":{},"components/Signup.html":{}}}],["complexity",{"_index":644,"title":{},"body":{"components/Features.html":{}}}],["component",{"_index":0,"title":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":29,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["components",{"_index":1,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"index.html":{},"overview.html":{}}}],["comprehension",{"_index":629,"title":{},"body":{"components/Features.html":{}}}],["computed",{"_index":1985,"title":{},"body":{"components/Toast.html":{}}}],["concepts",{"_index":658,"title":{},"body":{"components/Features.html":{}}}],["confirm",{"_index":39,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["confirm(\"are",{"_index":1601,"title":{},"body":{"components/Practice.html":{}}}],["confirmlogout",{"_index":38,"title":{"components/ConfirmLogout.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["confirmpassword",{"_index":1260,"title":{},"body":{"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"interfaces/SignupPayload.html":{},"interfaces/VerifyEmailResponse.html":{}}}],["consistent",{"_index":1687,"title":{},"body":{"components/Pricing.html":{}}}],["console.error(\"error",{"_index":591,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["console.error(\"failed",{"_index":587,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["console.error('email",{"_index":2120,"title":{},"body":{"components/VerifyEmail.html":{}}}],["console.error('error",{"_index":1369,"title":{},"body":{"components/NamingUpload.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["console.error('failed",{"_index":1068,"title":{},"body":{"components/LessonPage.html":{},"components/Practice.html":{}}}],["console.error('login",{"_index":1239,"title":{},"body":{"components/Login.html":{}}}],["console.error('resend",{"_index":425,"title":{},"body":{"components/CheckEmail.html":{}}}],["console.error('signup",{"_index":1782,"title":{},"body":{"components/Signup.html":{}}}],["console.error(`error",{"_index":372,"title":{},"body":{"components/Chatbot.html":{},"components/LessonPage.html":{},"components/Practice.html":{}}}],["console.error(`failed",{"_index":1087,"title":{},"body":{"components/LessonPage.html":{}}}],["console.log(\"chat",{"_index":1151,"title":{},"body":{"components/LessonPage.html":{}}}],["console.log(\"generation",{"_index":579,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["console.log(\"lesson",{"_index":2075,"title":{},"body":{"components/TopicPreferences.html":{}}}],["console.log(\"progress",{"_index":1110,"title":{},"body":{"components/LessonPage.html":{}}}],["console.log(\"session",{"_index":584,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["console.log(\"topics",{"_index":2072,"title":{},"body":{"components/TopicPreferences.html":{}}}],["console.log('email",{"_index":2117,"title":{},"body":{"components/VerifyEmail.html":{}}}],["console.log('files",{"_index":1378,"title":{},"body":{"components/NamingUpload.html":{}}}],["console.log('got",{"_index":413,"title":{},"body":{"components/CheckEmail.html":{}}}],["console.log('logged",{"_index":1235,"title":{},"body":{"components/Login.html":{}}}],["console.log('login",{"_index":1231,"title":{},"body":{"components/Login.html":{}}}],["console.log('resend",{"_index":420,"title":{},"body":{"components/CheckEmail.html":{}}}],["console.log('signup",{"_index":1778,"title":{},"body":{"components/Signup.html":{}}}],["console.log('stage",{"_index":1379,"title":{},"body":{"components/NamingUpload.html":{}}}],["console.log('subject",{"_index":1377,"title":{},"body":{"components/NamingUpload.html":{}}}],["console.log('unauthorized",{"_index":177,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["console.log(`progress",{"_index":1114,"title":{},"body":{"components/LessonPage.html":{}}}],["console.log(`selected",{"_index":1736,"title":{},"body":{"components/Sidebar.html":{}}}],["console.log(questiondata",{"_index":1646,"title":{},"body":{"components/Practice.html":{}}}],["console.log(response",{"_index":369,"title":{},"body":{"components/Chatbot.html":{},"components/NamingUpload.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["console.log(selectedtopics",{"_index":2066,"title":{},"body":{"components/TopicPreferences.html":{}}}],["console.log(this.content",{"_index":1733,"title":{},"body":{"components/Sidebar.html":{}}}],["console.log(this.currentmessage",{"_index":360,"title":{},"body":{"components/Chatbot.html":{}}}],["console.log(this.currentview",{"_index":1090,"title":{},"body":{"components/LessonPage.html":{}}}],["console.log(this.currentview()?.content?.questions.find((q",{"_index":1598,"title":{},"body":{"components/Practice.html":{}}}],["console.log(this.learningstyle",{"_index":2067,"title":{},"body":{"components/TopicPreferences.html":{}}}],["console.log(this.question",{"_index":1588,"title":{},"body":{"components/Practice.html":{}}}],["console.log(this.subjects",{"_index":1832,"title":{},"body":{"components/Subjects.html":{}}}],["console.log(this.topics",{"_index":2057,"title":{},"body":{"components/TopicPreferences.html":{}}}],["console.log(topic.exercise",{"_index":1040,"title":{},"body":{"components/LessonPage.html":{}}}],["console.log(value",{"_index":1622,"title":{},"body":{"components/Practice.html":{}}}],["const",{"_index":164,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"directives/FileTypeDirective.html":{},"injectables/HttpBaseService.html":{},"components/LessonPage.html":{},"components/Login.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":136,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"injectables/ExerciseService.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"injectables/UserService.html":{},"components/VerifyEmail.html":{}}}],["constructor(auth",{"_index":137,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/Header.html":{}}}],["constructor(cdr",{"_index":284,"title":{},"body":{"components/Chatbot.html":{},"components/LessonPage.html":{},"components/Practice.html":{}}}],["constructor(http",{"_index":604,"title":{},"body":{"injectables/ExerciseService.html":{},"injectables/SubscriptionService.html":{},"injectables/UserService.html":{}}}],["constructor(notify",{"_index":1982,"title":{},"body":{"components/Toast.html":{}}}],["constructor(private",{"_index":162,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"injectables/ExerciseService.html":{},"components/Header.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"pipes/MarkdownPipe.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"injectables/SubscriptionService.html":{},"injectables/UserService.html":{},"components/VerifyEmail.html":{}}}],["constructor(public",{"_index":2007,"title":{},"body":{"components/Toast.html":{}}}],["constructor(router",{"_index":398,"title":{},"body":{"components/CheckEmail.html":{},"components/Home.html":{},"components/Landing.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["constructor(subsvc",{"_index":1908,"title":{},"body":{"components/Subscription.html":{},"guards/SubscriptionGuard.html":{}}}],["contact",{"_index":41,"title":{"components/Contact.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["contact'},{'name",{"_index":42,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["contact.css",{"_index":449,"title":{},"body":{"components/Contact.html":{}}}],["contact.html",{"_index":448,"title":{},"body":{"components/Contact.html":{}}}],["contact/contact",{"_index":761,"title":{},"body":{"components/Home.html":{}}}],["content",{"_index":645,"title":{},"body":{"components/Features.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Sidebar.html":{},"interfaces/SubtopicModel.html":{}}}],["content().exam",{"_index":1740,"title":{},"body":{"components/Sidebar.html":{}}}],["content().topics",{"_index":1738,"title":{},"body":{"components/Sidebar.html":{}}}],["context",{"_index":349,"title":{},"body":{"components/Chatbot.html":{}}}],["continent",{"_index":977,"title":{},"body":{"components/LessonPage.html":{}}}],["continues",{"_index":1395,"title":{},"body":{"components/NamingUpload.html":{}}}],["contributing",{"_index":972,"title":{},"body":{"components/LessonPage.html":{}}}],["control",{"_index":1523,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["control.get('confirmpassword')?.value",{"_index":1540,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["control.get('password')?.value",{"_index":1538,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["control.value",{"_index":1529,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["copy",{"_index":468,"title":{},"body":{"components/Contact.html":{}}}],["core/models/chat",{"_index":338,"title":{},"body":{"components/Chatbot.html":{},"components/LessonPage.html":{}}}],["core/models/question.model",{"_index":1582,"title":{},"body":{"components/Practice.html":{}}}],["core/models/subject.model",{"_index":1828,"title":{},"body":{"components/Subjects.html":{}}}],["core/models/subscription.model",{"_index":1919,"title":{},"body":{"components/Subscription.html":{}}}],["core/models/topic.model",{"_index":2051,"title":{},"body":{"components/TopicPreferences.html":{}}}],["core/services/auth.service",{"_index":408,"title":{},"body":{"components/CheckEmail.html":{},"components/Header.html":{},"components/Login.html":{},"components/Signup.html":{},"components/VerifyEmail.html":{}}}],["core/services/chatbot.service",{"_index":340,"title":{},"body":{"components/Chatbot.html":{},"components/LessonPage.html":{}}}],["core/services/lesson.service",{"_index":870,"title":{},"body":{"components/LessonPage.html":{},"components/Practice.html":{},"components/TopicPreferences.html":{}}}],["core/services/notification.service",{"_index":345,"title":{},"body":{"components/Chatbot.html":{},"components/CheckEmail.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{}}}],["core/services/subjects.service",{"_index":529,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/QuestionSettings.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["core/services/subscription.service",{"_index":1918,"title":{},"body":{"components/Subscription.html":{}}}],["correct",{"_index":1701,"title":{},"body":{"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"interfaces/SaveQuestionData.html":{}}}],["correctcount",{"_index":1603,"title":{},"body":{"components/Practice.html":{}}}],["correctoptions",{"_index":104,"title":{},"body":{"interfaces/AnswerModel.html":{}}}],["count",{"_index":1095,"title":{},"body":{"components/LessonPage.html":{}}}],["counterintuitive",{"_index":1633,"title":{},"body":{"components/Practice.html":{}}}],["country",{"_index":894,"title":{},"body":{"components/LessonPage.html":{}}}],["course",{"_index":2038,"title":{},"body":{"components/TopicPreferences.html":{}}}],["coverage",{"_index":2128,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cpw",{"_index":1539,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["crafted",{"_index":810,"title":{},"body":{"components/Landing.html":{}}}],["create",{"_index":347,"title":{},"body":{"components/Chatbot.html":{},"components/NamingUpload.html":{},"components/Pricing.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["create/${newsubjectid}/naming",{"_index":1838,"title":{},"body":{"components/Subjects.html":{}}}],["create/${subject.id}/naming",{"_index":1841,"title":{},"body":{"components/Subjects.html":{}}}],["create/${subject.id}/question",{"_index":1843,"title":{},"body":{"components/Subjects.html":{}}}],["create/${subject.id}/topic",{"_index":1842,"title":{},"body":{"components/Subjects.html":{}}}],["create/${this.subjectid}/question",{"_index":2077,"title":{},"body":{"components/TopicPreferences.html":{}}}],["create/${this.subjectid}/topic",{"_index":1405,"title":{},"body":{"components/NamingUpload.html":{}}}],["create/:sessionid/naming",{"_index":2310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["create/:sessionid/question",{"_index":2317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["create/:sessionid/topic",{"_index":2314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["create/creation",{"_index":473,"title":{},"body":{"components/CreationStepTab.html":{},"coverage.html":{}}}],["create/naming",{"_index":1286,"title":{},"body":{"components/NamingUpload.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["create/question",{"_index":516,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["create/topic",{"_index":2015,"title":{},"body":{"components/TopicPreferences.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["created_at",{"_index":1818,"title":{},"body":{"components/Subjects.html":{}}}],["createnewsubject",{"_index":1805,"title":{},"body":{"components/Subjects.html":{}}}],["creates",{"_index":653,"title":{},"body":{"components/Features.html":{}}}],["createsubject",{"_index":1852,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["creating",{"_index":1839,"title":{},"body":{"components/Subjects.html":{}}}],["creation",{"_index":44,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"miscellaneous/variables.html":{}}}],["creationsteptab",{"_index":43,"title":{"components/CreationStepTab.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["credentials",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["cultures",{"_index":954,"title":{},"body":{"components/LessonPage.html":{}}}],["curious",{"_index":1677,"title":{},"body":{"components/Pricing.html":{}}}],["current",{"_index":857,"title":{},"body":{"components/LessonPage.html":{}}}],["currentindex",{"_index":1131,"title":{},"body":{"components/LessonPage.html":{},"components/Practice.html":{}}}],["currentmessage",{"_index":270,"title":{},"body":{"components/Chatbot.html":{}}}],["currenttopic",{"_index":1961,"title":{},"body":{"components/Subtopic.html":{}}}],["currenttopic().title",{"_index":1973,"title":{},"body":{"components/Subtopic.html":{}}}],["currentuser",{"_index":2086,"title":{},"body":{"injectables/UserService.html":{}}}],["currentview",{"_index":823,"title":{},"body":{"components/LessonPage.html":{},"components/Practice.html":{},"components/Sidebar.html":{},"components/Subtopic.html":{}}}],["currentview().content.score",{"_index":1661,"title":{},"body":{"components/Practice.html":{}}}],["currentview().content.title",{"_index":1974,"title":{},"body":{"components/Subtopic.html":{}}}],["currentview.content.questions.length",{"_index":1159,"title":{},"body":{"components/LessonPage.html":{}}}],["currentview.content.score",{"_index":1165,"title":{},"body":{"components/LessonPage.html":{}}}],["currentview.type",{"_index":1155,"title":{},"body":{"components/LessonPage.html":{}}}],["customize",{"_index":808,"title":{},"body":{"components/Landing.html":{}}}],["cycle",{"_index":984,"title":{},"body":{"components/LessonPage.html":{}}}],["cyclequestion",{"_index":1556,"title":{},"body":{"components/Practice.html":{}}}],["cyclequestion(direction",{"_index":1571,"title":{},"body":{"components/Practice.html":{}}}],["cyclesubtopic",{"_index":1962,"title":{},"body":{"components/Subtopic.html":{}}}],["daidj2d",{"_index":2035,"title":{},"body":{"components/TopicPreferences.html":{}}}],["dashboard",{"_index":2302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dashboard/subscription",{"_index":2305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{},"components/TopicPreferences.html":{},"injectables/UserService.html":{}}}],["date(\"2023",{"_index":1819,"title":{},"body":{"components/Subjects.html":{}}}],["date().tolocalestring",{"_index":363,"title":{},"body":{"components/Chatbot.html":{}}}],["decide",{"_index":1380,"title":{},"body":{"components/NamingUpload.html":{}}}],["decorators",{"_index":322,"title":{},"body":{"components/Chatbot.html":{},"directives/FileTypeDirective.html":{},"components/Login.html":{},"components/Signup.html":{},"components/TopicPreferences.html":{}}}],["default",{"_index":121,"title":{},"body":{"components/App.html":{},"injectables/AuthService.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/CheckEmail.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"injectables/HttpBaseService.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"injectables/NotificationService.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"injectables/SubscriptionService.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"injectables/UserService.html":{},"components/VerifyEmail.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defer",{"_index":311,"title":{},"body":{"components/Chatbot.html":{}}}],["defined",{"_index":124,"title":{},"body":{"components/App.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"injectables/UserService.html":{},"components/VerifyEmail.html":{}}}],["definition",{"_index":2037,"title":{},"body":{"components/TopicPreferences.html":{}}}],["deforestation",{"_index":967,"title":{},"body":{"components/LessonPage.html":{}}}],["delete",{"_index":766,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["delete(endpoint",{"_index":770,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["dependencies",{"_index":2171,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deployed",{"_index":2279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["describe",{"_index":935,"title":{},"body":{"components/LessonPage.html":{}}}],["desert",{"_index":960,"title":{},"body":{"components/LessonPage.html":{}}}],["designed",{"_index":626,"title":{},"body":{"components/Features.html":{}}}],["detailed",{"_index":2248,"title":{},"body":{"index.html":{}}}],["details",{"_index":1359,"title":{},"body":{"components/NamingUpload.html":{}}}],["dev",{"_index":2281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":2196,"title":{},"body":{"index.html":{}}}],["direction",{"_index":1129,"title":{},"body":{"components/LessonPage.html":{},"components/Practice.html":{},"components/Subtopic.html":{}}}],["directive",{"_index":27,"title":{"directives/FileTypeDirective.html":{},"directives/PasswordValidator.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["directives",{"_index":90,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"index.html":{},"overview.html":{}}}],["directly",{"_index":595,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/NamingUpload.html":{},"components/QuestionSettings.html":{}}}],["directory",{"_index":2225,"title":{},"body":{"index.html":{}}}],["display",{"_index":858,"title":{},"body":{"components/LessonPage.html":{}}}],["dist",{"_index":2224,"title":{},"body":{"index.html":{}}}],["distinct",{"_index":946,"title":{},"body":{"components/LessonPage.html":{}}}],["dksda",{"_index":2034,"title":{},"body":{"components/TopicPreferences.html":{}}}],["document",{"_index":1367,"title":{},"body":{"components/NamingUpload.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["documentation",{"_index":2129,"title":{},"body":{"coverage.html":{}}}],["documents",{"_index":1416,"title":{},"body":{"components/NamingUpload.html":{},"components/Pricing.html":{}}}],["docx",{"_index":632,"title":{},"body":{"components/Features.html":{},"components/NamingUpload.html":{}}}],["doesn't",{"_index":1642,"title":{},"body":{"components/Practice.html":{}}}],["doing",{"_index":1450,"title":{},"body":{"components/NotFound.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["domsanitizer",{"_index":1278,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["don't",{"_index":1474,"title":{},"body":{"components/NotFound.html":{}}}],["don\\'t",{"_index":1483,"title":{},"body":{"components/NotFound.html":{}}}],["don’t",{"_index":302,"title":{},"body":{"components/Chatbot.html":{}}}],["dragevent",{"_index":1309,"title":{},"body":{"components/NamingUpload.html":{}}}],["driven",{"_index":664,"title":{},"body":{"components/Features.html":{}}}],["dummy",{"_index":1393,"title":{},"body":{"components/NamingUpload.html":{}}}],["durationdays",{"_index":1544,"title":{},"body":{"interfaces/Plan.html":{},"interfaces/SubscriptionStatus.html":{}}}],["during",{"_index":592,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["e.g",{"_index":352,"title":{},"body":{"components/Chatbot.html":{},"directives/FileTypeDirective.html":{}}}],["e1",{"_index":975,"title":{},"body":{"components/LessonPage.html":{}}}],["e2e",{"_index":2240,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":2242,"title":{},"body":{"index.html":{}}}],["each",{"_index":1028,"title":{},"body":{"components/LessonPage.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{}}}],["earth",{"_index":927,"title":{},"body":{"components/LessonPage.html":{}}}],["easy",{"_index":627,"title":{},"body":{"components/Features.html":{},"components/Pricing.html":{},"components/Subjects.html":{}}}],["ecosystems",{"_index":904,"title":{},"body":{"components/LessonPage.html":{}}}],["effect",{"_index":297,"title":{},"body":{"components/Chatbot.html":{},"components/Practice.html":{}}}],["el",{"_index":354,"title":{},"body":{"components/Chatbot.html":{}}}],["el.scrollheight",{"_index":357,"title":{},"body":{"components/Chatbot.html":{}}}],["el.scrolltop",{"_index":356,"title":{},"body":{"components/Chatbot.html":{}}}],["element",{"_index":26,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["elementref",{"_index":321,"title":{},"body":{"components/Chatbot.html":{}}}],["email",{"_index":89,"title":{},"body":{"components/About.html":{},"components/App.html":{},"injectables/AuthService.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"interfaces/SignupPayload.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"interfaces/UserModel.html":{},"components/VerifyEmail.html":{},"interfaces/VerifyEmailResponse.html":{},"miscellaneous/variables.html":{}}}],["email').then(m",{"_index":2298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["email'},{'name",{"_index":37,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["email.css",{"_index":395,"title":{},"body":{"components/CheckEmail.html":{},"components/VerifyEmail.html":{}}}],["email.html",{"_index":394,"title":{},"body":{"components/CheckEmail.html":{},"components/VerifyEmail.html":{}}}],["email.ts",{"_index":393,"title":{},"body":{"components/CheckEmail.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["email.ts:12",{"_index":2110,"title":{},"body":{"components/VerifyEmail.html":{}}}],["email.ts:13",{"_index":404,"title":{},"body":{"components/CheckEmail.html":{},"components/VerifyEmail.html":{}}}],["email.ts:14",{"_index":407,"title":{},"body":{"components/CheckEmail.html":{}}}],["email.ts:15",{"_index":405,"title":{},"body":{"components/CheckEmail.html":{}}}],["email.ts:16",{"_index":403,"title":{},"body":{"components/CheckEmail.html":{}}}],["email.ts:17",{"_index":399,"title":{},"body":{"components/CheckEmail.html":{}}}],["email.ts:26",{"_index":401,"title":{},"body":{"components/CheckEmail.html":{}}}],["email.ts:37",{"_index":400,"title":{},"body":{"components/CheckEmail.html":{}}}],["email/check",{"_index":392,"title":{},"body":{"components/CheckEmail.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["email/verify",{"_index":2108,"title":{},"body":{"components/VerifyEmail.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emailctrl",{"_index":1214,"title":{},"body":{"components/Login.html":{},"components/Signup.html":{}}}],["emailctrl.errors?.['email",{"_index":1248,"title":{},"body":{"components/Login.html":{},"components/Signup.html":{}}}],["emailctrl.errors?.['required",{"_index":1247,"title":{},"body":{"components/Login.html":{},"components/Signup.html":{}}}],["emailctrl.errors?.[\\'email",{"_index":1254,"title":{},"body":{"components/Login.html":{},"components/Signup.html":{}}}],["emailctrl.errors?.[\\'required",{"_index":1253,"title":{},"body":{"components/Login.html":{},"components/Signup.html":{}}}],["emailctrl.invalid",{"_index":1245,"title":{},"body":{"components/Login.html":{},"components/Signup.html":{}}}],["emailctrl.touched",{"_index":1246,"title":{},"body":{"components/Login.html":{},"components/Signup.html":{}}}],["emit",{"_index":1392,"title":{},"body":{"components/NamingUpload.html":{}}}],["emits",{"_index":694,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["empty",{"_index":557,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/NamingUpload.html":{},"components/QuestionSettings.html":{}}}],["end",{"_index":1352,"title":{},"body":{"components/NamingUpload.html":{},"index.html":{}}}],["endless",{"_index":651,"title":{},"body":{"components/Features.html":{}}}],["endpoint",{"_index":773,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["engaging",{"_index":647,"title":{},"body":{"components/Features.html":{}}}],["environment",{"_index":614,"title":{},"body":{"injectables/ExerciseService.html":{},"injectables/HttpBaseService.html":{},"components/LessonPage.html":{},"injectables/SubscriptionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":783,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["environment.apiurl}/exercises",{"_index":612,"title":{},"body":{"injectables/ExerciseService.html":{}}}],["environment.apiurl}/subscriptions",{"_index":1950,"title":{},"body":{"injectables/SubscriptionService.html":{}}}],["environments",{"_index":886,"title":{},"body":{"components/LessonPage.html":{}}}],["environments/environment",{"_index":615,"title":{},"body":{"injectables/ExerciseService.html":{},"injectables/HttpBaseService.html":{},"injectables/SubscriptionService.html":{}}}],["err",{"_index":188,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/Chatbot.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{},"miscellaneous/variables.html":{}}}],["err.error?.message",{"_index":2284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err.status",{"_index":175,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["err.statustext",{"_index":2285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":371,"title":{},"body":{"components/Chatbot.html":{},"components/CheckEmail.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"directives/FileTypeDirective.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"injectables/NotificationService.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["error('method",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["error('subject",{"_index":1014,"title":{},"body":{"components/LessonPage.html":{}}}],["error(err",{"_index":1001,"title":{},"body":{"components/LessonPage.html":{}}}],["error.interceptor.ts",{"_index":2141,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["essay",{"_index":941,"title":{},"body":{"components/LessonPage.html":{},"components/Practice.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{},"miscellaneous/typealiases.html":{}}}],["essay_answer",{"_index":1609,"title":{},"body":{"components/Practice.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"interfaces/SaveQuestionData.html":{}}}],["essay_feedback",{"_index":1610,"title":{},"body":{"components/Practice.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"interfaces/SaveQuestionData.html":{}}}],["essaycalls",{"_index":1604,"title":{},"body":{"components/Practice.html":{}}}],["essaycalls.push",{"_index":1618,"title":{},"body":{"components/Practice.html":{}}}],["et1",{"_index":905,"title":{},"body":{"components/LessonPage.html":{}}}],["et2",{"_index":956,"title":{},"body":{"components/LessonPage.html":{}}}],["europe",{"_index":982,"title":{},"body":{"components/LessonPage.html":{}}}],["ev",{"_index":704,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["ev.target",{"_index":709,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["even",{"_index":1470,"title":{},"body":{"components/NotFound.html":{}}}],["event",{"_index":700,"title":{},"body":{"directives/FileTypeDirective.html":{},"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{}}}],["event.direction",{"_index":1130,"title":{},"body":{"components/LessonPage.html":{}}}],["event.id",{"_index":1074,"title":{},"body":{"components/LessonPage.html":{}}}],["event.id).subscribe",{"_index":1082,"title":{},"body":{"components/LessonPage.html":{}}}],["event.target.checked",{"_index":540,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["event.target.value",{"_index":538,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["event.type",{"_index":1070,"title":{},"body":{"components/LessonPage.html":{}}}],["eventemitter",{"_index":440,"title":{},"body":{"components/ConfirmLogout.html":{},"components/Contact.html":{},"directives/FileTypeDirective.html":{},"components/Landing.html":{}}}],["everything",{"_index":1047,"title":{},"body":{"components/LessonPage.html":{}}}],["exactly",{"_index":1100,"title":{},"body":{"components/LessonPage.html":{}}}],["exam",{"_index":558,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"injectables/SubjectsService.html":{}}}],["exam_id",{"_index":1211,"title":{},"body":{"injectables/LessonService.html":{}}}],["exam_preference",{"_index":1901,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["examid",{"_index":1189,"title":{},"body":{"injectables/LessonService.html":{}}}],["exammodel",{"_index":507,"title":{"interfaces/ExamModel.html":{}},"body":{"interfaces/ExamModel.html":{},"coverage.html":{}}}],["example",{"_index":2199,"title":{},"body":{"index.html":{}}}],["exams",{"_index":666,"title":{},"body":{"components/Features.html":{}}}],["examsettings",{"_index":514,"title":{"classes/ExamSettings.html":{}},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{},"coverage.html":{}}}],["examvalidated",{"_index":546,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["execute",{"_index":2232,"title":{},"body":{"index.html":{}}}],["exercise",{"_index":548,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{}}}],["exercise.id",{"_index":1076,"title":{},"body":{"components/LessonPage.html":{}}}],["exercise_id",{"_index":1208,"title":{},"body":{"injectables/LessonService.html":{}}}],["exercise_preference",{"_index":1899,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["exercisecompleted",{"_index":1561,"title":{},"body":{"components/Practice.html":{}}}],["exerciseid",{"_index":1194,"title":{},"body":{"injectables/LessonService.html":{}}}],["exercisemodel",{"_index":597,"title":{"interfaces/ExerciseModel.html":{}},"body":{"interfaces/ExerciseModel.html":{},"coverage.html":{}}}],["exercises",{"_index":554,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{},"injectables/SubjectsService.html":{}}}],["exerciseservice",{"_index":599,"title":{"injectables/ExerciseService.html":{}},"body":{"injectables/ExerciseService.html":{},"coverage.html":{}}}],["exercisesettings",{"_index":534,"title":{"classes/ExerciseSettings.html":{}},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{},"coverage.html":{}}}],["exercisevalidated",{"_index":545,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["exists",{"_index":307,"title":{},"body":{"components/Chatbot.html":{}}}],["expanded",{"_index":875,"title":{},"body":{"components/LessonPage.html":{}}}],["experience",{"_index":624,"title":{},"body":{"components/Features.html":{}}}],["expiresat",{"_index":1549,"title":{},"body":{"interfaces/Plan.html":{},"interfaces/SubscriptionStatus.html":{}}}],["explain",{"_index":962,"title":{},"body":{"components/LessonPage.html":{}}}],["explanation",{"_index":1702,"title":{},"body":{"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"interfaces/SaveQuestionData.html":{}}}],["export",{"_index":21,"title":{},"body":{"components/About.html":{},"interfaces/AnswerModel.html":{},"components/App.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/ChatMessage.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"interfaces/ExamModel.html":{},"classes/ExamSettings.html":{},"interfaces/ExerciseModel.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"pipes/MarkdownPipe.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"directives/PasswordValidator.html":{},"interfaces/Plan.html":{},"components/Practice.html":{},"components/Pricing.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"interfaces/SignupPayload.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"interfaces/SubscriptionStatus.html":{},"components/Subtopic.html":{},"interfaces/SubtopicModel.html":{},"components/Toast.html":{},"interfaces/TopicModel.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"components/VerifyEmail.html":{},"interfaces/VerifyEmailResponse.html":{}}}],["ext",{"_index":1328,"title":{},"body":{"components/NamingUpload.html":{}}}],["extract",{"_index":988,"title":{},"body":{"components/LessonPage.html":{},"components/VerifyEmail.html":{}}}],["f",{"_index":711,"title":{},"body":{"directives/FileTypeDirective.html":{},"components/NamingUpload.html":{}}}],["failed",{"_index":426,"title":{},"body":{"components/CheckEmail.html":{},"components/Login.html":{},"components/Signup.html":{},"components/VerifyEmail.html":{}}}],["fallback",{"_index":1061,"title":{},"body":{"components/LessonPage.html":{}}}],["false",{"_index":327,"title":{},"body":{"components/Chatbot.html":{},"components/CheckEmail.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"guards/SubscriptionGuard.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"miscellaneous/variables.html":{}}}],["faqs",{"_index":2046,"title":{},"body":{"components/TopicPreferences.html":{}}}],["feature",{"_index":1457,"title":{},"body":{"components/NotFound.html":{}}}],["features",{"_index":47,"title":{"components/Features.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["features'},{'name",{"_index":48,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["features.css",{"_index":623,"title":{},"body":{"components/Features.html":{}}}],["features.html",{"_index":622,"title":{},"body":{"components/Features.html":{}}}],["features/features",{"_index":759,"title":{},"body":{"components/Home.html":{}}}],["feeback",{"_index":105,"title":{},"body":{"interfaces/AnswerModel.html":{}}}],["feedback",{"_index":1662,"title":{},"body":{"components/Practice.html":{}}}],["fetch",{"_index":998,"title":{},"body":{"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/TopicPreferences.html":{}}}],["fetching",{"_index":1002,"title":{},"body":{"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["fetchprofile",{"_index":2087,"title":{},"body":{"injectables/UserService.html":{}}}],["fields",{"_index":549,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/About.html":{},"interfaces/AnswerModel.html":{},"components/App.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/ChatMessage.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"interfaces/ExamModel.html":{},"classes/ExamSettings.html":{},"interfaces/ExerciseModel.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"directives/PasswordValidator.html":{},"interfaces/Plan.html":{},"components/Practice.html":{},"components/Pricing.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"interfaces/SignupPayload.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"interfaces/SubscriptionStatus.html":{},"components/Subtopic.html":{},"interfaces/SubtopicModel.html":{},"components/Toast.html":{},"interfaces/TopicModel.html":{},"components/TopicPreferences.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"components/VerifyEmail.html":{},"interfaces/VerifyEmailResponse.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["file(s",{"_index":1349,"title":{},"body":{"components/NamingUpload.html":{}}}],["file.name",{"_index":1434,"title":{},"body":{"components/NamingUpload.html":{}}}],["file.name.split('.').pop()?.tolowercase",{"_index":1329,"title":{},"body":{"components/NamingUpload.html":{}}}],["file.size",{"_index":1332,"title":{},"body":{"components/NamingUpload.html":{}}}],["fileerror",{"_index":677,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["filelist",{"_index":1303,"title":{},"body":{"components/NamingUpload.html":{}}}],["fileok",{"_index":678,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["files",{"_index":633,"title":{},"body":{"components/Features.html":{},"components/NamingUpload.html":{},"components/Pricing.html":{},"injectables/SubjectsService.html":{},"index.html":{}}}],["files.foreach((file",{"_index":1892,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["files.length",{"_index":1433,"title":{},"body":{"components/NamingUpload.html":{}}}],["filetypedirective",{"_index":91,"title":{"directives/FileTypeDirective.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["final",{"_index":1654,"title":{},"body":{"components/Practice.html":{}}}],["finalize",{"_index":1422,"title":{},"body":{"components/NamingUpload.html":{}}}],["finally",{"_index":1042,"title":{},"body":{"components/LessonPage.html":{}}}],["find",{"_index":1472,"title":{},"body":{"components/NotFound.html":{},"components/Subjects.html":{}}}],["find((exercise",{"_index":1075,"title":{},"body":{"components/LessonPage.html":{}}}],["find((subtopic",{"_index":1072,"title":{},"body":{"components/LessonPage.html":{}}}],["find((topic",{"_index":1083,"title":{},"body":{"components/LessonPage.html":{}}}],["finish",{"_index":573,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/QuestionSettings.html":{}}}],["first",{"_index":814,"title":{},"body":{"components/Landing.html":{},"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/Signup.html":{}}}],["first_name",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"components/Signup.html":{},"interfaces/UserModel.html":{}}}],["firstname",{"_index":1743,"title":{},"body":{"components/Signup.html":{}}}],["firstnamectrl",{"_index":1744,"title":{},"body":{"components/Signup.html":{}}}],["firstnamectrl.invalid",{"_index":1788,"title":{},"body":{"components/Signup.html":{}}}],["firstnamectrl.touched",{"_index":1789,"title":{},"body":{"components/Signup.html":{}}}],["firsttopic",{"_index":1064,"title":{},"body":{"components/LessonPage.html":{}}}],["firsttopic.subtopics.length",{"_index":1066,"title":{},"body":{"components/LessonPage.html":{}}}],["firsttopic.subtopics[0].id",{"_index":1067,"title":{},"body":{"components/LessonPage.html":{}}}],["fixed",{"_index":1986,"title":{},"body":{"components/Toast.html":{}}}],["flatmap((topic",{"_index":1071,"title":{},"body":{"components/LessonPage.html":{}}}],["flex",{"_index":1990,"title":{},"body":{"components/Toast.html":{}}}],["flexibility",{"_index":1690,"title":{},"body":{"components/Pricing.html":{}}}],["flexible",{"_index":1668,"title":{},"body":{"components/Pricing.html":{}}}],["flow",{"_index":1418,"title":{},"body":{"components/NamingUpload.html":{},"miscellaneous/variables.html":{}}}],["focus",{"_index":2080,"title":{},"body":{"components/TopicPreferences.html":{}}}],["focuses",{"_index":899,"title":{},"body":{"components/LessonPage.html":{}}}],["following",{"_index":2237,"title":{},"body":{"index.html":{}}}],["forget",{"_index":650,"title":{},"body":{"components/Features.html":{}}}],["forkjoin",{"_index":530,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{}}}],["forkjoin(essaycalls.length",{"_index":1652,"title":{},"body":{"components/Practice.html":{}}}],["forkjoin(requests).subscribe",{"_index":577,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["forkjoin(topicrequests",{"_index":1041,"title":{},"body":{"components/LessonPage.html":{}}}],["format",{"_index":1249,"title":{},"body":{"components/Login.html":{},"components/Signup.html":{}}}],["formatfilesize",{"_index":1295,"title":{},"body":{"components/NamingUpload.html":{}}}],["formatfilesize(file",{"_index":1305,"title":{},"body":{"components/NamingUpload.html":{}}}],["formdata",{"_index":1891,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["formdata.append('files",{"_index":1893,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["formsmodule",{"_index":263,"title":{},"body":{"components/Chatbot.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{},"components/TopicPreferences.html":{}}}],["found",{"_index":1015,"title":{},"body":{"components/LessonPage.html":{},"components/NotFound.html":{},"miscellaneous/variables.html":{}}}],["found').then(m",{"_index":2325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["found'},{'name",{"_index":64,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["found.css",{"_index":1441,"title":{},"body":{"components/NotFound.html":{}}}],["found.html",{"_index":1440,"title":{},"body":{"components/NotFound.html":{}}}],["found.ts",{"_index":1439,"title":{},"body":{"components/NotFound.html":{},"coverage.html":{}}}],["found.ts:11",{"_index":1443,"title":{},"body":{"components/NotFound.html":{}}}],["found.ts:13",{"_index":1444,"title":{},"body":{"components/NotFound.html":{}}}],["found/not",{"_index":1438,"title":{},"body":{"components/NotFound.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fraction",{"_index":1107,"title":{},"body":{"components/LessonPage.html":{}}}],["fraction).subscribe",{"_index":1109,"title":{},"body":{"components/LessonPage.html":{}}}],["framework",{"_index":2244,"title":{},"body":{"index.html":{}}}],["france",{"_index":909,"title":{},"body":{"components/LessonPage.html":{}}}],["free",{"_index":1670,"title":{},"body":{"components/Pricing.html":{}}}],["frequently",{"_index":2045,"title":{},"body":{"components/TopicPreferences.html":{}}}],["function",{"_index":2165,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":2185,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1412,"title":{},"body":{"components/NamingUpload.html":{}}}],["future",{"_index":816,"title":{},"body":{"components/Landing.html":{}}}],["generate",{"_index":594,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/TopicPreferences.html":{},"index.html":{}}}],["generated",{"_index":581,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{},"components/TopicPreferences.html":{},"index.html":{}}}],["generateexam",{"_index":1853,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["generateexam(sessionid",{"_index":1864,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["generateexercise",{"_index":1854,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["generateexercise(sessionid",{"_index":1867,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["generatelesson",{"_index":1855,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["generatelesson(sessionid",{"_index":1869,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["generating",{"_index":1428,"title":{},"body":{"components/NamingUpload.html":{},"components/TopicPreferences.html":{}}}],["generation",{"_index":593,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{},"components/Subjects.html":{}}}],["geography",{"_index":874,"title":{},"body":{"components/LessonPage.html":{}}}],["get(endpoint",{"_index":774,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["getaccesstoken",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["getallsubjects",{"_index":1856,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["getallsubtopics",{"_index":1168,"title":{},"body":{"injectables/LessonService.html":{}}}],["getallsubtopics(topicid",{"_index":1176,"title":{},"body":{"injectables/LessonService.html":{}}}],["getalltopics",{"_index":1169,"title":{},"body":{"injectables/LessonService.html":{}}}],["getalltopics(sessionid",{"_index":1179,"title":{},"body":{"injectables/LessonService.html":{}}}],["getchathistory",{"_index":380,"title":{},"body":{"injectables/ChatbotService.html":{}}}],["getchathistory(sessionid",{"_index":381,"title":{},"body":{"injectables/ChatbotService.html":{}}}],["getcurrentuser",{"_index":2088,"title":{},"body":{"injectables/UserService.html":{}}}],["getexam",{"_index":1170,"title":{},"body":{"injectables/LessonService.html":{}}}],["getexam(sessionid",{"_index":1181,"title":{},"body":{"injectables/LessonService.html":{}}}],["getexercise",{"_index":1171,"title":{},"body":{"injectables/LessonService.html":{}}}],["getexercise(topicid",{"_index":1183,"title":{},"body":{"injectables/LessonService.html":{}}}],["getheaders",{"_index":767,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["getpastanswers",{"_index":602,"title":{},"body":{"injectables/ExerciseService.html":{}}}],["getpastanswers(id",{"_index":607,"title":{},"body":{"injectables/ExerciseService.html":{}}}],["getplans",{"_index":1941,"title":{},"body":{"injectables/SubscriptionService.html":{}}}],["getquestionnumber",{"_index":1557,"title":{},"body":{"components/Practice.html":{}}}],["getstatus",{"_index":1942,"title":{},"body":{"injectables/SubscriptionService.html":{}}}],["getsubject",{"_index":1857,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["getsubject(sessionid",{"_index":1872,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["gettopicdatafromexercise",{"_index":829,"title":{},"body":{"components/LessonPage.html":{}}}],["gettopicdatafromexercise().title",{"_index":1157,"title":{},"body":{"components/LessonPage.html":{}}}],["gettopicdatafromsubtopic",{"_index":830,"title":{},"body":{"components/LessonPage.html":{}}}],["global",{"_index":939,"title":{},"body":{"components/LessonPage.html":{}}}],["go",{"_index":1673,"title":{},"body":{"components/Pricing.html":{}}}],["goes",{"_index":1461,"title":{},"body":{"components/NotFound.html":{}}}],["gohome",{"_index":1442,"title":{},"body":{"components/NotFound.html":{}}}],["gone",{"_index":1469,"title":{},"body":{"components/NotFound.html":{}}}],["government",{"_index":895,"title":{},"body":{"components/LessonPage.html":{}}}],["gpt",{"_index":1640,"title":{},"body":{"components/Practice.html":{}}}],["graded",{"_index":1166,"title":{},"body":{"components/LessonPage.html":{}}}],["grasp",{"_index":656,"title":{},"body":{"components/Features.html":{}}}],["green",{"_index":1999,"title":{},"body":{"components/Toast.html":{}}}],["grow",{"_index":1671,"title":{},"body":{"components/Pricing.html":{}}}],["guard",{"_index":1927,"title":{"guards/SubscriptionGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":1929,"title":{},"body":{"guards/SubscriptionGuard.html":{}}}],["hasexercisescore",{"_index":1126,"title":{},"body":{"components/LessonPage.html":{}}}],["header",{"_index":49,"title":{"components/Header.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["header'},{'name",{"_index":50,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["header.html",{"_index":726,"title":{},"body":{"components/Header.html":{}}}],["headers",{"_index":788,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["hello",{"_index":986,"title":{},"body":{"components/LessonPage.html":{}}}],["help",{"_index":655,"title":{},"body":{"components/Features.html":{},"components/LessonPage.html":{},"components/NotFound.html":{}}}],["helpbuilding",{"_index":2219,"title":{},"body":{"index.html":{}}}],["here",{"_index":1426,"title":{},"body":{"components/NamingUpload.html":{},"components/NotFound.html":{},"components/TopicPreferences.html":{}}}],["hey",{"_index":1445,"title":{},"body":{"components/NotFound.html":{}}}],["hi",{"_index":987,"title":{},"body":{"components/LessonPage.html":{}}}],["highlighting",{"_index":652,"title":{},"body":{"components/Features.html":{}}}],["history",{"_index":298,"title":{},"body":{"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/LessonPage.html":{},"components/Subjects.html":{}}}],["history.length",{"_index":309,"title":{},"body":{"components/Chatbot.html":{}}}],["home",{"_index":51,"title":{"components/Home.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["home'},{'name",{"_index":52,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["home.css",{"_index":748,"title":{},"body":{"components/Home.html":{}}}],["home.html",{"_index":747,"title":{},"body":{"components/Home.html":{}}}],["hostlistener",{"_index":705,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["hostlistener('change",{"_index":703,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["hostlisteners",{"_index":679,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["html",{"_index":25,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["htmlinputelement",{"_index":710,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["http",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatbotService.html":{},"injectables/ExerciseService.html":{},"injectables/HttpBaseService.html":{},"injectables/LessonService.html":{},"injectables/SubjectsService.html":{},"injectables/SubscriptionService.html":{},"injectables/UserService.html":{}}}],["http://localhost:4200",{"_index":2205,"title":{},"body":{"index.html":{}}}],["http://localhost:5000/api",{"_index":2280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":2274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpbaseservice",{"_index":223,"title":{"injectables/HttpBaseService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/ChatbotService.html":{},"injectables/HttpBaseService.html":{},"injectables/LessonService.html":{},"injectables/SubjectsService.html":{},"coverage.html":{}}}],["httpclient",{"_index":605,"title":{},"body":{"injectables/ExerciseService.html":{},"injectables/HttpBaseService.html":{},"injectables/SubscriptionService.html":{},"injectables/UserService.html":{}}}],["httperrorinterceptor",{"_index":2142,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["httperrorresponse",{"_index":154,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"miscellaneous/variables.html":{}}}],["httpevent",{"_index":155,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httphandler",{"_index":147,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpheaders",{"_index":777,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["httpinterceptor",{"_index":153,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpinterceptorfn",{"_index":2282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httprequest",{"_index":145,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["https://maestro",{"_index":2277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["human",{"_index":950,"title":{},"body":{"components/LessonPage.html":{}}}],["humans",{"_index":952,"title":{},"body":{"components/LessonPage.html":{}}}],["icon",{"_index":485,"title":{},"body":{"components/CreationStepTab.html":{}}}],["id",{"_index":509,"title":{},"body":{"interfaces/ExamModel.html":{},"interfaces/ExerciseModel.html":{},"injectables/ExerciseService.html":{},"components/LessonPage.html":{},"components/NamingUpload.html":{},"interfaces/Plan.html":{},"components/Practice.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"interfaces/SaveQuestionData.html":{},"components/Sidebar.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"interfaces/SubscriptionStatus.html":{},"components/Subtopic.html":{},"interfaces/SubtopicModel.html":{},"interfaces/TopicModel.html":{},"components/TopicPreferences.html":{},"interfaces/UserModel.html":{}}}],["identified",{"_index":1403,"title":{},"body":{"components/NamingUpload.html":{}}}],["identifier",{"_index":2130,"title":{},"body":{"coverage.html":{}}}],["identifying",{"_index":1417,"title":{},"body":{"components/NamingUpload.html":{}}}],["if(msg",{"_index":2012,"title":{},"body":{"components/Toast.html":{}}}],["ignore/about.ts",{"_index":9,"title":{},"body":{"components/About.html":{},"coverage.html":{}}}],["iif",{"_index":1383,"title":{},"body":{"components/NamingUpload.html":{}}}],["impact",{"_index":964,"title":{},"body":{"components/LessonPage.html":{}}}],["implemented",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["implements",{"_index":161,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/CreationStepTab.html":{},"components/LessonPage.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"directives/PasswordValidator.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"components/TopicPreferences.html":{}}}],["import",{"_index":17,"title":{},"body":{"components/About.html":{},"components/App.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"interfaces/ExamModel.html":{},"classes/ExamSettings.html":{},"interfaces/ExerciseModel.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"interfaces/SignupPayload.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"injectables/UserService.html":{},"components/VerifyEmail.html":{},"interfaces/VerifyEmailResponse.html":{}}}],["import('./pages/auth/check",{"_index":2300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./pages/auth/login/login').then(m",{"_index":2295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./pages/auth/signup/signup').then(m",{"_index":2293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./pages/auth/verify",{"_index":2297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./pages/dashboard/subjects/subjects').then(m",{"_index":2303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./pages/dashboard/subscription/subscription').then(m",{"_index":2306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./pages/home/home/home').then(m",{"_index":2291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./pages/lesson/lesson",{"_index":2321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./pages/not",{"_index":2324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./pages/subject",{"_index":2311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["importance",{"_index":936,"title":{},"body":{"components/LessonPage.html":{}}}],["important",{"_index":893,"title":{},"body":{"components/LessonPage.html":{}}}],["imports",{"_index":20,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["improvement",{"_index":671,"title":{},"body":{"components/Features.html":{}}}],["inbox",{"_index":424,"title":{},"body":{"components/CheckEmail.html":{}}}],["include",{"_index":519,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{}}}],["includes",{"_index":2212,"title":{},"body":{"index.html":{}}}],["including",{"_index":901,"title":{},"body":{"components/LessonPage.html":{},"index.html":{}}}],["index",{"_index":102,"title":{"index.html":{}},"body":{"interfaces/AnswerModel.html":{},"components/App.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/ChatMessage.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/CheckEmail.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"interfaces/ExamModel.html":{},"classes/ExamSettings.html":{},"interfaces/ExerciseModel.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"directives/PasswordValidator.html":{},"interfaces/Plan.html":{},"components/Practice.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"interfaces/SignupPayload.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"interfaces/SubscriptionStatus.html":{},"components/Subtopic.html":{},"interfaces/SubtopicModel.html":{},"components/Toast.html":{},"interfaces/TopicModel.html":{},"components/TopicPreferences.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"components/VerifyEmail.html":{},"interfaces/VerifyEmailResponse.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/About.html":{},"interfaces/AnswerModel.html":{},"components/App.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/ChatMessage.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"interfaces/ExamModel.html":{},"classes/ExamSettings.html":{},"interfaces/ExerciseModel.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"directives/PasswordValidator.html":{},"interfaces/Plan.html":{},"components/Practice.html":{},"components/Pricing.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"interfaces/SignupPayload.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"interfaces/SubscriptionStatus.html":{},"components/Subtopic.html":{},"interfaces/SubtopicModel.html":{},"components/Toast.html":{},"interfaces/TopicModel.html":{},"components/TopicPreferences.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"components/VerifyEmail.html":{},"interfaces/VerifyEmailResponse.html":{},"miscellaneous/typealiases.html":{}}}],["information",{"_index":466,"title":{},"body":{"components/Contact.html":{},"index.html":{}}}],["ingest",{"_index":1396,"title":{},"body":{"components/NamingUpload.html":{}}}],["ingestdocuments",{"_index":1858,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["ingestdocuments(sessionid",{"_index":1874,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["ingested",{"_index":1415,"title":{},"body":{"components/NamingUpload.html":{}}}],["initial",{"_index":351,"title":{},"body":{"components/Chatbot.html":{},"components/LessonPage.html":{}}}],["initialize",{"_index":1069,"title":{},"body":{"components/LessonPage.html":{}}}],["inject",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/CheckEmail.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"injectables/HttpBaseService.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["inject(authservice",{"_index":402,"title":{},"body":{"components/CheckEmail.html":{},"components/Login.html":{},"components/Signup.html":{},"components/VerifyEmail.html":{}}}],["inject(chatbotservice",{"_index":319,"title":{},"body":{"components/Chatbot.html":{},"components/LessonPage.html":{}}}],["inject(httpbaseservice",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatbotService.html":{},"injectables/LessonService.html":{},"injectables/SubjectsService.html":{}}}],["inject(httpclient",{"_index":785,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["inject(injector",{"_index":325,"title":{},"body":{"components/Chatbot.html":{}}}],["inject(lessonservice",{"_index":861,"title":{},"body":{"components/LessonPage.html":{},"components/Practice.html":{},"components/TopicPreferences.html":{}}}],["inject(notificationservice",{"_index":329,"title":{},"body":{"components/Chatbot.html":{},"components/CheckEmail.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{},"components/TopicPreferences.html":{},"miscellaneous/variables.html":{}}}],["inject(subjectsservice",{"_index":536,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/QuestionSettings.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["injectable",{"_index":152,"title":{"injectables/AuthService.html":{},"injectables/ChatbotService.html":{},"injectables/ExerciseService.html":{},"injectables/HttpBaseService.html":{},"injectables/LessonService.html":{},"injectables/NotificationService.html":{},"injectables/SubjectsService.html":{},"injectables/SubscriptionService.html":{},"injectables/UserService.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/ChatbotService.html":{},"injectables/ExerciseService.html":{},"injectables/HttpBaseService.html":{},"injectables/LessonService.html":{},"injectables/NotificationService.html":{},"injectables/SubjectsService.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatbotService.html":{},"injectables/ExerciseService.html":{},"injectables/HttpBaseService.html":{},"injectables/LessonService.html":{},"injectables/NotificationService.html":{},"injectables/SubjectsService.html":{},"injectables/SubscriptionService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injection",{"_index":348,"title":{},"body":{"components/Chatbot.html":{}}}],["injector",{"_index":271,"title":{},"body":{"components/Chatbot.html":{}}}],["innit",{"_index":1455,"title":{},"body":{"components/NotFound.html":{}}}],["input",{"_index":332,"title":{},"body":{"components/Chatbot.html":{},"components/CreationStepTab.html":{},"directives/FileTypeDirective.html":{},"components/Practice.html":{},"components/Sidebar.html":{},"components/Subtopic.html":{}}}],["input(null",{"_index":496,"title":{},"body":{"components/CreationStepTab.html":{}}}],["input.files?.[0",{"_index":712,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["input.required",{"_index":495,"title":{},"body":{"components/CreationStepTab.html":{}}}],["input.value",{"_index":721,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["inputs",{"_index":279,"title":{},"body":{"components/Chatbot.html":{},"components/CreationStepTab.html":{},"directives/FileTypeDirective.html":{},"components/Practice.html":{},"components/Sidebar.html":{},"components/Subtopic.html":{}}}],["interact",{"_index":953,"title":{},"body":{"components/LessonPage.html":{}}}],["interactive",{"_index":654,"title":{},"body":{"components/Features.html":{}}}],["intercept",{"_index":135,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercept(req",{"_index":144,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptor",{"_index":130,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":132,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interface",{"_index":98,"title":{"interfaces/AnswerModel.html":{},"interfaces/ChatMessage.html":{},"interfaces/ExamModel.html":{},"interfaces/ExerciseModel.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"interfaces/Plan.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"interfaces/SaveQuestionData.html":{},"interfaces/SignupPayload.html":{},"interfaces/SubscriptionStatus.html":{},"interfaces/SubtopicModel.html":{},"interfaces/TopicModel.html":{},"interfaces/UserModel.html":{},"interfaces/VerifyEmailResponse.html":{}},"body":{"interfaces/AnswerModel.html":{},"interfaces/ChatMessage.html":{},"interfaces/ExamModel.html":{},"interfaces/ExerciseModel.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"interfaces/Plan.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"interfaces/SaveQuestionData.html":{},"interfaces/SignupPayload.html":{},"interfaces/SubscriptionStatus.html":{},"interfaces/SubtopicModel.html":{},"interfaces/TopicModel.html":{},"interfaces/UserModel.html":{},"interfaces/VerifyEmailResponse.html":{},"coverage.html":{}}}],["interfaces",{"_index":100,"title":{},"body":{"interfaces/AnswerModel.html":{},"interfaces/ChatMessage.html":{},"interfaces/ExamModel.html":{},"interfaces/ExerciseModel.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"interfaces/Plan.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"interfaces/SaveQuestionData.html":{},"interfaces/SignupPayload.html":{},"interfaces/SubscriptionStatus.html":{},"interfaces/SubtopicModel.html":{},"interfaces/TopicModel.html":{},"interfaces/UserModel.html":{},"interfaces/VerifyEmailResponse.html":{},"overview.html":{}}}],["interval",{"_index":418,"title":{},"body":{"components/CheckEmail.html":{}}}],["intro",{"_index":877,"title":{},"body":{"components/LessonPage.html":{}}}],["invalid",{"_index":719,"title":{},"body":{"directives/FileTypeDirective.html":{},"components/Login.html":{},"components/Signup.html":{}}}],["invalidfiles.join",{"_index":1340,"title":{},"body":{"components/NamingUpload.html":{}}}],["invalidfiles.length",{"_index":1338,"title":{},"body":{"components/NamingUpload.html":{}}}],["invalidfiles.push(file.name",{"_index":1331,"title":{},"body":{"components/NamingUpload.html":{}}}],["invalidpassword",{"_index":1536,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["is_correct",{"_index":917,"title":{},"body":{"components/LessonPage.html":{}}}],["isactive",{"_index":1550,"title":{},"body":{"interfaces/Plan.html":{},"interfaces/SubscriptionStatus.html":{}}}],["isallowedfile",{"_index":706,"title":{},"body":{"directives/FileTypeDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isallowedfile(f",{"_index":713,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["isallowedfile(file",{"_index":2187,"title":{},"body":{"miscellaneous/functions.html":{}}}],["iscorrect",{"_index":106,"title":{},"body":{"interfaces/AnswerModel.html":{},"components/Practice.html":{}}}],["isdragging",{"_index":1291,"title":{},"body":{"components/NamingUpload.html":{}}}],["issues",{"_index":940,"title":{},"body":{"components/LessonPage.html":{}}}],["it's",{"_index":1456,"title":{},"body":{"components/NotFound.html":{}}}],["it\\'s",{"_index":1480,"title":{},"body":{"components/NotFound.html":{}}}],["item",{"_index":314,"title":{},"body":{"components/Chatbot.html":{}}}],["items",{"_index":1991,"title":{},"body":{"components/Toast.html":{}}}],["journey",{"_index":1846,"title":{},"body":{"components/Subjects.html":{}}}],["jpg",{"_index":1429,"title":{},"body":{"components/NamingUpload.html":{}}}],["karma",{"_index":2233,"title":{},"body":{"index.html":{}}}],["katex",{"_index":1282,"title":{},"body":{"pipes/MarkdownPipe.html":{},"dependencies.html":{}}}],["kb",{"_index":1357,"title":{},"body":{"components/NamingUpload.html":{}}}],["keep",{"_index":1679,"title":{},"body":{"components/Pricing.html":{},"components/Subjects.html":{}}}],["key",{"_index":657,"title":{},"body":{"components/Features.html":{},"components/TopicPreferences.html":{}}}],["label",{"_index":1397,"title":{},"body":{"components/NamingUpload.html":{}}}],["labeldocuments",{"_index":1859,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["labeldocuments(sessionid",{"_index":1876,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["labelling",{"_index":1410,"title":{},"body":{"components/NamingUpload.html":{},"components/Subjects.html":{}}}],["labelresponse",{"_index":1401,"title":{},"body":{"components/NamingUpload.html":{}}}],["landforms",{"_index":902,"title":{},"body":{"components/LessonPage.html":{}}}],["landing",{"_index":53,"title":{"components/Landing.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["landing'},{'name",{"_index":54,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["landing.css",{"_index":795,"title":{},"body":{"components/Landing.html":{}}}],["landing.html",{"_index":794,"title":{},"body":{"components/Landing.html":{}}}],["landing/landing",{"_index":758,"title":{},"body":{"components/Home.html":{}}}],["large",{"_index":1343,"title":{},"body":{"components/NamingUpload.html":{},"components/Pricing.html":{}}}],["largefiles.join",{"_index":1344,"title":{},"body":{"components/NamingUpload.html":{}}}],["largefiles.length",{"_index":1341,"title":{},"body":{"components/NamingUpload.html":{}}}],["largefiles.push(file.name",{"_index":1336,"title":{},"body":{"components/NamingUpload.html":{}}}],["largest",{"_index":976,"title":{},"body":{"components/LessonPage.html":{}}}],["last",{"_index":996,"title":{},"body":{"components/LessonPage.html":{},"components/Practice.html":{},"components/Signup.html":{}}}],["last_name",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{},"components/Signup.html":{},"interfaces/UserModel.html":{}}}],["lastname",{"_index":1745,"title":{},"body":{"components/Signup.html":{}}}],["lastnamectrl",{"_index":1746,"title":{},"body":{"components/Signup.html":{}}}],["lastnamectrl.invalid",{"_index":1790,"title":{},"body":{"components/Signup.html":{}}}],["lastnamectrl.touched",{"_index":1791,"title":{},"body":{"components/Signup.html":{}}}],["later",{"_index":1371,"title":{},"body":{"components/NamingUpload.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{},"miscellaneous/variables.html":{}}}],["learn",{"_index":809,"title":{},"body":{"components/Landing.html":{}}}],["learner",{"_index":1669,"title":{},"body":{"components/Pricing.html":{}}}],["learners",{"_index":1678,"title":{},"body":{"components/Pricing.html":{}}}],["learning",{"_index":462,"title":{},"body":{"components/Contact.html":{},"components/Features.html":{},"components/Landing.html":{},"components/NotFound.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["learningstyle",{"_index":2020,"title":{},"body":{"components/TopicPreferences.html":{}}}],["learningstylectrl",{"_index":2021,"title":{},"body":{"components/TopicPreferences.html":{}}}],["learningstylectrl.invalid",{"_index":2081,"title":{},"body":{"components/TopicPreferences.html":{}}}],["learningstylectrl.touched",{"_index":2082,"title":{},"body":{"components/TopicPreferences.html":{}}}],["legend",{"_index":24,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["lesson",{"_index":56,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"miscellaneous/variables.html":{}}}],["lesson/:subjectid",{"_index":2320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lesson_preference",{"_index":1898,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["lessonpage",{"_index":55,"title":{"components/LessonPage.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["lessons",{"_index":637,"title":{},"body":{"components/Features.html":{},"components/Landing.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/Pricing.html":{}}}],["lessonservice",{"_index":824,"title":{"injectables/LessonService.html":{}},"body":{"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Practice.html":{},"components/TopicPreferences.html":{},"coverage.html":{}}}],["letters",{"_index":1795,"title":{},"body":{"components/Signup.html":{}}}],["lg",{"_index":1997,"title":{},"body":{"components/Toast.html":{}}}],["library",{"_index":1682,"title":{},"body":{"components/Pricing.html":{}}}],["lied",{"_index":1641,"title":{},"body":{"components/Practice.html":{}}}],["link",{"_index":2124,"title":{},"body":{"components/VerifyEmail.html":{}}}],["linkify",{"_index":1273,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["links",{"_index":465,"title":{},"body":{"components/Contact.html":{}}}],["list",{"_index":2216,"title":{},"body":{"index.html":{}}}],["literal",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SaveQuestionData.html":{},"miscellaneous/typealiases.html":{}}}],["literature",{"_index":1824,"title":{},"body":{"components/Subjects.html":{}}}],["load",{"_index":1370,"title":{},"body":{"components/NamingUpload.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["loadcomponent",{"_index":2290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loaded",{"_index":1048,"title":{},"body":{"components/LessonPage.html":{}}}],["loading",{"_index":272,"title":{},"body":{"components/Chatbot.html":{},"components/CheckEmail.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["loadingsubjects",{"_index":1803,"title":{},"body":{"components/Subjects.html":{}}}],["local",{"_index":2198,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["locally",{"_index":1391,"title":{},"body":{"components/NamingUpload.html":{}}}],["localstorage.getitem('accesstoken",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpBaseService.html":{}}}],["localstorage.getitem('refreshtoken",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('accesstoken",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('refreshtoken",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('useremail",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('accesstoken",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"components/Login.html":{}}}],["localstorage.setitem('refreshtoken",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{},"components/Login.html":{}}}],["localstorage.setitem('useremail",{"_index":1236,"title":{},"body":{"components/Login.html":{}}}],["located",{"_index":896,"title":{},"body":{"components/LessonPage.html":{}}}],["log",{"_index":446,"title":{},"body":{"components/ConfirmLogout.html":{},"components/Signup.html":{}}}],["logcontent",{"_index":1721,"title":{},"body":{"components/Sidebar.html":{}}}],["logging",{"_index":179,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/Login.html":{}}}],["login",{"_index":58,"title":{"components/Login.html":{}},"body":{"components/About.html":{},"components/App.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login'},{'name",{"_index":59,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["login(credentials",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.html",{"_index":1213,"title":{},"body":{"components/Login.html":{}}}],["loginpayload",{"_index":1255,"title":{"interfaces/LoginPayload.html":{}},"body":{"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"interfaces/SignupPayload.html":{},"interfaces/VerifyEmailResponse.html":{},"coverage.html":{}}}],["loginresponse",{"_index":213,"title":{"interfaces/LoginResponse.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"interfaces/SignupPayload.html":{},"interfaces/VerifyEmailResponse.html":{},"coverage.html":{}}}],["logout",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfirmLogout.html":{},"components/Header.html":{}}}],["logout'},{'name",{"_index":40,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["logout.css",{"_index":438,"title":{},"body":{"components/ConfirmLogout.html":{}}}],["logout.html",{"_index":437,"title":{},"body":{"components/ConfirmLogout.html":{}}}],["logout.ts",{"_index":435,"title":{},"body":{"components/ConfirmLogout.html":{},"coverage.html":{}}}],["logout.ts:11",{"_index":442,"title":{},"body":{"components/ConfirmLogout.html":{}}}],["logout.ts:12",{"_index":441,"title":{},"body":{"components/ConfirmLogout.html":{}}}],["logout/confirm",{"_index":434,"title":{},"body":{"components/ConfirmLogout.html":{},"components/Header.html":{},"coverage.html":{}}}],["london",{"_index":920,"title":{},"body":{"components/LessonPage.html":{}}}],["looks",{"_index":1467,"title":{},"body":{"components/NotFound.html":{}}}],["loop",{"_index":1092,"title":{},"body":{"components/LessonPage.html":{}}}],["lost",{"_index":1473,"title":{},"body":{"components/NotFound.html":{}}}],["m.checkemail",{"_index":2301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m.home",{"_index":2292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m.lessonpage",{"_index":2323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m.login",{"_index":2296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m.namingupload",{"_index":2313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m.notfound",{"_index":2326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m.questionsettings",{"_index":2319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m.signup",{"_index":2294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m.subjects",{"_index":2304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m.subscription",{"_index":2307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m.topicpreferences",{"_index":2316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m.verifyemail",{"_index":2299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["madrid",{"_index":924,"title":{},"body":{"components/LessonPage.html":{}}}],["maestro",{"_index":428,"title":{},"body":{"components/CheckEmail.html":{},"components/Contact.html":{},"components/Features.html":{},"components/Header.html":{},"components/Landing.html":{},"components/Login.html":{},"components/NotFound.html":{},"components/Pricing.html":{},"components/Signup.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["maestroaidevs@gmail.com",{"_index":467,"title":{},"body":{"components/Contact.html":{}}}],["maestrofrontend",{"_index":2189,"title":{},"body":{"index.html":{}}}],["mail",{"_index":429,"title":{},"body":{"components/CheckEmail.html":{}}}],["main",{"_index":957,"title":{},"body":{"components/LessonPage.html":{}}}],["map",{"_index":871,"title":{},"body":{"components/LessonPage.html":{},"guards/SubscriptionGuard.html":{}}}],["map((r",{"_index":1032,"title":{},"body":{"components/LessonPage.html":{}}}],["map((res",{"_index":1004,"title":{},"body":{"components/LessonPage.html":{}}}],["map((subjects",{"_index":1008,"title":{},"body":{"components/LessonPage.html":{}}}],["map(st",{"_index":1936,"title":{},"body":{"guards/SubscriptionGuard.html":{}}}],["mark",{"_index":1079,"title":{},"body":{"components/LessonPage.html":{}}}],["markdown",{"_index":1266,"title":{},"body":{"pipes/MarkdownPipe.html":{},"components/Subtopic.html":{},"interfaces/SubtopicModel.html":{},"dependencies.html":{}}}],["markdownit",{"_index":1272,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["markdownitkatex",{"_index":1281,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["markdownmodule",{"_index":1968,"title":{},"body":{"components/Subtopic.html":{}}}],["markdownpipe",{"_index":264,"title":{"pipes/MarkdownPipe.html":{}},"body":{"components/Chatbot.html":{},"pipes/MarkdownPipe.html":{},"components/Practice.html":{},"components/Subtopic.html":{},"coverage.html":{}}}],["marksubtopicasread",{"_index":1172,"title":{},"body":{"injectables/LessonService.html":{}}}],["marksubtopicasread(topicid",{"_index":1185,"title":{},"body":{"injectables/LessonService.html":{}}}],["mastering",{"_index":1786,"title":{},"body":{"components/Signup.html":{}}}],["matching",{"_index":97,"title":{},"body":{"components/About.html":{},"interfaces/AnswerModel.html":{},"components/App.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/ChatMessage.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"interfaces/ExamModel.html":{},"classes/ExamSettings.html":{},"interfaces/ExerciseModel.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"directives/PasswordValidator.html":{},"interfaces/Plan.html":{},"components/Practice.html":{},"components/Pricing.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"interfaces/SignupPayload.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"interfaces/SubscriptionStatus.html":{},"components/Subtopic.html":{},"interfaces/SubtopicModel.html":{},"components/Toast.html":{},"interfaces/TopicModel.html":{},"components/TopicPreferences.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"components/VerifyEmail.html":{},"interfaces/VerifyEmailResponse.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mate",{"_index":1447,"title":{},"body":{"components/NotFound.html":{}}}],["material",{"_index":628,"title":{},"body":{"components/Features.html":{}}}],["materials",{"_index":807,"title":{},"body":{"components/Landing.html":{},"components/Login.html":{},"components/Subjects.html":{}}}],["math.round(fraction",{"_index":1112,"title":{},"body":{"components/LessonPage.html":{}}}],["mathematics",{"_index":1817,"title":{},"body":{"components/Subjects.html":{}}}],["max",{"_index":689,"title":{},"body":{"directives/FileTypeDirective.html":{},"components/NamingUpload.html":{}}}],["maxbytes",{"_index":676,"title":{},"body":{"directives/FileTypeDirective.html":{},"miscellaneous/functions.html":{}}}],["maxsubjects",{"_index":1545,"title":{},"body":{"interfaces/Plan.html":{},"interfaces/SubscriptionStatus.html":{}}}],["mb",{"_index":1355,"title":{},"body":{"components/NamingUpload.html":{}}}],["md",{"_index":1271,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["meet",{"_index":1784,"title":{},"body":{"components/Signup.html":{}}}],["message",{"_index":259,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/LessonPage.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"injectables/NotificationService.html":{},"interfaces/SignupPayload.html":{},"interfaces/VerifyEmailResponse.html":{}}}],["message.model",{"_index":339,"title":{},"body":{"components/Chatbot.html":{},"components/LessonPage.html":{}}}],["message.model.ts",{"_index":258,"title":{},"body":{"interfaces/ChatMessage.html":{},"coverage.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["metadata.model",{"_index":341,"title":{},"body":{"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/LessonPage.html":{}}}],["metadata.model.ts",{"_index":2146,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["methods",{"_index":134,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/CheckEmail.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"injectables/ExerciseService.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"injectables/UserService.html":{}}}],["mime",{"_index":683,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["miscellaneous",{"_index":2184,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":333,"title":{},"body":{"components/Chatbot.html":{}}}],["models/answer.model",{"_index":613,"title":{},"body":{"injectables/ExerciseService.html":{}}}],["models/auth",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["models/chat",{"_index":388,"title":{},"body":{"injectables/ChatbotService.html":{}}}],["models/question.model",{"_index":1199,"title":{},"body":{"injectables/LessonService.html":{}}}],["models/subscription.model",{"_index":1951,"title":{},"body":{"injectables/SubscriptionService.html":{}}}],["models/user.model",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["modify",{"_index":2210,"title":{},"body":{"index.html":{}}}],["modules",{"_index":2041,"title":{"modules.html":{}},"body":{"components/TopicPreferences.html":{},"modules.html":{}}}],["month",{"_index":1676,"title":{},"body":{"components/Pricing.html":{}}}],["more",{"_index":1689,"title":{},"body":{"components/Pricing.html":{},"index.html":{}}}],["mountainous",{"_index":961,"title":{},"body":{"components/LessonPage.html":{}}}],["ms",{"_index":1492,"title":{},"body":{"injectables/NotificationService.html":{}}}],["msg",{"_index":1491,"title":{},"body":{"injectables/NotificationService.html":{},"components/Toast.html":{},"miscellaneous/variables.html":{}}}],["multi",{"_index":1528,"title":{},"body":{"directives/PasswordValidator.html":{},"miscellaneous/variables.html":{}}}],["multiple",{"_index":911,"title":{},"body":{"components/LessonPage.html":{},"components/Practice.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{},"miscellaneous/typealiases.html":{}}}],["name",{"_index":30,"title":{},"body":{"components/About.html":{},"components/App.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"injectables/ExerciseService.html":{},"components/Features.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"directives/PasswordValidator.html":{},"interfaces/Plan.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"interfaces/SignupPayload.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"interfaces/SubscriptionStatus.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"injectables/UserService.html":{},"components/VerifyEmail.html":{},"interfaces/VerifyEmailResponse.html":{},"miscellaneous/functions.html":{}}}],["namectrl.errors?.['required",{"_index":1425,"title":{},"body":{"components/NamingUpload.html":{}}}],["namectrl.errors?.[\\'required",{"_index":1436,"title":{},"body":{"components/NamingUpload.html":{}}}],["namectrl.invalid",{"_index":1423,"title":{},"body":{"components/NamingUpload.html":{}}}],["namectrl.touched",{"_index":1424,"title":{},"body":{"components/NamingUpload.html":{}}}],["namefor",{"_index":2215,"title":{},"body":{"index.html":{}}}],["namesubject",{"_index":1387,"title":{},"body":{"components/NamingUpload.html":{},"injectables/SubjectsService.html":{}}}],["namesubject(sessionid",{"_index":1878,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["naming",{"_index":61,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["namingupload",{"_index":60,"title":{"components/NamingUpload.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["natural",{"_index":900,"title":{},"body":{"components/LessonPage.html":{}}}],["nav",{"_index":409,"title":{},"body":{"components/CheckEmail.html":{}}}],["nav?.extras?.state?.['email",{"_index":412,"title":{},"body":{"components/CheckEmail.html":{}}}],["navigate",{"_index":2204,"title":{},"body":{"index.html":{}}}],["navigatesection",{"_index":453,"title":{},"body":{"components/Contact.html":{},"components/Landing.html":{}}}],["navigatesubject",{"_index":1806,"title":{},"body":{"components/Subjects.html":{}}}],["navigatesubject(subject",{"_index":1809,"title":{},"body":{"components/Subjects.html":{}}}],["neatly",{"_index":1847,"title":{},"body":{"components/Subjects.html":{}}}],["need",{"_index":1688,"title":{},"body":{"components/Pricing.html":{}}}],["needed",{"_index":596,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/NamingUpload.html":{},"components/QuestionSettings.html":{}}}],["needs",{"_index":1385,"title":{},"body":{"components/NamingUpload.html":{},"index.html":{}}}],["nested",{"_index":2309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["never",{"_index":1464,"title":{},"body":{"components/NotFound.html":{}}}],["new",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"directives/FileTypeDirective.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/QuestionSettings.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"injectables/UserService.html":{},"components/VerifyEmail.html":{},"coverage.html":{},"index.html":{}}}],["newindex",{"_index":1133,"title":{},"body":{"components/LessonPage.html":{},"components/Practice.html":{}}}],["newsubjectid",{"_index":1836,"title":{},"body":{"components/Subjects.html":{}}}],["next",{"_index":146,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/Chatbot.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subtopic.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"miscellaneous/variables.html":{}}}],["next(req).pipe",{"_index":2283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next.handle(authreq).pipe",{"_index":173,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["nextsubtopic",{"_index":1959,"title":{},"body":{"components/Subtopic.html":{}}}],["ng",{"_index":2200,"title":{},"body":{"index.html":{}}}],["ng_validators",{"_index":1525,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["ngafterviewinit",{"_index":275,"title":{},"body":{"components/Chatbot.html":{}}}],["ngclass",{"_index":494,"title":{},"body":{"components/CreationStepTab.html":{}}}],["ngmodel",{"_index":1223,"title":{},"body":{"components/Login.html":{},"components/Signup.html":{},"components/TopicPreferences.html":{}}}],["ngoninit",{"_index":483,"title":{},"body":{"components/CreationStepTab.html":{},"components/Home.html":{},"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/TopicPreferences.html":{}}}],["ngx",{"_index":1969,"title":{},"body":{"components/Subtopic.html":{},"dependencies.html":{}}}],["nile",{"_index":933,"title":{},"body":{"components/LessonPage.html":{}}}],["north",{"_index":980,"title":{},"body":{"components/LessonPage.html":{}}}],["notes",{"_index":649,"title":{},"body":{"components/Features.html":{}}}],["notfound",{"_index":63,"title":{"components/NotFound.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["nothing",{"_index":1060,"title":{},"body":{"components/LessonPage.html":{}}}],["noticed",{"_index":1451,"title":{},"body":{"components/NotFound.html":{}}}],["noticetype",{"_index":1490,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["notificationservice",{"_index":344,"title":{"injectables/NotificationService.html":{}},"body":{"components/Chatbot.html":{},"components/CheckEmail.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"injectables/NotificationService.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"coverage.html":{}}}],["notify",{"_index":273,"title":{},"body":{"components/Chatbot.html":{},"components/CheckEmail.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"miscellaneous/variables.html":{}}}],["notify.showerror(msg",{"_index":2288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["now",{"_index":1049,"title":{},"body":{"components/LessonPage.html":{},"components/NamingUpload.html":{}}}],["null",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"components/CheckEmail.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"directives/FileTypeDirective.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{}}}],["number",{"_index":406,"title":{},"body":{"components/CheckEmail.html":{},"interfaces/ExamModel.html":{},"interfaces/ExerciseModel.html":{},"directives/FileTypeDirective.html":{},"injectables/LessonService.html":{},"injectables/NotificationService.html":{},"interfaces/Plan.html":{},"injectables/SubjectsService.html":{},"interfaces/SubscriptionStatus.html":{},"miscellaneous/functions.html":{}}}],["numbers",{"_index":1796,"title":{},"body":{"components/Signup.html":{}}}],["o.id",{"_index":1597,"title":{},"body":{"components/Practice.html":{}}}],["object",{"_index":1101,"title":{},"body":{"components/LessonPage.html":{},"miscellaneous/variables.html":{}}}],["objectives",{"_index":2040,"title":{},"body":{"components/TopicPreferences.html":{}}}],["observable",{"_index":151,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/ChatbotService.html":{},"classes/ExamSettings.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"injectables/HttpBaseService.html":{},"injectables/LessonService.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"injectables/SubjectsService.html":{},"injectables/SubscriptionService.html":{},"injectables/UserService.html":{}}}],["occurred",{"_index":2287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ocean",{"_index":929,"title":{},"body":{"components/LessonPage.html":{}}}],["oceans",{"_index":926,"title":{},"body":{"components/LessonPage.html":{}}}],["of(null",{"_index":1630,"title":{},"body":{"components/Practice.html":{}}}],["of(null)]).pipe",{"_index":1653,"title":{},"body":{"components/Practice.html":{}}}],["ok",{"_index":698,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["old_subjects",{"_index":1804,"title":{},"body":{"components/Subjects.html":{}}}],["old_topics",{"_index":2022,"title":{},"body":{"components/TopicPreferences.html":{}}}],["oncancel",{"_index":1906,"title":{},"body":{"components/Subscription.html":{}}}],["onchange",{"_index":675,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["onchange(ev",{"_index":702,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["onclosechat",{"_index":276,"title":{},"body":{"components/Chatbot.html":{}}}],["oncontactclick",{"_index":796,"title":{},"body":{"components/Landing.html":{}}}],["ondragleave",{"_index":1296,"title":{},"body":{"components/NamingUpload.html":{}}}],["ondragleave(event",{"_index":1308,"title":{},"body":{"components/NamingUpload.html":{}}}],["ondragover",{"_index":1297,"title":{},"body":{"components/NamingUpload.html":{}}}],["ondragover(event",{"_index":1311,"title":{},"body":{"components/NamingUpload.html":{}}}],["one",{"_index":553,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/QuestionSettings.html":{},"components/TopicPreferences.html":{},"index.html":{}}}],["onfeaturesclick",{"_index":450,"title":{},"body":{"components/Contact.html":{},"components/Landing.html":{}}}],["onfiledrop",{"_index":1298,"title":{},"body":{"components/NamingUpload.html":{}}}],["onfiledrop(event",{"_index":1313,"title":{},"body":{"components/NamingUpload.html":{}}}],["onfileselect",{"_index":1299,"title":{},"body":{"components/NamingUpload.html":{}}}],["onfileselect(event",{"_index":1315,"title":{},"body":{"components/NamingUpload.html":{}}}],["ongetstartedclick",{"_index":797,"title":{},"body":{"components/Landing.html":{}}}],["onhomeclick",{"_index":451,"title":{},"body":{"components/Contact.html":{},"components/Landing.html":{}}}],["oninit",{"_index":476,"title":{},"body":{"components/CreationStepTab.html":{},"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/TopicPreferences.html":{}}}],["onpricingclick",{"_index":452,"title":{},"body":{"components/Contact.html":{},"components/Landing.html":{}}}],["onsubmit",{"_index":544,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{},"components/TopicPreferences.html":{}}}],["onsubscribe",{"_index":1907,"title":{},"body":{"components/Subscription.html":{}}}],["onsubscribe(id",{"_index":1914,"title":{},"body":{"components/Subscription.html":{}}}],["oops",{"_index":1466,"title":{},"body":{"components/NotFound.html":{}}}],["open",{"_index":2203,"title":{},"body":{"index.html":{}}}],["openlogout",{"_index":730,"title":{},"body":{"components/Header.html":{}}}],["opt.correct",{"_index":1613,"title":{},"body":{"components/Practice.html":{}}}],["opt.id",{"_index":1616,"title":{},"body":{"components/Practice.html":{}}}],["opt.selected",{"_index":1612,"title":{},"body":{"components/Practice.html":{}}}],["optimizes",{"_index":2227,"title":{},"body":{"index.html":{}}}],["option",{"_index":1595,"title":{},"body":{"components/Practice.html":{}}}],["option.id",{"_index":1594,"title":{},"body":{"components/Practice.html":{}}}],["option.selected",{"_index":1593,"title":{},"body":{"components/Practice.html":{}}}],["option_id",{"_index":913,"title":{},"body":{"components/LessonPage.html":{}}}],["option_text",{"_index":915,"title":{},"body":{"components/LessonPage.html":{}}}],["optional",{"_index":142,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/CheckEmail.html":{},"interfaces/ExamModel.html":{},"interfaces/ExerciseModel.html":{},"injectables/ExerciseService.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"interfaces/QuestionModel.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"injectables/UserService.html":{},"components/VerifyEmail.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":660,"title":{},"body":{"components/Features.html":{},"components/LessonPage.html":{},"components/Practice.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"interfaces/SaveQuestionData.html":{}}}],["out",{"_index":180,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/ConfirmLogout.html":{},"components/NotFound.html":{}}}],["output",{"_index":334,"title":{},"body":{"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"directives/FileTypeDirective.html":{},"components/Landing.html":{},"components/Practice.html":{},"components/Sidebar.html":{},"components/Subtopic.html":{}}}],["outputs",{"_index":282,"title":{},"body":{"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"directives/FileTypeDirective.html":{},"components/Landing.html":{},"components/Practice.html":{},"components/Sidebar.html":{},"components/Subtopic.html":{}}}],["overview",{"_index":2039,"title":{"overview.html":{}},"body":{"components/TopicPreferences.html":{},"index.html":{},"overview.html":{}}}],["p",{"_index":1994,"title":{},"body":{"components/Toast.html":{}}}],["pacific",{"_index":930,"title":{},"body":{"components/LessonPage.html":{}}}],["package",{"_index":2170,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":186,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/LessonPage.html":{},"components/NotFound.html":{},"index.html":{}}}],["page').then(m",{"_index":2322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["page'},{'name",{"_index":57,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["page.css",{"_index":821,"title":{},"body":{"components/LessonPage.html":{}}}],["page.html",{"_index":820,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts",{"_index":819,"title":{},"body":{"components/LessonPage.html":{},"coverage.html":{}}}],["page.ts:185",{"_index":846,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts:21",{"_index":864,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts:22",{"_index":855,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts:23",{"_index":863,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts:24",{"_index":860,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts:29",{"_index":854,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts:292",{"_index":852,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts:30",{"_index":856,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts:31",{"_index":865,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts:32",{"_index":862,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts:33",{"_index":835,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts:337",{"_index":853,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts:380",{"_index":845,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts:386",{"_index":844,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts:392",{"_index":842,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts:409",{"_index":840,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts:428",{"_index":849,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts:459",{"_index":847,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts:464",{"_index":837,"title":{},"body":{"components/LessonPage.html":{}}}],["page/lesson",{"_index":818,"title":{},"body":{"components/LessonPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["parallel",{"_index":566,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/QuestionSettings.html":{}}}],["parameters",{"_index":141,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/CheckEmail.html":{},"injectables/ExerciseService.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"injectables/UserService.html":{},"components/VerifyEmail.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":2112,"title":{},"body":{"components/VerifyEmail.html":{}}}],["parent",{"_index":1657,"title":{},"body":{"components/Practice.html":{}}}],["paris",{"_index":916,"title":{},"body":{"components/LessonPage.html":{}}}],["part",{"_index":997,"title":{},"body":{"components/LessonPage.html":{}}}],["partial",{"_index":2097,"title":{},"body":{"injectables/UserService.html":{}}}],["parts",{"_index":992,"title":{},"body":{"components/LessonPage.html":{}}}],["parts[parts.length",{"_index":994,"title":{},"body":{"components/LessonPage.html":{}}}],["password",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"components/Login.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"components/Signup.html":{},"interfaces/SignupPayload.html":{},"interfaces/VerifyEmailResponse.html":{}}}],["passwordctrl",{"_index":1215,"title":{},"body":{"components/Login.html":{},"components/Signup.html":{}}}],["passwordctrl.errors?.['invalidpassword",{"_index":1793,"title":{},"body":{"components/Signup.html":{}}}],["passwordctrl.errors?.['required",{"_index":1792,"title":{},"body":{"components/Signup.html":{}}}],["passwordctrl.errors?.[\\'invalidpassword",{"_index":1799,"title":{},"body":{"components/Signup.html":{}}}],["passwordctrl.errors?.[\\'required",{"_index":1798,"title":{},"body":{"components/Signup.html":{}}}],["passwordctrl.invalid",{"_index":1250,"title":{},"body":{"components/Login.html":{},"components/Signup.html":{}}}],["passwordctrl.touched",{"_index":1251,"title":{},"body":{"components/Login.html":{},"components/Signup.html":{}}}],["passwordmismatch",{"_index":1541,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["passwordvalidator",{"_index":93,"title":{"directives/PasswordValidator.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["passwordvisible",{"_index":1216,"title":{},"body":{"components/Login.html":{},"components/Signup.html":{}}}],["path",{"_index":2289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paths",{"_index":641,"title":{},"body":{"components/Features.html":{}}}],["patterns",{"_index":948,"title":{},"body":{"components/LessonPage.html":{}}}],["payload",{"_index":610,"title":{},"body":{"injectables/ExerciseService.html":{}}}],["payload.model",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.model.ts",{"_index":1257,"title":{},"body":{"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"interfaces/SignupPayload.html":{},"interfaces/VerifyEmailResponse.html":{},"coverage.html":{}}}],["pdf",{"_index":1431,"title":{},"body":{"components/NamingUpload.html":{}}}],["pdfs",{"_index":631,"title":{},"body":{"components/Features.html":{},"components/NamingUpload.html":{}}}],["pending",{"_index":1366,"title":{},"body":{"components/NamingUpload.html":{},"components/Subjects.html":{}}}],["people",{"_index":885,"title":{},"body":{"components/LessonPage.html":{}}}],["per",{"_index":1103,"title":{},"body":{"components/LessonPage.html":{},"components/Pricing.html":{}}}],["percentage",{"_index":1106,"title":{},"body":{"components/LessonPage.html":{}}}],["performance",{"_index":2228,"title":{},"body":{"index.html":{}}}],["personal",{"_index":1697,"title":{},"body":{"components/Pricing.html":{}}}],["personalized",{"_index":461,"title":{},"body":{"components/Contact.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/Pricing.html":{},"components/TopicPreferences.html":{}}}],["physical",{"_index":898,"title":{},"body":{"components/LessonPage.html":{}}}],["pick",{"_index":1011,"title":{},"body":{"components/LessonPage.html":{}}}],["pinpointing",{"_index":669,"title":{},"body":{"components/Features.html":{}}}],["pipe",{"_index":343,"title":{"pipes/MarkdownPipe.html":{}},"body":{"components/Chatbot.html":{},"components/LessonPage.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/Subtopic.html":{},"coverage.html":{},"overview.html":{}}}],["pipe.ts",{"_index":1265,"title":{},"body":{"pipes/MarkdownPipe.html":{},"coverage.html":{}}}],["pipe.ts:11",{"_index":1276,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["pipe.ts:16",{"_index":1269,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["pipes",{"_index":1263,"title":{},"body":{"pipes/MarkdownPipe.html":{},"index.html":{}}}],["pipetransform",{"_index":1277,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["places",{"_index":882,"title":{},"body":{"components/LessonPage.html":{}}}],["plan",{"_index":1542,"title":{"interfaces/Plan.html":{}},"body":{"interfaces/Plan.html":{},"components/Subscription.html":{},"injectables/SubscriptionService.html":{},"interfaces/SubscriptionStatus.html":{},"coverage.html":{}}}],["planid",{"_index":1949,"title":{},"body":{"injectables/SubscriptionService.html":{}}}],["plans",{"_index":812,"title":{},"body":{"components/Landing.html":{},"components/Pricing.html":{},"components/Subscription.html":{}}}],["please",{"_index":376,"title":{},"body":{"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["png",{"_index":1430,"title":{},"body":{"components/NamingUpload.html":{}}}],["pollution",{"_index":968,"title":{},"body":{"components/LessonPage.html":{}}}],["popout",{"_index":731,"title":{},"body":{"components/Header.html":{}}}],["popular",{"_index":1684,"title":{},"body":{"components/Pricing.html":{}}}],["post",{"_index":768,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["post(endpoint",{"_index":778,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["potential",{"_index":806,"title":{},"body":{"components/Landing.html":{}}}],["power",{"_index":1672,"title":{},"body":{"components/Pricing.html":{}}}],["powered",{"_index":1785,"title":{},"body":{"components/Signup.html":{}}}],["powerful",{"_index":2213,"title":{},"body":{"index.html":{}}}],["practice",{"_index":65,"title":{"components/Practice.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["practice'},{'name",{"_index":66,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["practice.css",{"_index":1553,"title":{},"body":{"components/Practice.html":{}}}],["practice.html",{"_index":1552,"title":{},"body":{"components/Practice.html":{}}}],["practice/practice",{"_index":869,"title":{},"body":{"components/LessonPage.html":{}}}],["preference",{"_index":520,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["preferences",{"_index":1406,"title":{},"body":{"components/NamingUpload.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{},"miscellaneous/variables.html":{}}}],["preferences').then(m",{"_index":2315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preferences'},{'name",{"_index":86,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["preferences.css",{"_index":2019,"title":{},"body":{"components/TopicPreferences.html":{}}}],["preferences.html",{"_index":2018,"title":{},"body":{"components/TopicPreferences.html":{}}}],["preferences.ts",{"_index":2017,"title":{},"body":{"components/TopicPreferences.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["preferences.ts:101",{"_index":2026,"title":{},"body":{"components/TopicPreferences.html":{}}}],["preferences.ts:24",{"_index":2029,"title":{},"body":{"components/TopicPreferences.html":{}}}],["preferences.ts:25",{"_index":2048,"title":{},"body":{"components/TopicPreferences.html":{}}}],["preferences.ts:26",{"_index":2031,"title":{},"body":{"components/TopicPreferences.html":{}}}],["preferences.ts:27",{"_index":2033,"title":{},"body":{"components/TopicPreferences.html":{}}}],["preferences.ts:28",{"_index":2047,"title":{},"body":{"components/TopicPreferences.html":{}}}],["preferences.ts:65",{"_index":2050,"title":{},"body":{"components/TopicPreferences.html":{}}}],["preferences.ts:66",{"_index":2049,"title":{},"body":{"components/TopicPreferences.html":{}}}],["preferences.ts:67",{"_index":2032,"title":{},"body":{"components/TopicPreferences.html":{}}}],["preferences.ts:68",{"_index":2024,"title":{},"body":{"components/TopicPreferences.html":{}}}],["preferences.ts:77",{"_index":2028,"title":{},"body":{"components/TopicPreferences.html":{}}}],["preferences.ts:85",{"_index":2025,"title":{},"body":{"components/TopicPreferences.html":{}}}],["preferences/topic",{"_index":2016,"title":{},"body":{"components/TopicPreferences.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["preferred",{"_index":643,"title":{},"body":{"components/Features.html":{}}}],["prefs",{"_index":1865,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["preloaded",{"_index":353,"title":{},"body":{"components/Chatbot.html":{}}}],["premium",{"_index":1693,"title":{},"body":{"components/Pricing.html":{}}}],["prev",{"_index":1972,"title":{},"body":{"components/Subtopic.html":{}}}],["prevent",{"_index":1411,"title":{},"body":{"components/NamingUpload.html":{}}}],["previous",{"_index":1128,"title":{},"body":{"components/LessonPage.html":{},"components/Practice.html":{},"components/Subtopic.html":{}}}],["prevsubtopic",{"_index":1960,"title":{},"body":{"components/Subtopic.html":{}}}],["price",{"_index":1546,"title":{},"body":{"interfaces/Plan.html":{},"interfaces/SubscriptionStatus.html":{}}}],["pricing",{"_index":67,"title":{"components/Pricing.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["pricing'},{'name",{"_index":68,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["pricing.css",{"_index":1666,"title":{},"body":{"components/Pricing.html":{}}}],["pricing.html",{"_index":1665,"title":{},"body":{"components/Pricing.html":{}}}],["pricing/pricing",{"_index":760,"title":{},"body":{"components/Home.html":{}}}],["private",{"_index":163,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"injectables/ExerciseService.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"injectables/NotificationService.html":{},"components/Practice.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"injectables/UserService.html":{}}}],["proceed",{"_index":1600,"title":{},"body":{"components/Practice.html":{}}}],["production",{"_index":2226,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":668,"title":{},"body":{"components/Features.html":{},"components/LessonPage.html":{},"components/Practice.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{}}}],["progress\").subscribe",{"_index":583,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["project",{"_index":2190,"title":{},"body":{"index.html":{}}}],["prompt",{"_index":107,"title":{},"body":{"interfaces/AnswerModel.html":{}}}],["properties",{"_index":103,"title":{"properties.html":{}},"body":{"interfaces/AnswerModel.html":{},"components/App.html":{},"injectables/AuthService.html":{},"interfaces/ChatMessage.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/CheckEmail.html":{},"components/CreationStepTab.html":{},"interfaces/ExamModel.html":{},"classes/ExamSettings.html":{},"interfaces/ExerciseModel.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"components/Header.html":{},"injectables/HttpBaseService.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"injectables/NotificationService.html":{},"interfaces/Plan.html":{},"components/Practice.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{},"components/Signup.html":{},"interfaces/SignupPayload.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"injectables/SubscriptionService.html":{},"interfaces/SubscriptionStatus.html":{},"interfaces/SubtopicModel.html":{},"components/Toast.html":{},"interfaces/TopicModel.html":{},"components/TopicPreferences.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"components/VerifyEmail.html":{},"interfaces/VerifyEmailResponse.html":{},"properties.html":{}}}],["protected",{"_index":118,"title":{},"body":{"components/App.html":{}}}],["provide",{"_index":1526,"title":{},"body":{"directives/PasswordValidator.html":{},"miscellaneous/variables.html":{}}}],["providebrowserglobalerrorlisteners",{"_index":2270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatbotService.html":{},"injectables/ExerciseService.html":{},"injectables/HttpBaseService.html":{},"injectables/LessonService.html":{},"injectables/NotificationService.html":{},"injectables/SubjectsService.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"injectables/UserService.html":{}}}],["providehttpclient(withinterceptorsfromdi",{"_index":2273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providemarkdown",{"_index":2276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":2272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1519,"title":{},"body":{"directives/PasswordValidator.html":{},"components/Toast.html":{},"miscellaneous/variables.html":{}}}],["providezonelesschangedetection",{"_index":2271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prussian",{"_index":500,"title":{},"body":{"components/CreationStepTab.html":{}}}],["public",{"_index":1980,"title":{},"body":{"components/Toast.html":{}}}],["put",{"_index":769,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["put(endpoint",{"_index":781,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["pw",{"_index":1537,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["q",{"_index":1606,"title":{},"body":{"components/Practice.html":{}}}],["q.essay_answer",{"_index":1624,"title":{},"body":{"components/Practice.html":{}}}],["q.essay_feedback",{"_index":1625,"title":{},"body":{"components/Practice.html":{}}}],["q.id",{"_index":1583,"title":{},"body":{"components/Practice.html":{}}}],["q.options",{"_index":1614,"title":{},"body":{"components/Practice.html":{}}}],["q1",{"_index":907,"title":{},"body":{"components/LessonPage.html":{}}}],["q2",{"_index":925,"title":{},"body":{"components/LessonPage.html":{}}}],["q3",{"_index":934,"title":{},"body":{"components/LessonPage.html":{}}}],["qt",{"_index":537,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["query",{"_index":2111,"title":{},"body":{"components/VerifyEmail.html":{}}}],["question",{"_index":70,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["question.essay_answer",{"_index":1617,"title":{},"body":{"components/Practice.html":{}}}],["question.essay_answer).pipe",{"_index":1620,"title":{},"body":{"components/Practice.html":{}}}],["question.essay_feedback",{"_index":1626,"title":{},"body":{"components/Practice.html":{}}}],["question.id",{"_index":1607,"title":{},"body":{"components/Practice.html":{}}}],["question.model",{"_index":513,"title":{},"body":{"interfaces/ExamModel.html":{},"interfaces/ExerciseModel.html":{}}}],["question.options",{"_index":1663,"title":{},"body":{"components/Practice.html":{}}}],["question.options?.every(opt",{"_index":1611,"title":{},"body":{"components/Practice.html":{}}}],["question.options?.map(opt",{"_index":1615,"title":{},"body":{"components/Practice.html":{}}}],["question.type",{"_index":1608,"title":{},"body":{"components/Practice.html":{}}}],["question_data",{"_index":1209,"title":{},"body":{"injectables/LessonService.html":{}}}],["question_event",{"_index":850,"title":{},"body":{"components/LessonPage.html":{}}}],["question_event.id",{"_index":1150,"title":{},"body":{"components/LessonPage.html":{}}}],["question_id",{"_index":906,"title":{},"body":{"components/LessonPage.html":{},"injectables/LessonService.html":{}}}],["question_text",{"_index":908,"title":{},"body":{"components/LessonPage.html":{}}}],["question_type",{"_index":910,"title":{},"body":{"components/LessonPage.html":{}}}],["question_types",{"_index":1900,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["questiondata",{"_index":1190,"title":{},"body":{"injectables/LessonService.html":{},"components/Practice.html":{}}}],["questiondata).pipe",{"_index":1649,"title":{},"body":{"components/Practice.html":{}}}],["questiondata.push(q",{"_index":1631,"title":{},"body":{"components/Practice.html":{}}}],["questionid",{"_index":108,"title":{},"body":{"interfaces/AnswerModel.html":{},"injectables/LessonService.html":{}}}],["questionmodel",{"_index":512,"title":{"interfaces/QuestionModel.html":{}},"body":{"interfaces/ExamModel.html":{},"interfaces/ExerciseModel.html":{},"components/Practice.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"interfaces/SaveQuestionData.html":{},"coverage.html":{}}}],["questionoption",{"_index":1699,"title":{"interfaces/QuestionOption.html":{}},"body":{"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"interfaces/SaveQuestionData.html":{},"coverage.html":{}}}],["questions",{"_index":510,"title":{},"body":{"interfaces/ExamModel.html":{},"classes/ExamSettings.html":{},"interfaces/ExerciseModel.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/QuestionSettings.html":{},"components/TopicPreferences.html":{}}}],["questionsettings",{"_index":69,"title":{"components/QuestionSettings.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["questiontype",{"_index":1700,"title":{},"body":{"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"interfaces/SaveQuestionData.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["questiontypes",{"_index":521,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{},"injectables/SubjectsService.html":{}}}],["question{{(currentview.content.questions.length",{"_index":1160,"title":{},"body":{"components/LessonPage.html":{}}}],["queuemicrotask",{"_index":315,"title":{},"body":{"components/Chatbot.html":{}}}],["quick",{"_index":464,"title":{},"body":{"components/Contact.html":{}}}],["quickly",{"_index":659,"title":{},"body":{"components/Features.html":{}}}],["quizzes",{"_index":665,"title":{},"body":{"components/Features.html":{},"components/Landing.html":{}}}],["r.exercise",{"_index":1035,"title":{},"body":{"components/LessonPage.html":{}}}],["r.subtopics",{"_index":1033,"title":{},"body":{"components/LessonPage.html":{}}}],["read",{"_index":887,"title":{},"body":{"components/LessonPage.html":{},"injectables/LessonService.html":{},"interfaces/SubtopicModel.html":{}}}],["readme",{"_index":2188,"title":{"index.html":{}},"body":{}}],["readonly",{"_index":119,"title":{},"body":{"components/App.html":{},"injectables/HttpBaseService.html":{}}}],["real",{"_index":1766,"title":{},"body":{"components/Signup.html":{}}}],["reason",{"_index":695,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["red",{"_index":2001,"title":{},"body":{"components/Toast.html":{}}}],["redirect",{"_index":185,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["redirecting",{"_index":2126,"title":{},"body":{"components/VerifyEmail.html":{}}}],["reducing",{"_index":973,"title":{},"body":{"components/LessonPage.html":{}}}],["reference",{"_index":2251,"title":{},"body":{"index.html":{}}}],["references",{"_index":2249,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":1658,"title":{},"body":{"components/Practice.html":{},"components/Subscription.html":{}}}],["refreshaccesstoken",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"interfaces/SignupPayload.html":{},"interfaces/VerifyEmailResponse.html":{}}}],["regex",{"_index":1530,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["regex.test(control.value",{"_index":1535,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["regions",{"_index":945,"title":{},"body":{"components/LessonPage.html":{}}}],["reinforce",{"_index":1162,"title":{},"body":{"components/LessonPage.html":{}}}],["rejected",{"_index":696,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["relationships",{"_index":883,"title":{},"body":{"components/LessonPage.html":{}}}],["reload",{"_index":2208,"title":{},"body":{"index.html":{}}}],["removefile",{"_index":1300,"title":{},"body":{"components/NamingUpload.html":{}}}],["removefile(file",{"_index":1318,"title":{},"body":{"components/NamingUpload.html":{}}}],["rendered",{"_index":313,"title":{},"body":{"components/Chatbot.html":{}}}],["replace",{"_index":1765,"title":{},"body":{"components/Signup.html":{}}}],["req",{"_index":149,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"miscellaneous/variables.html":{}}}],["req.clone",{"_index":168,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["request",{"_index":178,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["requests",{"_index":564,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["requests.length",{"_index":576,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["requests.push",{"_index":567,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["required",{"_index":489,"title":{},"body":{"components/CreationStepTab.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/Signup.html":{},"components/TopicPreferences.html":{}}}],["res",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"directives/FileTypeDirective.html":{}}}],["res.accesstoken",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["res.exam",{"_index":1045,"title":{},"body":{"components/LessonPage.html":{}}}],["res.exercise",{"_index":1039,"title":{},"body":{"components/LessonPage.html":{}}}],["res.ok",{"_index":716,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["res.refreshtoken",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["res.sessions",{"_index":1005,"title":{},"body":{"components/LessonPage.html":{}}}],["res.subtopics",{"_index":1037,"title":{},"body":{"components/LessonPage.html":{}}}],["res.topics",{"_index":1021,"title":{},"body":{"components/LessonPage.html":{}}}],["resend",{"_index":427,"title":{},"body":{"components/CheckEmail.html":{}}}],["resending",{"_index":432,"title":{},"body":{"components/CheckEmail.html":{}}}],["resendtimer",{"_index":396,"title":{},"body":{"components/CheckEmail.html":{}}}],["resendverificationemail",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"components/CheckEmail.html":{}}}],["resendverificationemail(email",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["resent",{"_index":423,"title":{},"body":{"components/CheckEmail.html":{}}}],["reserved",{"_index":471,"title":{},"body":{"components/Contact.html":{}}}],["reset",{"_index":722,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["resonates",{"_index":646,"title":{},"body":{"components/Features.html":{}}}],["resources",{"_index":2247,"title":{},"body":{"index.html":{}}}],["response",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["response.accesstoken",{"_index":1232,"title":{},"body":{"components/Login.html":{}}}],["response.history",{"_index":1000,"title":{},"body":{"components/LessonPage.html":{}}}],["response.refreshtoken",{"_index":1233,"title":{},"body":{"components/Login.html":{}}}],["response.response",{"_index":368,"title":{},"body":{"components/Chatbot.html":{}}}],["response.session",{"_index":1362,"title":{},"body":{"components/NamingUpload.html":{}}}],["response.session.id",{"_index":1837,"title":{},"body":{"components/Subjects.html":{}}}],["response.sessions",{"_index":1831,"title":{},"body":{"components/Subjects.html":{}}}],["response.topics",{"_index":2056,"title":{},"body":{"components/TopicPreferences.html":{}}}],["response.user",{"_index":1234,"title":{},"body":{"components/Login.html":{}}}],["responses",{"_index":578,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["results",{"_index":96,"title":{},"body":{"components/About.html":{},"interfaces/AnswerModel.html":{},"components/App.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/ChatMessage.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"interfaces/ExamModel.html":{},"classes/ExamSettings.html":{},"interfaces/ExerciseModel.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"directives/PasswordValidator.html":{},"interfaces/Plan.html":{},"components/Practice.html":{},"components/Pricing.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"interfaces/SignupPayload.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"interfaces/SubscriptionStatus.html":{},"components/Subtopic.html":{},"interfaces/SubtopicModel.html":{},"components/Toast.html":{},"interfaces/TopicModel.html":{},"components/TopicPreferences.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"components/VerifyEmail.html":{},"interfaces/VerifyEmailResponse.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":172,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"classes/ExamSettings.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"directives/FileTypeDirective.html":{},"injectables/HttpBaseService.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"injectables/SubjectsService.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"components/TopicPreferences.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":150,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/CheckEmail.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"injectables/ExerciseService.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"injectables/UserService.html":{}}}],["right",{"_index":1988,"title":{},"body":{"components/Toast.html":{}}}],["rights",{"_index":470,"title":{},"body":{"components/Contact.html":{}}}],["river",{"_index":932,"title":{},"body":{"components/LessonPage.html":{}}}],["root",{"_index":114,"title":{},"body":{"components/App.html":{},"injectables/AuthService.html":{},"injectables/ChatbotService.html":{},"injectables/ExerciseService.html":{},"injectables/HttpBaseService.html":{},"injectables/LessonService.html":{},"injectables/NotificationService.html":{},"injectables/SubjectsService.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":32,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["rounded",{"_index":1995,"title":{},"body":{"components/Toast.html":{}}}],["route",{"_index":989,"title":{},"body":{"components/LessonPage.html":{}}}],["router",{"_index":139,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/CheckEmail.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{},"components/Subjects.html":{},"guards/SubscriptionGuard.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["routerlink",{"_index":725,"title":{},"body":{"components/Header.html":{},"components/Sidebar.html":{},"components/Subjects.html":{}}}],["routeroutlet",{"_index":115,"title":{},"body":{"components/App.html":{}}}],["routes",{"_index":2137,"title":{"routes.html":{}},"body":{"coverage.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":565,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"index.html":{}}}],["runner",{"_index":2235,"title":{},"body":{"index.html":{}}}],["running",{"_index":2202,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":159,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"classes/ExamSettings.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"injectables/HttpBaseService.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"injectables/SubjectsService.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["s",{"_index":1161,"title":{},"body":{"components/LessonPage.html":{}}}],["s.id",{"_index":1010,"title":{},"body":{"components/LessonPage.html":{}}}],["s1",{"_index":880,"title":{},"body":{"components/LessonPage.html":{}}}],["s2",{"_index":888,"title":{},"body":{"components/LessonPage.html":{}}}],["s3",{"_index":897,"title":{},"body":{"components/LessonPage.html":{}}}],["safehtml",{"_index":1270,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["sanitizer",{"_index":1283,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["save",{"_index":1643,"title":{},"body":{"components/Practice.html":{},"components/Pricing.html":{}}}],["savecall",{"_index":1644,"title":{},"body":{"components/Practice.html":{}}}],["saved",{"_index":1681,"title":{},"body":{"components/Pricing.html":{}}}],["saveexamscore",{"_index":1173,"title":{},"body":{"injectables/LessonService.html":{}}}],["saveexamscore(sessionid",{"_index":1188,"title":{},"body":{"injectables/LessonService.html":{}}}],["saveexercisescore",{"_index":1174,"title":{},"body":{"injectables/LessonService.html":{}}}],["saveexercisescore(topicid",{"_index":1193,"title":{},"body":{"injectables/LessonService.html":{}}}],["savequestiondata",{"_index":1191,"title":{"interfaces/SaveQuestionData.html":{}},"body":{"injectables/LessonService.html":{},"components/Practice.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"interfaces/SaveQuestionData.html":{},"coverage.html":{}}}],["saving",{"_index":1659,"title":{},"body":{"components/Practice.html":{}}}],["scaffolding",{"_index":2211,"title":{},"body":{"index.html":{}}}],["schematics",{"_index":2218,"title":{},"body":{"index.html":{}}}],["science",{"_index":1823,"title":{},"body":{"components/Subjects.html":{}}}],["score",{"_index":511,"title":{},"body":{"interfaces/ExamModel.html":{},"interfaces/ExerciseModel.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Practice.html":{}}}],["scoreessayquestion",{"_index":1175,"title":{},"body":{"injectables/LessonService.html":{}}}],["scoreessayquestion(sessionid",{"_index":1196,"title":{},"body":{"injectables/LessonService.html":{}}}],["scoring",{"_index":1629,"title":{},"body":{"components/Practice.html":{}}}],["scroll",{"_index":304,"title":{},"body":{"components/Chatbot.html":{}}}],["scrollable",{"_index":1453,"title":{},"body":{"components/NotFound.html":{}}}],["scrollbar",{"_index":2180,"title":{},"body":{"dependencies.html":{}}}],["scrollto",{"_index":749,"title":{},"body":{"components/Home.html":{}}}],["scrollto(section",{"_index":754,"title":{},"body":{"components/Home.html":{}}}],["scrolltobottom",{"_index":277,"title":{},"body":{"components/Chatbot.html":{}}}],["seconds",{"_index":417,"title":{},"body":{"components/CheckEmail.html":{}}}],["section",{"_index":757,"title":{},"body":{"components/Home.html":{}}}],["seem",{"_index":1632,"title":{},"body":{"components/Practice.html":{}}}],["select",{"_index":2068,"title":{},"body":{"components/TopicPreferences.html":{}}}],["selected",{"_index":918,"title":{},"body":{"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"interfaces/SaveQuestionData.html":{},"interfaces/TopicModel.html":{},"components/TopicPreferences.html":{}}}],["selectedoptions",{"_index":109,"title":{},"body":{"interfaces/AnswerModel.html":{}}}],["selectedtopics",{"_index":2059,"title":{},"body":{"components/TopicPreferences.html":{}}}],["selectedtopics.length",{"_index":2061,"title":{},"body":{"components/TopicPreferences.html":{}}}],["selectedtopics.map((topic",{"_index":2070,"title":{},"body":{"components/TopicPreferences.html":{}}}],["selecting",{"_index":2078,"title":{},"body":{"components/TopicPreferences.html":{}}}],["selection",{"_index":723,"title":{},"body":{"directives/FileTypeDirective.html":{},"components/LessonPage.html":{},"components/Practice.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{},"components/Subjects.html":{},"miscellaneous/typealiases.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["selecttopics",{"_index":1860,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["selecttopics(sessionid",{"_index":1880,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["selectview",{"_index":1722,"title":{},"body":{"components/Sidebar.html":{}}}],["selectview(id",{"_index":1729,"title":{},"body":{"components/Sidebar.html":{}}}],["send",{"_index":375,"title":{},"body":{"components/Chatbot.html":{},"components/TopicPreferences.html":{}}}],["sender",{"_index":260,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/Chatbot.html":{},"components/LessonPage.html":{}}}],["sending",{"_index":373,"title":{},"body":{"components/Chatbot.html":{}}}],["sendmessage",{"_index":278,"title":{},"body":{"components/Chatbot.html":{},"injectables/ChatbotService.html":{}}}],["sendmessage(sessionid",{"_index":385,"title":{},"body":{"injectables/ChatbotService.html":{}}}],["sent",{"_index":430,"title":{},"body":{"components/CheckEmail.html":{}}}],["serious",{"_index":1695,"title":{},"body":{"components/Pricing.html":{}}}],["serveonce",{"_index":2201,"title":{},"body":{"index.html":{}}}],["server",{"_index":2197,"title":{},"body":{"index.html":{}}}],["services/auth.service",{"_index":160,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["services/subscription.service",{"_index":1934,"title":{},"body":{"guards/SubscriptionGuard.html":{}}}],["session",{"_index":589,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/NamingUpload.html":{},"components/QuestionSettings.html":{}}}],["session_id",{"_index":1204,"title":{},"body":{"injectables/LessonService.html":{}}}],["sessionid",{"_index":383,"title":{},"body":{"injectables/ChatbotService.html":{},"injectables/LessonService.html":{},"injectables/SubjectsService.html":{}}}],["sessions",{"_index":1007,"title":{},"body":{"components/LessonPage.html":{}}}],["set",{"_index":1050,"title":{},"body":{"components/LessonPage.html":{},"components/QuestionSettings.html":{}}}],["setcurrentuser",{"_index":2089,"title":{},"body":{"injectables/UserService.html":{}}}],["setcurrentuser(user",{"_index":2094,"title":{},"body":{"injectables/UserService.html":{}}}],["setheaders",{"_index":169,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["setinterval",{"_index":419,"title":{},"body":{"components/CheckEmail.html":{}}}],["settings",{"_index":531,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{},"miscellaneous/variables.html":{}}}],["settings').then(m",{"_index":2318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings'},{'name",{"_index":71,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["settings.css",{"_index":533,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["settings.html",{"_index":532,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["settings.ts",{"_index":518,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{},"coverage.html":{}}}],["settings.ts:11",{"_index":618,"title":{},"body":{"classes/ExerciseSettings.html":{}}}],["settings.ts:12",{"_index":620,"title":{},"body":{"classes/ExerciseSettings.html":{}}}],["settings.ts:13",{"_index":619,"title":{},"body":{"classes/ExerciseSettings.html":{}}}],["settings.ts:16",{"_index":523,"title":{},"body":{"classes/ExamSettings.html":{}}}],["settings.ts:17",{"_index":526,"title":{},"body":{"classes/ExamSettings.html":{}}}],["settings.ts:18",{"_index":524,"title":{},"body":{"classes/ExamSettings.html":{}}}],["settings.ts:19",{"_index":527,"title":{},"body":{"classes/ExamSettings.html":{}}}],["settings.ts:29",{"_index":1711,"title":{},"body":{"components/QuestionSettings.html":{}}}],["settings.ts:30",{"_index":1710,"title":{},"body":{"components/QuestionSettings.html":{}}}],["settings.ts:31",{"_index":1712,"title":{},"body":{"components/QuestionSettings.html":{}}}],["settings.ts:32",{"_index":1713,"title":{},"body":{"components/QuestionSettings.html":{}}}],["settings.ts:33",{"_index":1714,"title":{},"body":{"components/QuestionSettings.html":{}}}],["settings.ts:34",{"_index":1705,"title":{},"body":{"components/QuestionSettings.html":{}}}],["settings.ts:43",{"_index":1709,"title":{},"body":{"components/QuestionSettings.html":{}}}],["settings.ts:51",{"_index":1707,"title":{},"body":{"components/QuestionSettings.html":{}}}],["settings.ts:59",{"_index":1706,"title":{},"body":{"components/QuestionSettings.html":{}}}],["settings/question",{"_index":517,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shadow",{"_index":1996,"title":{},"body":{"components/Toast.html":{}}}],["shape",{"_index":815,"title":{},"body":{"components/Landing.html":{},"components/LessonPage.html":{}}}],["shared/components/header/header",{"_index":129,"title":{},"body":{"components/App.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/QuestionSettings.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["shared/components/toast/toast",{"_index":128,"title":{},"body":{"components/App.html":{}}}],["shared/directives/password",{"_index":1763,"title":{},"body":{"components/Signup.html":{}}}],["shared/pipes/markdown",{"_index":342,"title":{},"body":{"components/Chatbot.html":{},"components/Practice.html":{},"components/Subtopic.html":{}}}],["show",{"_index":1462,"title":{},"body":{"components/NotFound.html":{},"injectables/NotificationService.html":{}}}],["show(type",{"_index":1489,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showaccount",{"_index":727,"title":{},"body":{"components/Header.html":{}}}],["showerror",{"_index":1486,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showerror(msg",{"_index":1495,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showlogout",{"_index":728,"title":{},"body":{"components/Header.html":{}}}],["showsuccess",{"_index":1487,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showsuccess(msg",{"_index":1498,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sidebar",{"_index":72,"title":{"components/Sidebar.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["sidebar'},{'name",{"_index":73,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["sidebar.css",{"_index":1720,"title":{},"body":{"components/Sidebar.html":{}}}],["sidebar.html",{"_index":1719,"title":{},"body":{"components/Sidebar.html":{}}}],["sidebar/sidebar",{"_index":866,"title":{},"body":{"components/LessonPage.html":{}}}],["sideways",{"_index":1452,"title":{},"body":{"components/NotFound.html":{}}}],["sign",{"_index":1252,"title":{},"body":{"components/Login.html":{}}}],["signal",{"_index":126,"title":{},"body":{"components/App.html":{},"components/Header.html":{},"components/LessonPage.html":{},"injectables/NotificationService.html":{},"components/Subscription.html":{}}}],["signal('maestro_frontend",{"_index":123,"title":{},"body":{"components/App.html":{}}}],["signal(false",{"_index":738,"title":{},"body":{"components/Header.html":{}}}],["signal(localstorage.getitem(\"useremail",{"_index":737,"title":{},"body":{"components/Header.html":{}}}],["signal(null",{"_index":1502,"title":{},"body":{"injectables/NotificationService.html":{},"components/Subscription.html":{}}}],["significance",{"_index":985,"title":{},"body":{"components/LessonPage.html":{}}}],["significantly",{"_index":970,"title":{},"body":{"components/LessonPage.html":{}}}],["signing",{"_index":1797,"title":{},"body":{"components/Signup.html":{}}}],["signup",{"_index":74,"title":{"components/Signup.html":{}},"body":{"components/About.html":{},"components/App.html":{},"injectables/AuthService.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["signup'},{'name",{"_index":75,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["signup(data",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup.html",{"_index":1742,"title":{},"body":{"components/Signup.html":{}}}],["signuppayload",{"_index":1259,"title":{"interfaces/SignupPayload.html":{}},"body":{"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"interfaces/SignupPayload.html":{},"interfaces/VerifyEmailResponse.html":{},"coverage.html":{}}}],["simple",{"_index":1667,"title":{},"body":{"components/Pricing.html":{}}}],["simplechanges",{"_index":1581,"title":{},"body":{"components/Practice.html":{}}}],["simplified",{"_index":1787,"title":{},"body":{"components/Signup.html":{}}}],["size",{"_index":690,"title":{},"body":{"directives/FileTypeDirective.html":{},"components/NamingUpload.html":{}}}],["size.tofixed(3",{"_index":1354,"title":{},"body":{"components/NamingUpload.html":{}}}],["sj2nd",{"_index":1814,"title":{},"body":{"components/Subjects.html":{}}}],["skip",{"_index":1382,"title":{},"body":{"components/NamingUpload.html":{}}}],["skipped",{"_index":1400,"title":{},"body":{"components/NamingUpload.html":{}}}],["smarter",{"_index":625,"title":{},"body":{"components/Features.html":{}}}],["source",{"_index":3,"title":{},"body":{"components/About.html":{},"interfaces/AnswerModel.html":{},"components/App.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/ChatMessage.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"interfaces/ExamModel.html":{},"classes/ExamSettings.html":{},"interfaces/ExerciseModel.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"directives/PasswordValidator.html":{},"interfaces/Plan.html":{},"components/Practice.html":{},"components/Pricing.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"interfaces/SignupPayload.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"interfaces/SubscriptionStatus.html":{},"components/Subtopic.html":{},"interfaces/SubtopicModel.html":{},"components/Toast.html":{},"interfaces/TopicModel.html":{},"components/TopicPreferences.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"components/VerifyEmail.html":{},"interfaces/VerifyEmailResponse.html":{},"index.html":{}}}],["space",{"_index":1993,"title":{},"body":{"components/Toast.html":{}}}],["specific",{"_index":2079,"title":{},"body":{"components/TopicPreferences.html":{}}}],["speed",{"_index":2229,"title":{},"body":{"index.html":{}}}],["src/.../app.config.ts",{"_index":2264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.ts",{"_index":2268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../chat",{"_index":2258,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../environment.prod.ts",{"_index":2265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../file",{"_index":2186,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../http",{"_index":2267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../notification.service.ts",{"_index":2259,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../question.model.ts",{"_index":2260,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../subject.model.ts",{"_index":2261,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../topic",{"_index":2262,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/app.config.ts",{"_index":2132,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.ts",{"_index":2136,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.ts",{"_index":113,"title":{},"body":{"components/App.html":{},"coverage.html":{}}}],["src/app/app.ts:13",{"_index":125,"title":{},"body":{"components/App.html":{}}}],["src/app/core/guards/subscription.guard.ts",{"_index":1930,"title":{},"body":{"guards/SubscriptionGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/subscription.guard.ts:10",{"_index":1932,"title":{},"body":{"guards/SubscriptionGuard.html":{}}}],["src/app/core/guards/subscription.guard.ts:16",{"_index":1933,"title":{},"body":{"guards/SubscriptionGuard.html":{}}}],["src/app/core/interceptors/auth.interceptor.ts",{"_index":133,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["src/app/core/interceptors/auth.interceptor.ts:14",{"_index":140,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/core/interceptors/auth.interceptor.ts:17",{"_index":148,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/core/interceptors/http",{"_index":2140,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/models/answer.model.ts",{"_index":101,"title":{},"body":{"interfaces/AnswerModel.html":{},"coverage.html":{}}}],["src/app/core/models/auth",{"_index":1256,"title":{},"body":{"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"interfaces/SignupPayload.html":{},"interfaces/VerifyEmailResponse.html":{},"coverage.html":{}}}],["src/app/core/models/chat",{"_index":257,"title":{},"body":{"interfaces/ChatMessage.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/models/exam.model.ts",{"_index":508,"title":{},"body":{"interfaces/ExamModel.html":{},"coverage.html":{}}}],["src/app/core/models/exercise.model.ts",{"_index":598,"title":{},"body":{"interfaces/ExerciseModel.html":{},"coverage.html":{}}}],["src/app/core/models/question.model.ts",{"_index":1698,"title":{},"body":{"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"interfaces/SaveQuestionData.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/models/subject.model.ts",{"_index":2149,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/models/subscription.model.ts",{"_index":1543,"title":{},"body":{"interfaces/Plan.html":{},"interfaces/SubscriptionStatus.html":{},"coverage.html":{}}}],["src/app/core/models/subtopic.model.ts",{"_index":1976,"title":{},"body":{"interfaces/SubtopicModel.html":{},"coverage.html":{}}}],["src/app/core/models/topic.model.ts",{"_index":2014,"title":{},"body":{"interfaces/TopicModel.html":{},"coverage.html":{}}}],["src/app/core/models/user.model.ts",{"_index":2083,"title":{},"body":{"interfaces/UserModel.html":{},"coverage.html":{}}}],["src/app/core/services/auth.service.ts",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/services/auth.service.ts:11",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:14",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:16",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:20",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:24",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:28",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:32",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:36",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:48",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:52",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/chatbot.service.ts",{"_index":379,"title":{},"body":{"injectables/ChatbotService.html":{},"coverage.html":{}}}],["src/app/core/services/chatbot.service.ts:10",{"_index":386,"title":{},"body":{"injectables/ChatbotService.html":{}}}],["src/app/core/services/chatbot.service.ts:14",{"_index":382,"title":{},"body":{"injectables/ChatbotService.html":{}}}],["src/app/core/services/chatbot.service.ts:8",{"_index":387,"title":{},"body":{"injectables/ChatbotService.html":{}}}],["src/app/core/services/exercise.service.ts",{"_index":600,"title":{},"body":{"injectables/ExerciseService.html":{},"coverage.html":{}}}],["src/app/core/services/exercise.service.ts:13",{"_index":608,"title":{},"body":{"injectables/ExerciseService.html":{}}}],["src/app/core/services/exercise.service.ts:17",{"_index":611,"title":{},"body":{"injectables/ExerciseService.html":{}}}],["src/app/core/services/exercise.service.ts:9",{"_index":606,"title":{},"body":{"injectables/ExerciseService.html":{}}}],["src/app/core/services/http",{"_index":764,"title":{},"body":{"injectables/HttpBaseService.html":{},"coverage.html":{}}}],["src/app/core/services/lesson.service.ts",{"_index":1167,"title":{},"body":{"injectables/LessonService.html":{},"coverage.html":{}}}],["src/app/core/services/lesson.service.ts:10",{"_index":1198,"title":{},"body":{"injectables/LessonService.html":{}}}],["src/app/core/services/lesson.service.ts:12",{"_index":1180,"title":{},"body":{"injectables/LessonService.html":{}}}],["src/app/core/services/lesson.service.ts:16",{"_index":1177,"title":{},"body":{"injectables/LessonService.html":{}}}],["src/app/core/services/lesson.service.ts:20",{"_index":1184,"title":{},"body":{"injectables/LessonService.html":{}}}],["src/app/core/services/lesson.service.ts:24",{"_index":1182,"title":{},"body":{"injectables/LessonService.html":{}}}],["src/app/core/services/lesson.service.ts:28",{"_index":1197,"title":{},"body":{"injectables/LessonService.html":{}}}],["src/app/core/services/lesson.service.ts:32",{"_index":1187,"title":{},"body":{"injectables/LessonService.html":{}}}],["src/app/core/services/lesson.service.ts:36",{"_index":1195,"title":{},"body":{"injectables/LessonService.html":{}}}],["src/app/core/services/lesson.service.ts:40",{"_index":1192,"title":{},"body":{"injectables/LessonService.html":{}}}],["src/app/core/services/notification.service.ts",{"_index":1484,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/services/notification.service.ts:11",{"_index":1493,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification.service.ts:18",{"_index":1496,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification.service.ts:19",{"_index":1499,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification.service.ts:20",{"_index":1488,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification.service.ts:7",{"_index":1503,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification.service.ts:8",{"_index":1504,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification.service.ts:9",{"_index":1501,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/subjects.service.ts",{"_index":1851,"title":{},"body":{"injectables/SubjectsService.html":{},"coverage.html":{}}}],["src/app/core/services/subjects.service.ts:11",{"_index":1871,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["src/app/core/services/subjects.service.ts:15",{"_index":1863,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["src/app/core/services/subjects.service.ts:19",{"_index":1879,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["src/app/core/services/subjects.service.ts:23",{"_index":1873,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["src/app/core/services/subjects.service.ts:27",{"_index":1875,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["src/app/core/services/subjects.service.ts:33",{"_index":1877,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["src/app/core/services/subjects.service.ts:37",{"_index":1882,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["src/app/core/services/subjects.service.ts:41",{"_index":1870,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["src/app/core/services/subjects.service.ts:45",{"_index":1868,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["src/app/core/services/subjects.service.ts:49",{"_index":1866,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["src/app/core/services/subjects.service.ts:53",{"_index":1886,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["src/app/core/services/subjects.service.ts:57",{"_index":1884,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["src/app/core/services/subjects.service.ts:9",{"_index":1887,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["src/app/core/services/subscription.service.ts",{"_index":1939,"title":{},"body":{"injectables/SubscriptionService.html":{},"coverage.html":{}}}],["src/app/core/services/subscription.service.ts:13",{"_index":1945,"title":{},"body":{"injectables/SubscriptionService.html":{}}}],["src/app/core/services/subscription.service.ts:17",{"_index":1948,"title":{},"body":{"injectables/SubscriptionService.html":{}}}],["src/app/core/services/subscription.service.ts:21",{"_index":1946,"title":{},"body":{"injectables/SubscriptionService.html":{}}}],["src/app/core/services/subscription.service.ts:25",{"_index":1944,"title":{},"body":{"injectables/SubscriptionService.html":{}}}],["src/app/core/services/subscription.service.ts:9",{"_index":1943,"title":{},"body":{"injectables/SubscriptionService.html":{}}}],["src/app/core/services/user.service.ts",{"_index":2085,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/services/user.service.ts:13",{"_index":2092,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:17",{"_index":2098,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:21",{"_index":2095,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:25",{"_index":2093,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:8",{"_index":2100,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:9",{"_index":2091,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/pages/auth/check",{"_index":391,"title":{},"body":{"components/CheckEmail.html":{},"coverage.html":{}}}],["src/app/pages/auth/login/login.ts",{"_index":1212,"title":{},"body":{"components/Login.html":{},"coverage.html":{}}}],["src/app/pages/auth/login/login.ts:13",{"_index":1222,"title":{},"body":{"components/Login.html":{}}}],["src/app/pages/auth/login/login.ts:14",{"_index":1228,"title":{},"body":{"components/Login.html":{}}}],["src/app/pages/auth/login/login.ts:15",{"_index":1230,"title":{},"body":{"components/Login.html":{}}}],["src/app/pages/auth/login/login.ts:16",{"_index":1226,"title":{},"body":{"components/Login.html":{}}}],["src/app/pages/auth/login/login.ts:17",{"_index":1221,"title":{},"body":{"components/Login.html":{}}}],["src/app/pages/auth/login/login.ts:18",{"_index":1227,"title":{},"body":{"components/Login.html":{}}}],["src/app/pages/auth/login/login.ts:20",{"_index":1225,"title":{},"body":{"components/Login.html":{}}}],["src/app/pages/auth/login/login.ts:21",{"_index":1218,"title":{},"body":{"components/Login.html":{}}}],["src/app/pages/auth/login/login.ts:28",{"_index":1220,"title":{},"body":{"components/Login.html":{}}}],["src/app/pages/auth/login/login.ts:36",{"_index":1219,"title":{},"body":{"components/Login.html":{}}}],["src/app/pages/auth/signup/signup.ts",{"_index":1741,"title":{},"body":{"components/Signup.html":{},"coverage.html":{}}}],["src/app/pages/auth/signup/signup.ts:14",{"_index":1753,"title":{},"body":{"components/Signup.html":{}}}],["src/app/pages/auth/signup/signup.ts:15",{"_index":1756,"title":{},"body":{"components/Signup.html":{}}}],["src/app/pages/auth/signup/signup.ts:16",{"_index":1751,"title":{},"body":{"components/Signup.html":{}}}],["src/app/pages/auth/signup/signup.ts:17",{"_index":1761,"title":{},"body":{"components/Signup.html":{}}}],["src/app/pages/auth/signup/signup.ts:18",{"_index":1762,"title":{},"body":{"components/Signup.html":{}}}],["src/app/pages/auth/signup/signup.ts:19",{"_index":1759,"title":{},"body":{"components/Signup.html":{}}}],["src/app/pages/auth/signup/signup.ts:20",{"_index":1750,"title":{},"body":{"components/Signup.html":{}}}],["src/app/pages/auth/signup/signup.ts:21",{"_index":1760,"title":{},"body":{"components/Signup.html":{}}}],["src/app/pages/auth/signup/signup.ts:23",{"_index":1755,"title":{},"body":{"components/Signup.html":{}}}],["src/app/pages/auth/signup/signup.ts:24",{"_index":1758,"title":{},"body":{"components/Signup.html":{}}}],["src/app/pages/auth/signup/signup.ts:25",{"_index":1752,"title":{},"body":{"components/Signup.html":{}}}],["src/app/pages/auth/signup/signup.ts:26",{"_index":1747,"title":{},"body":{"components/Signup.html":{}}}],["src/app/pages/auth/signup/signup.ts:33",{"_index":1749,"title":{},"body":{"components/Signup.html":{}}}],["src/app/pages/auth/signup/signup.ts:41",{"_index":1748,"title":{},"body":{"components/Signup.html":{}}}],["src/app/pages/auth/verify",{"_index":2107,"title":{},"body":{"components/VerifyEmail.html":{},"coverage.html":{}}}],["src/app/pages/dashboard/subjects/subjects.ts",{"_index":1800,"title":{},"body":{"components/Subjects.html":{},"coverage.html":{}}}],["src/app/pages/dashboard/subjects/subjects.ts:15",{"_index":1826,"title":{},"body":{"components/Subjects.html":{}}}],["src/app/pages/dashboard/subjects/subjects.ts:45",{"_index":1813,"title":{},"body":{"components/Subjects.html":{}}}],["src/app/pages/dashboard/subjects/subjects.ts:46",{"_index":1827,"title":{},"body":{"components/Subjects.html":{}}}],["src/app/pages/dashboard/subjects/subjects.ts:47",{"_index":1807,"title":{},"body":{"components/Subjects.html":{}}}],["src/app/pages/dashboard/subjects/subjects.ts:51",{"_index":1812,"title":{},"body":{"components/Subjects.html":{}}}],["src/app/pages/dashboard/subjects/subjects.ts:67",{"_index":1808,"title":{},"body":{"components/Subjects.html":{}}}],["src/app/pages/dashboard/subjects/subjects.ts:80",{"_index":1811,"title":{},"body":{"components/Subjects.html":{}}}],["src/app/pages/dashboard/subscription/subscription.ts",{"_index":1905,"title":{},"body":{"components/Subscription.html":{},"coverage.html":{}}}],["src/app/pages/dashboard/subscription/subscription.ts:13",{"_index":1917,"title":{},"body":{"components/Subscription.html":{}}}],["src/app/pages/dashboard/subscription/subscription.ts:14",{"_index":1910,"title":{},"body":{"components/Subscription.html":{}}}],["src/app/pages/dashboard/subscription/subscription.ts:18",{"_index":1912,"title":{},"body":{"components/Subscription.html":{}}}],["src/app/pages/dashboard/subscription/subscription.ts:23",{"_index":1915,"title":{},"body":{"components/Subscription.html":{}}}],["src/app/pages/dashboard/subscription/subscription.ts:27",{"_index":1913,"title":{},"body":{"components/Subscription.html":{}}}],["src/app/pages/dashboard/subscription/subscription.ts:31",{"_index":1916,"title":{},"body":{"components/Subscription.html":{}}}],["src/app/pages/home/about",{"_index":8,"title":{},"body":{"components/About.html":{},"coverage.html":{}}}],["src/app/pages/home/contact/contact.ts",{"_index":447,"title":{},"body":{"components/Contact.html":{},"coverage.html":{}}}],["src/app/pages/home/contact/contact.ts:10",{"_index":454,"title":{},"body":{"components/Contact.html":{}}}],["src/app/pages/home/contact/contact.ts:12",{"_index":456,"title":{},"body":{"components/Contact.html":{}}}],["src/app/pages/home/contact/contact.ts:16",{"_index":455,"title":{},"body":{"components/Contact.html":{}}}],["src/app/pages/home/contact/contact.ts:20",{"_index":457,"title":{},"body":{"components/Contact.html":{}}}],["src/app/pages/home/features/features.ts",{"_index":621,"title":{},"body":{"components/Features.html":{},"coverage.html":{}}}],["src/app/pages/home/home/home.ts",{"_index":746,"title":{},"body":{"components/Home.html":{},"coverage.html":{}}}],["src/app/pages/home/home/home.ts:15",{"_index":752,"title":{},"body":{"components/Home.html":{}}}],["src/app/pages/home/home/home.ts:21",{"_index":753,"title":{},"body":{"components/Home.html":{}}}],["src/app/pages/home/home/home.ts:25",{"_index":756,"title":{},"body":{"components/Home.html":{}}}],["src/app/pages/home/landing/landing.ts",{"_index":793,"title":{},"body":{"components/Landing.html":{},"coverage.html":{}}}],["src/app/pages/home/landing/landing.ts:12",{"_index":798,"title":{},"body":{"components/Landing.html":{}}}],["src/app/pages/home/landing/landing.ts:16",{"_index":802,"title":{},"body":{"components/Landing.html":{}}}],["src/app/pages/home/landing/landing.ts:20",{"_index":800,"title":{},"body":{"components/Landing.html":{}}}],["src/app/pages/home/landing/landing.ts:24",{"_index":803,"title":{},"body":{"components/Landing.html":{}}}],["src/app/pages/home/landing/landing.ts:28",{"_index":799,"title":{},"body":{"components/Landing.html":{}}}],["src/app/pages/home/landing/landing.ts:32",{"_index":801,"title":{},"body":{"components/Landing.html":{}}}],["src/app/pages/home/pricing/pricing.ts",{"_index":1664,"title":{},"body":{"components/Pricing.html":{},"coverage.html":{}}}],["src/app/pages/lesson/chatbot/chatbot.ts",{"_index":262,"title":{},"body":{"components/Chatbot.html":{},"coverage.html":{}}}],["src/app/pages/lesson/chatbot/chatbot.ts:17",{"_index":288,"title":{},"body":{"components/Chatbot.html":{}}}],["src/app/pages/lesson/chatbot/chatbot.ts:18",{"_index":291,"title":{},"body":{"components/Chatbot.html":{}}}],["src/app/pages/lesson/chatbot/chatbot.ts:19",{"_index":290,"title":{},"body":{"components/Chatbot.html":{}}}],["src/app/pages/lesson/chatbot/chatbot.ts:20",{"_index":292,"title":{},"body":{"components/Chatbot.html":{}}}],["src/app/pages/lesson/chatbot/chatbot.ts:21",{"_index":324,"title":{},"body":{"components/Chatbot.html":{}}}],["src/app/pages/lesson/chatbot/chatbot.ts:22",{"_index":328,"title":{},"body":{"components/Chatbot.html":{}}}],["src/app/pages/lesson/chatbot/chatbot.ts:23",{"_index":320,"title":{},"body":{"components/Chatbot.html":{}}}],["src/app/pages/lesson/chatbot/chatbot.ts:24",{"_index":330,"title":{},"body":{"components/Chatbot.html":{}}}],["src/app/pages/lesson/chatbot/chatbot.ts:25",{"_index":286,"title":{},"body":{"components/Chatbot.html":{}}}],["src/app/pages/lesson/chatbot/chatbot.ts:29",{"_index":294,"title":{},"body":{"components/Chatbot.html":{}}}],["src/app/pages/lesson/chatbot/chatbot.ts:33",{"_index":326,"title":{},"body":{"components/Chatbot.html":{}}}],["src/app/pages/lesson/chatbot/chatbot.ts:34",{"_index":331,"title":{},"body":{"components/Chatbot.html":{}}}],["src/app/pages/lesson/chatbot/chatbot.ts:37",{"_index":318,"title":{},"body":{"components/Chatbot.html":{}}}],["src/app/pages/lesson/chatbot/chatbot.ts:49",{"_index":293,"title":{},"body":{"components/Chatbot.html":{}}}],["src/app/pages/lesson/chatbot/chatbot.ts:55",{"_index":295,"title":{},"body":{"components/Chatbot.html":{}}}],["src/app/pages/lesson/chatbot/chatbot.ts:61",{"_index":296,"title":{},"body":{"components/Chatbot.html":{}}}],["src/app/pages/lesson/lesson",{"_index":817,"title":{},"body":{"components/LessonPage.html":{},"coverage.html":{}}}],["src/app/pages/lesson/practice/practice.ts",{"_index":1551,"title":{},"body":{"components/Practice.html":{},"coverage.html":{}}}],["src/app/pages/lesson/practice/practice.ts:16",{"_index":1563,"title":{},"body":{"components/Practice.html":{}}}],["src/app/pages/lesson/practice/practice.ts:17",{"_index":1564,"title":{},"body":{"components/Practice.html":{}}}],["src/app/pages/lesson/practice/practice.ts:18",{"_index":1565,"title":{},"body":{"components/Practice.html":{}}}],["src/app/pages/lesson/practice/practice.ts:19",{"_index":1567,"title":{},"body":{"components/Practice.html":{}}}],["src/app/pages/lesson/practice/practice.ts:20",{"_index":1568,"title":{},"body":{"components/Practice.html":{}}}],["src/app/pages/lesson/practice/practice.ts:21",{"_index":1566,"title":{},"body":{"components/Practice.html":{}}}],["src/app/pages/lesson/practice/practice.ts:22",{"_index":1579,"title":{},"body":{"components/Practice.html":{}}}],["src/app/pages/lesson/practice/practice.ts:23",{"_index":1577,"title":{},"body":{"components/Practice.html":{}}}],["src/app/pages/lesson/practice/practice.ts:24",{"_index":1578,"title":{},"body":{"components/Practice.html":{}}}],["src/app/pages/lesson/practice/practice.ts:25",{"_index":1562,"title":{},"body":{"components/Practice.html":{}}}],["src/app/pages/lesson/practice/practice.ts:30",{"_index":1580,"title":{},"body":{"components/Practice.html":{}}}],["src/app/pages/lesson/practice/practice.ts:39",{"_index":1570,"title":{},"body":{"components/Practice.html":{}}}],["src/app/pages/lesson/practice/practice.ts:45",{"_index":1572,"title":{},"body":{"components/Practice.html":{}}}],["src/app/pages/lesson/practice/practice.ts:57",{"_index":1573,"title":{},"body":{"components/Practice.html":{}}}],["src/app/pages/lesson/practice/practice.ts:61",{"_index":1576,"title":{},"body":{"components/Practice.html":{}}}],["src/app/pages/lesson/practice/practice.ts:75",{"_index":1574,"title":{},"body":{"components/Practice.html":{}}}],["src/app/pages/lesson/sidebar/sidebar.ts",{"_index":1718,"title":{},"body":{"components/Sidebar.html":{},"coverage.html":{}}}],["src/app/pages/lesson/sidebar/sidebar.ts:11",{"_index":1725,"title":{},"body":{"components/Sidebar.html":{}}}],["src/app/pages/lesson/sidebar/sidebar.ts:12",{"_index":1726,"title":{},"body":{"components/Sidebar.html":{}}}],["src/app/pages/lesson/sidebar/sidebar.ts:13",{"_index":1727,"title":{},"body":{"components/Sidebar.html":{}}}],["src/app/pages/lesson/sidebar/sidebar.ts:15",{"_index":1728,"title":{},"body":{"components/Sidebar.html":{}}}],["src/app/pages/lesson/sidebar/sidebar.ts:19",{"_index":1732,"title":{},"body":{"components/Sidebar.html":{}}}],["src/app/pages/lesson/sidebar/sidebar.ts:26",{"_index":1730,"title":{},"body":{"components/Sidebar.html":{}}}],["src/app/pages/lesson/subtopic/subtopic.ts",{"_index":1956,"title":{},"body":{"components/Subtopic.html":{},"coverage.html":{}}}],["src/app/pages/lesson/subtopic/subtopic.ts:12",{"_index":1963,"title":{},"body":{"components/Subtopic.html":{}}}],["src/app/pages/lesson/subtopic/subtopic.ts:13",{"_index":1964,"title":{},"body":{"components/Subtopic.html":{}}}],["src/app/pages/lesson/subtopic/subtopic.ts:14",{"_index":1965,"title":{},"body":{"components/Subtopic.html":{}}}],["src/app/pages/lesson/subtopic/subtopic.ts:16",{"_index":1967,"title":{},"body":{"components/Subtopic.html":{}}}],["src/app/pages/lesson/subtopic/subtopic.ts:20",{"_index":1966,"title":{},"body":{"components/Subtopic.html":{}}}],["src/app/pages/not",{"_index":1437,"title":{},"body":{"components/NotFound.html":{},"coverage.html":{}}}],["src/app/pages/subject",{"_index":472,"title":{},"body":{"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/NamingUpload.html":{},"components/QuestionSettings.html":{},"components/TopicPreferences.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/components/confirm",{"_index":433,"title":{},"body":{"components/ConfirmLogout.html":{},"coverage.html":{}}}],["src/app/shared/components/header/header.ts",{"_index":724,"title":{},"body":{"components/Header.html":{},"coverage.html":{}}}],["src/app/shared/components/header/header.ts:14",{"_index":740,"title":{},"body":{"components/Header.html":{}}}],["src/app/shared/components/header/header.ts:15",{"_index":739,"title":{},"body":{"components/Header.html":{}}}],["src/app/shared/components/header/header.ts:16",{"_index":732,"title":{},"body":{"components/Header.html":{}}}],["src/app/shared/components/header/header.ts:20",{"_index":735,"title":{},"body":{"components/Header.html":{}}}],["src/app/shared/components/header/header.ts:21",{"_index":733,"title":{},"body":{"components/Header.html":{}}}],["src/app/shared/components/header/header.ts:22",{"_index":734,"title":{},"body":{"components/Header.html":{}}}],["src/app/shared/components/header/header.ts:28",{"_index":736,"title":{},"body":{"components/Header.html":{}}}],["src/app/shared/components/toast/toast.ts",{"_index":1978,"title":{},"body":{"components/Toast.html":{},"coverage.html":{}}}],["src/app/shared/components/toast/toast.ts:13",{"_index":2004,"title":{},"body":{"components/Toast.html":{}}}],["src/app/shared/components/toast/toast.ts:14",{"_index":2006,"title":{},"body":{"components/Toast.html":{}}}],["src/app/shared/components/toast/toast.ts:15",{"_index":2003,"title":{},"body":{"components/Toast.html":{}}}],["src/app/shared/components/toast/toast.ts:22",{"_index":1983,"title":{},"body":{"components/Toast.html":{}}}],["src/app/shared/components/toast/toast.ts:24",{"_index":2005,"title":{},"body":{"components/Toast.html":{}}}],["src/app/shared/components/toast/toast.ts:28",{"_index":1984,"title":{},"body":{"components/Toast.html":{}}}],["src/app/shared/directives/file",{"_index":672,"title":{},"body":{"directives/FileTypeDirective.html":{},"coverage.html":{}}}],["src/app/shared/directives/password",{"_index":1516,"title":{},"body":{"directives/PasswordValidator.html":{},"coverage.html":{}}}],["src/app/shared/pipes/markdown",{"_index":1264,"title":{},"body":{"pipes/MarkdownPipe.html":{},"coverage.html":{}}}],["src/app/shared/utils/file",{"_index":2163,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/environments/environment.prod.ts",{"_index":2166,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2167,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["st.isactive",{"_index":1937,"title":{},"body":{"guards/SubscriptionGuard.html":{}}}],["st.read",{"_index":1053,"title":{},"body":{"components/LessonPage.html":{}}}],["st.read).length",{"_index":1099,"title":{},"body":{"components/LessonPage.html":{}}}],["staging.onrender.com/api",{"_index":2278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["standalone",{"_index":478,"title":{},"body":{"components/CreationStepTab.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"pipes/MarkdownPipe.html":{},"components/Subscription.html":{},"components/Toast.html":{}}}],["standard",{"_index":1685,"title":{},"body":{"components/Pricing.html":{}}}],["start",{"_index":1427,"title":{},"body":{"components/NamingUpload.html":{},"components/Pricing.html":{},"components/Subjects.html":{},"index.html":{}}}],["started",{"_index":813,"title":{},"body":{"components/Landing.html":{},"components/Pricing.html":{},"components/Subjects.html":{}}}],["startedat",{"_index":1548,"title":{},"body":{"interfaces/Plan.html":{},"interfaces/SubscriptionStatus.html":{}}}],["startresendtimer",{"_index":397,"title":{},"body":{"components/CheckEmail.html":{}}}],["state",{"_index":1781,"title":{},"body":{"components/Signup.html":{}}}],["statements",{"_index":2131,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":575,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/NamingUpload.html":{},"components/QuestionSettings.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{}}}],["step",{"_index":45,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["stepper",{"_index":2308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["still",{"_index":1059,"title":{},"body":{"components/LessonPage.html":{}}}],["store",{"_index":1691,"title":{},"body":{"components/Pricing.html":{},"index.html":{}}}],["stored",{"_index":182,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["storetokens",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["storetokens(res",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["str",{"_index":838,"title":{},"body":{"components/LessonPage.html":{}}}],["str.charat(0).touppercase",{"_index":1153,"title":{},"body":{"components/LessonPage.html":{}}}],["str.slice(1).tolowercase",{"_index":1154,"title":{},"body":{"components/LessonPage.html":{}}}],["string",{"_index":110,"title":{},"body":{"interfaces/AnswerModel.html":{},"injectables/AuthService.html":{},"interfaces/ChatMessage.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/CheckEmail.html":{},"components/CreationStepTab.html":{},"interfaces/ExamModel.html":{},"classes/ExamSettings.html":{},"interfaces/ExerciseModel.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"directives/FileTypeDirective.html":{},"injectables/HttpBaseService.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"injectables/NotificationService.html":{},"interfaces/Plan.html":{},"components/Practice.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"interfaces/SignupPayload.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"injectables/SubscriptionService.html":{},"interfaces/SubscriptionStatus.html":{},"interfaces/SubtopicModel.html":{},"interfaces/TopicModel.html":{},"components/TopicPreferences.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"interfaces/VerifyEmailResponse.html":{}}}],["studies",{"_index":951,"title":{},"body":{"components/LessonPage.html":{}}}],["study",{"_index":811,"title":{},"body":{"components/Landing.html":{},"components/LessonPage.html":{},"components/Pricing.html":{},"components/Subjects.html":{}}}],["studying",{"_index":937,"title":{},"body":{"components/LessonPage.html":{}}}],["style",{"_index":639,"title":{},"body":{"components/Features.html":{},"components/TopicPreferences.html":{}}}],["styleurl",{"_index":15,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Subjects.html":{},"components/Subtopic.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["subject",{"_index":1012,"title":{},"body":{"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/Subjects.html":{},"miscellaneous/variables.html":{}}}],["subject.completion*100).tofixed(0",{"_index":1850,"title":{},"body":{"components/Subjects.html":{}}}],["subject.id",{"_index":1849,"title":{},"body":{"components/Subjects.html":{}}}],["subject.name",{"_index":1017,"title":{},"body":{"components/LessonPage.html":{},"components/Subjects.html":{}}}],["subject.status",{"_index":1840,"title":{},"body":{"components/Subjects.html":{}}}],["subject_name",{"_index":873,"title":{},"body":{"components/LessonPage.html":{}}}],["subjectcontent",{"_index":825,"title":{},"body":{"components/LessonPage.html":{}}}],["subjectcontent.subject_name",{"_index":1158,"title":{},"body":{"components/LessonPage.html":{}}}],["subjectid",{"_index":281,"title":{},"body":{"components/Chatbot.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/TopicPreferences.html":{}}}],["subjectmodel",{"_index":1810,"title":{},"body":{"components/Subjects.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["subjectname",{"_index":1292,"title":{},"body":{"components/NamingUpload.html":{}}}],["subjects",{"_index":76,"title":{"components/Subjects.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["subjects'},{'name",{"_index":77,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["subjects.css",{"_index":1802,"title":{},"body":{"components/Subjects.html":{}}}],["subjects.find(s",{"_index":1009,"title":{},"body":{"components/LessonPage.html":{}}}],["subjects.html",{"_index":1801,"title":{},"body":{"components/Subjects.html":{}}}],["subjects.length",{"_index":1845,"title":{},"body":{"components/Subjects.html":{}}}],["subjectservice",{"_index":535,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/QuestionSettings.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["subjectsservice",{"_index":528,"title":{"injectables/SubjectsService.html":{}},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/QuestionSettings.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/TopicPreferences.html":{},"coverage.html":{}}}],["submit",{"_index":1602,"title":{},"body":{"components/Practice.html":{}}}],["submitanswers",{"_index":603,"title":{},"body":{"injectables/ExerciseService.html":{},"components/Practice.html":{}}}],["submitanswers(id",{"_index":609,"title":{},"body":{"injectables/ExerciseService.html":{}}}],["subscribe",{"_index":1046,"title":{},"body":{"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/Signup.html":{},"injectables/SubscriptionService.html":{}}}],["subscribe(planid",{"_index":1947,"title":{},"body":{"injectables/SubscriptionService.html":{}}}],["subscription",{"_index":78,"title":{"components/Subscription.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["subscription'},{'name",{"_index":79,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["subscriptionguard",{"_index":1928,"title":{"guards/SubscriptionGuard.html":{}},"body":{"guards/SubscriptionGuard.html":{},"coverage.html":{}}}],["subscriptionservice",{"_index":1909,"title":{"injectables/SubscriptionService.html":{}},"body":{"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"coverage.html":{}}}],["subscriptionstatus",{"_index":1547,"title":{"interfaces/SubscriptionStatus.html":{}},"body":{"interfaces/Plan.html":{},"components/Subscription.html":{},"injectables/SubscriptionService.html":{},"interfaces/SubscriptionStatus.html":{},"coverage.html":{}}}],["subsvc",{"_index":1911,"title":{},"body":{"components/Subscription.html":{},"guards/SubscriptionGuard.html":{}}}],["subtopic",{"_index":80,"title":{"components/Subtopic.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["subtopic'},{'name",{"_index":81,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["subtopic.css",{"_index":1958,"title":{},"body":{"components/Subtopic.html":{}}}],["subtopic.html",{"_index":1957,"title":{},"body":{"components/Subtopic.html":{}}}],["subtopic.id",{"_index":1073,"title":{},"body":{"components/LessonPage.html":{},"components/Sidebar.html":{}}}],["subtopic.title",{"_index":1739,"title":{},"body":{"components/Sidebar.html":{}}}],["subtopic/subtopic",{"_index":868,"title":{},"body":{"components/LessonPage.html":{}}}],["subtopic_id",{"_index":1206,"title":{},"body":{"injectables/LessonService.html":{}}}],["subtopicid",{"_index":1186,"title":{},"body":{"injectables/LessonService.html":{}}}],["subtopicmodel",{"_index":1975,"title":{"interfaces/SubtopicModel.html":{}},"body":{"interfaces/SubtopicModel.html":{},"coverage.html":{}}}],["subtopics",{"_index":879,"title":{},"body":{"components/LessonPage.html":{}}}],["subtopics.findindex((s",{"_index":1132,"title":{},"body":{"components/LessonPage.html":{}}}],["subtopics.length",{"_index":1134,"title":{},"body":{"components/LessonPage.html":{}}}],["subtopics[newindex].id",{"_index":1136,"title":{},"body":{"components/LessonPage.html":{}}}],["success",{"_index":1262,"title":{},"body":{"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"injectables/NotificationService.html":{},"interfaces/SignupPayload.html":{},"components/Toast.html":{},"interfaces/VerifyEmailResponse.html":{},"miscellaneous/typealiases.html":{}}}],["successful",{"_index":421,"title":{},"body":{"components/CheckEmail.html":{},"components/Login.html":{},"components/Signup.html":{},"components/VerifyEmail.html":{}}}],["successfully",{"_index":1111,"title":{},"body":{"components/LessonPage.html":{},"components/NamingUpload.html":{}}}],["successfully!now",{"_index":2125,"title":{},"body":{"components/VerifyEmail.html":{}}}],["such",{"_index":966,"title":{},"body":{"components/LessonPage.html":{},"index.html":{}}}],["suited",{"_index":638,"title":{},"body":{"components/Features.html":{}}}],["suits",{"_index":2245,"title":{},"body":{"index.html":{}}}],["summaries",{"_index":648,"title":{},"body":{"components/Features.html":{}}}],["sure",{"_index":444,"title":{},"body":{"components/ConfirmLogout.html":{},"components/Practice.html":{}}}],["swear",{"_index":1459,"title":{},"body":{"components/NotFound.html":{}}}],["switchmap",{"_index":872,"title":{},"body":{"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/Practice.html":{}}}],["switchmap((res",{"_index":1019,"title":{},"body":{"components/LessonPage.html":{}}}],["switchmap((subject",{"_index":1013,"title":{},"body":{"components/LessonPage.html":{}}}],["t",{"_index":772,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["t.id",{"_index":1122,"title":{},"body":{"components/LessonPage.html":{},"components/Sidebar.html":{}}}],["t1",{"_index":876,"title":{},"body":{"components/LessonPage.html":{}}}],["t2",{"_index":942,"title":{},"body":{"components/LessonPage.html":{}}}],["tab",{"_index":477,"title":{},"body":{"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/NamingUpload.html":{},"components/QuestionSettings.html":{},"components/TopicPreferences.html":{}}}],["tab'},{'name",{"_index":46,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["tab.css",{"_index":480,"title":{},"body":{"components/CreationStepTab.html":{}}}],["tab.html",{"_index":479,"title":{},"body":{"components/CreationStepTab.html":{}}}],["tab.ts",{"_index":475,"title":{},"body":{"components/CreationStepTab.html":{},"coverage.html":{}}}],["tab.ts:12",{"_index":490,"title":{},"body":{"components/CreationStepTab.html":{}}}],["tab.ts:13",{"_index":488,"title":{},"body":{"components/CreationStepTab.html":{}}}],["tab.ts:14",{"_index":487,"title":{},"body":{"components/CreationStepTab.html":{}}}],["tab.ts:16",{"_index":492,"title":{},"body":{"components/CreationStepTab.html":{}}}],["tab.ts:17",{"_index":493,"title":{},"body":{"components/CreationStepTab.html":{}}}],["tab.ts:19",{"_index":491,"title":{},"body":{"components/CreationStepTab.html":{}}}],["tab/creation",{"_index":474,"title":{},"body":{"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/NamingUpload.html":{},"components/QuestionSettings.html":{},"components/TopicPreferences.html":{},"coverage.html":{}}}],["table",{"_index":2169,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2168,"title":{},"body":{"coverage.html":{}}}],["tailored",{"_index":640,"title":{},"body":{"components/Features.html":{},"components/Landing.html":{}}}],["tailwind",{"_index":2179,"title":{},"body":{"dependencies.html":{}}}],["take",{"_index":1163,"title":{},"body":{"components/LessonPage.html":{},"components/NotFound.html":{},"components/Practice.html":{}}}],["tap",{"_index":1409,"title":{},"body":{"components/NamingUpload.html":{},"components/Practice.html":{}}}],["tap((labelresponse",{"_index":1399,"title":{},"body":{"components/NamingUpload.html":{}}}],["tap((response",{"_index":1390,"title":{},"body":{"components/NamingUpload.html":{}}}],["tap((value",{"_index":1621,"title":{},"body":{"components/Practice.html":{}}}],["tell",{"_index":642,"title":{},"body":{"components/Features.html":{}}}],["temperatures",{"_index":949,"title":{},"body":{"components/LessonPage.html":{}}}],["template",{"_index":4,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["templateurl",{"_index":13,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["test",{"_index":2234,"title":{},"body":{"index.html":{}}}],["testing",{"_index":2241,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":2239,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2231,"title":{},"body":{"index.html":{}}}],["text",{"_index":486,"title":{},"body":{"components/CreationStepTab.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"interfaces/SaveQuestionData.html":{},"components/Signup.html":{},"interfaces/SubtopicModel.html":{},"components/Toast.html":{}}}],["textcolour",{"_index":482,"title":{},"body":{"components/CreationStepTab.html":{}}}],["think",{"_index":1448,"title":{},"body":{"components/NotFound.html":{}}}],["this._timer",{"_index":1509,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.active",{"_index":497,"title":{},"body":{"components/CreationStepTab.html":{}}}],["this.appfiletype",{"_index":714,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["this.auth.accesstoken",{"_index":166,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.auth.logout",{"_index":184,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/Header.html":{}}}],["this.authservice.signup",{"_index":1774,"title":{},"body":{"components/Signup.html":{}}}],["this.authservice.verifyemail(token).subscribe",{"_index":2116,"title":{},"body":{"components/VerifyEmail.html":{}}}],["this.bgcolour",{"_index":498,"title":{},"body":{"components/CreationStepTab.html":{}}}],["this.cdr.detectchanges",{"_index":370,"title":{},"body":{"components/Chatbot.html":{},"components/CheckEmail.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["this.changeprogress.emit",{"_index":1656,"title":{},"body":{"components/Practice.html":{}}}],["this.changequestion.emit({id",{"_index":1589,"title":{},"body":{"components/Practice.html":{}}}],["this.chatbotservice.getchathistory(this.subjectid).subscribe",{"_index":999,"title":{},"body":{"components/LessonPage.html":{}}}],["this.chatbotservice.sendmessage(this.subjectid",{"_index":364,"title":{},"body":{"components/Chatbot.html":{}}}],["this.chatcontainer?.nativeelement",{"_index":355,"title":{},"body":{"components/Chatbot.html":{}}}],["this.chathistory",{"_index":299,"title":{},"body":{"components/Chatbot.html":{},"components/LessonPage.html":{}}}],["this.chathistory()?.push",{"_index":361,"title":{},"body":{"components/Chatbot.html":{}}}],["this.chathistory.update(history",{"_index":366,"title":{},"body":{"components/Chatbot.html":{}}}],["this.chatmetadata.exam_id",{"_index":1147,"title":{},"body":{"components/LessonPage.html":{}}}],["this.chatmetadata.exercise_id",{"_index":1146,"title":{},"body":{"components/LessonPage.html":{}}}],["this.chatmetadata.question_id",{"_index":1148,"title":{},"body":{"components/LessonPage.html":{}}}],["this.chatmetadata.sub_topic_id",{"_index":1143,"title":{},"body":{"components/LessonPage.html":{}}}],["this.chatmetadata.sub_topic_name",{"_index":1144,"title":{},"body":{"components/LessonPage.html":{}}}],["this.chatmetadata.topic_id",{"_index":1139,"title":{},"body":{"components/LessonPage.html":{}}}],["this.chatmetadata.topic_name",{"_index":1141,"title":{},"body":{"components/LessonPage.html":{}}}],["this.chatopen",{"_index":1088,"title":{},"body":{"components/LessonPage.html":{}}}],["this.checkfortopiccompleteness(topic_id",{"_index":1086,"title":{},"body":{"components/LessonPage.html":{}}}],["this.clear",{"_index":1511,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.closechat.emit",{"_index":346,"title":{},"body":{"components/Chatbot.html":{}}}],["this.content().topics.find((t",{"_index":1734,"title":{},"body":{"components/Sidebar.html":{}}}],["this.currentmessage",{"_index":359,"title":{},"body":{"components/Chatbot.html":{}}}],["this.currenttopic().id",{"_index":1971,"title":{},"body":{"components/Subtopic.html":{}}}],["this.currentuser$.asobservable",{"_index":2106,"title":{},"body":{"injectables/UserService.html":{}}}],["this.currentuser$.next(user",{"_index":2105,"title":{},"body":{"injectables/UserService.html":{}}}],["this.currentview",{"_index":1077,"title":{},"body":{"components/LessonPage.html":{},"components/Practice.html":{}}}],["this.currentview().content.questions.findindex((q",{"_index":1590,"title":{},"body":{"components/Practice.html":{}}}],["this.currentview().content.questions.foreach((question",{"_index":1605,"title":{},"body":{"components/Practice.html":{}}}],["this.currentview().content.questions.length",{"_index":1585,"title":{},"body":{"components/Practice.html":{}}}],["this.currentview().content.questions[newindex",{"_index":1587,"title":{},"body":{"components/Practice.html":{}}}],["this.currentview().content.score",{"_index":1655,"title":{},"body":{"components/Practice.html":{}}}],["this.currentview().id",{"_index":1648,"title":{},"body":{"components/Practice.html":{}}}],["this.currentview().type",{"_index":1645,"title":{},"body":{"components/Practice.html":{}}}],["this.currentview.content.score",{"_index":1089,"title":{},"body":{"components/LessonPage.html":{}}}],["this.currentview.content.title",{"_index":1145,"title":{},"body":{"components/LessonPage.html":{}}}],["this.currentview.id",{"_index":1062,"title":{},"body":{"components/LessonPage.html":{}}}],["this.currentview.type",{"_index":1137,"title":{},"body":{"components/LessonPage.html":{}}}],["this.cyclesubtopic.emit",{"_index":1970,"title":{},"body":{"components/Subtopic.html":{}}}],["this.email",{"_index":411,"title":{},"body":{"components/CheckEmail.html":{},"components/Signup.html":{}}}],["this.emailctrl.invalid",{"_index":1768,"title":{},"body":{"components/Signup.html":{}}}],["this.examsettings.include",{"_index":559,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["this.examsettings.preference",{"_index":561,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["this.examsettings.questiontypes",{"_index":542,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["this.examsettings.questiontypes.filter((qt",{"_index":543,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["this.examsettings.questiontypes.length",{"_index":560,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["this.examsettings.questiontypes.push(event.target.value",{"_index":541,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["this.exercisecompleted.emit(this.topicid",{"_index":1650,"title":{},"body":{"components/Practice.html":{}}}],["this.exercisesettings.include",{"_index":550,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["this.exercisesettings.preference",{"_index":555,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["this.exercisesettings.questiontypes",{"_index":570,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["this.exercisesettings.questiontypes.length",{"_index":551,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["this.fileerror.emit(res.reason",{"_index":718,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["this.fileok.emit(f",{"_index":717,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["this.fileok.emit(null",{"_index":720,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["this.files",{"_index":1346,"title":{},"body":{"components/NamingUpload.html":{}}}],["this.files).pipe",{"_index":1408,"title":{},"body":{"components/NamingUpload.html":{}}}],["this.files.filter((f",{"_index":1351,"title":{},"body":{"components/NamingUpload.html":{}}}],["this.files.length",{"_index":1374,"title":{},"body":{"components/NamingUpload.html":{}}}],["this.firstname",{"_index":1775,"title":{},"body":{"components/Signup.html":{}}}],["this.firstnamectrl.invalid",{"_index":1770,"title":{},"body":{"components/Signup.html":{}}}],["this.getheaders",{"_index":789,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["this.gettopicdatafromexercise",{"_index":1149,"title":{},"body":{"components/LessonPage.html":{}}}],["this.gettopicdatafromsubtopic",{"_index":1138,"title":{},"body":{"components/LessonPage.html":{}}}],["this.gettopicdatafromsubtopic().id",{"_index":1080,"title":{},"body":{"components/LessonPage.html":{}}}],["this.http.delete(`${this.apiurl}/${endpoint",{"_index":792,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["this.http.get('session/list",{"_index":1888,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["this.http.get(`${this.apiurl}/${endpoint",{"_index":787,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["this.http.get(`${this.apiurl}/${id}/answers",{"_index":616,"title":{},"body":{"injectables/ExerciseService.html":{}}}],["this.http.get(`${this.baseurl}/me",{"_index":2103,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`${this.baseurl}/plans",{"_index":1952,"title":{},"body":{"injectables/SubscriptionService.html":{}}}],["this.http.get(`${this.baseurl}/status",{"_index":1954,"title":{},"body":{"injectables/SubscriptionService.html":{}}}],["this.http.get(`chatbot/${sessionid}/chat",{"_index":390,"title":{},"body":{"injectables/ChatbotService.html":{}}}],["this.http.get(`session/${sessionid}/get",{"_index":1202,"title":{},"body":{"injectables/LessonService.html":{},"injectables/SubjectsService.html":{}}}],["this.http.get(`topic/${sessionid}/list",{"_index":1200,"title":{},"body":{"injectables/LessonService.html":{}}}],["this.http.get(`topic/${topicid}/get",{"_index":1201,"title":{},"body":{"injectables/LessonService.html":{}}}],["this.http.post('auth/login",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post('auth/logout",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post('auth/refresh",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post('auth/resend",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post('auth/sign",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post('auth/verify",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post('session/create",{"_index":1889,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["this.http.post(`${this.apiurl}/${endpoint",{"_index":790,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["this.http.post(`${this.apiurl}/${id}/submit",{"_index":617,"title":{},"body":{"injectables/ExerciseService.html":{}}}],["this.http.post(`${this.baseurl}/cancel",{"_index":1955,"title":{},"body":{"injectables/SubscriptionService.html":{}}}],["this.http.post(`${this.baseurl}/subscribe",{"_index":1953,"title":{},"body":{"injectables/SubscriptionService.html":{}}}],["this.http.post(`chatbot/${sessionid}/send",{"_index":389,"title":{},"body":{"injectables/ChatbotService.html":{}}}],["this.http.post(`chatbot/answer",{"_index":1203,"title":{},"body":{"injectables/LessonService.html":{}}}],["this.http.post(`session/${sessionid}/docs/ingest",{"_index":1894,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["this.http.post(`session/${sessionid}/docs/label",{"_index":1895,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["this.http.post(`session/${sessionid}/generate",{"_index":1897,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["this.http.post(`session/${sessionid}/select",{"_index":1896,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["this.http.put(`${this.apiurl}/${endpoint",{"_index":791,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["this.http.put(`${this.baseurl}/me",{"_index":2104,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.put(`session/${sessionid}/name",{"_index":1890,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["this.http.put(`session/${sessionid}/save",{"_index":1210,"title":{},"body":{"injectables/LessonService.html":{}}}],["this.http.put(`session/${sessionid}/update",{"_index":1903,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["this.http.put(`topic/${topicid}/mark",{"_index":1205,"title":{},"body":{"injectables/LessonService.html":{}}}],["this.http.put(`topic/${topicid}/save",{"_index":1207,"title":{},"body":{"injectables/LessonService.html":{}}}],["this.injector",{"_index":317,"title":{},"body":{"components/Chatbot.html":{}}}],["this.lastname",{"_index":1776,"title":{},"body":{"components/Signup.html":{}}}],["this.lastnamectrl.invalid",{"_index":1771,"title":{},"body":{"components/Signup.html":{}}}],["this.learningstyle).subscribe",{"_index":2074,"title":{},"body":{"components/TopicPreferences.html":{}}}],["this.learningstylectrl.invalid",{"_index":2063,"title":{},"body":{"components/TopicPreferences.html":{}}}],["this.lessonservice.getallsubtopics(topic.id).pipe",{"_index":1031,"title":{},"body":{"components/LessonPage.html":{}}}],["this.lessonservice.getalltopics(this.subjectid",{"_index":1018,"title":{},"body":{"components/LessonPage.html":{}}}],["this.lessonservice.getalltopics(this.subjectid).subscribe",{"_index":2054,"title":{},"body":{"components/TopicPreferences.html":{}}}],["this.lessonservice.getexam(this.subjectid).pipe",{"_index":1043,"title":{},"body":{"components/LessonPage.html":{}}}],["this.lessonservice.getexercise(topic.id).pipe",{"_index":1034,"title":{},"body":{"components/LessonPage.html":{}}}],["this.lessonservice.marksubtopicasread(topic_id",{"_index":1081,"title":{},"body":{"components/LessonPage.html":{}}}],["this.lessonservice.saveexamscore(this.subjectid",{"_index":1651,"title":{},"body":{"components/Practice.html":{}}}],["this.lessonservice.saveexercisescore(this.topicid",{"_index":1647,"title":{},"body":{"components/Practice.html":{}}}],["this.lessonservice.scoreessayquestion(this.subjectid",{"_index":1619,"title":{},"body":{"components/Practice.html":{}}}],["this.loading",{"_index":358,"title":{},"body":{"components/Chatbot.html":{},"components/CheckEmail.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{},"components/TopicPreferences.html":{}}}],["this.loadingsubjects",{"_index":1833,"title":{},"body":{"components/Subjects.html":{}}}],["this.maxbytes",{"_index":715,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["this.md.render(value",{"_index":1284,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["this.message.set(msg",{"_index":1507,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.message.set(null",{"_index":1514,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.metadata()).subscribe",{"_index":365,"title":{},"body":{"components/Chatbot.html":{}}}],["this.msg",{"_index":2008,"title":{},"body":{"components/Toast.html":{}}}],["this.navigatesection.emit('contact",{"_index":804,"title":{},"body":{"components/Landing.html":{}}}],["this.navigatesection.emit('features",{"_index":459,"title":{},"body":{"components/Contact.html":{},"components/Landing.html":{}}}],["this.navigatesection.emit('pricing",{"_index":460,"title":{},"body":{"components/Contact.html":{},"components/Landing.html":{}}}],["this.navigatesection.emit('top",{"_index":458,"title":{},"body":{"components/Contact.html":{},"components/Landing.html":{}}}],["this.notify.clear",{"_index":2011,"title":{},"body":{"components/Toast.html":{}}}],["this.notify.message",{"_index":2009,"title":{},"body":{"components/Toast.html":{}}}],["this.notify.showerror(\"at",{"_index":2062,"title":{},"body":{"components/TopicPreferences.html":{}}}],["this.notify.showerror(\"choose",{"_index":552,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["this.notify.showerror(\"exam",{"_index":562,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["this.notify.showerror(\"exercise",{"_index":556,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["this.notify.showerror(\"failed",{"_index":2058,"title":{},"body":{"components/TopicPreferences.html":{}}}],["this.notify.showerror(\"first",{"_index":1772,"title":{},"body":{"components/Signup.html":{}}}],["this.notify.showerror(\"learning",{"_index":2064,"title":{},"body":{"components/TopicPreferences.html":{}}}],["this.notify.showerror('at",{"_index":1375,"title":{},"body":{"components/NamingUpload.html":{}}}],["this.notify.showerror('failed",{"_index":374,"title":{},"body":{"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/NamingUpload.html":{},"components/Practice.html":{}}}],["this.notify.showerror('invalid",{"_index":1240,"title":{},"body":{"components/Login.html":{}}}],["this.notify.showerror('signup",{"_index":1783,"title":{},"body":{"components/Signup.html":{}}}],["this.notify.showerror('something",{"_index":1419,"title":{},"body":{"components/NamingUpload.html":{}}}],["this.notify.showerror('subject",{"_index":1373,"title":{},"body":{"components/NamingUpload.html":{}}}],["this.notify.showerror(`files",{"_index":1342,"title":{},"body":{"components/NamingUpload.html":{}}}],["this.notify.showerror(`unsupported",{"_index":1339,"title":{},"body":{"components/NamingUpload.html":{}}}],["this.notify.showsuccess(\"successfully",{"_index":2076,"title":{},"body":{"components/TopicPreferences.html":{}}}],["this.notify.showsuccess(\"sucessfully",{"_index":580,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["this.notify.showsuccess(\"topics",{"_index":1402,"title":{},"body":{"components/NamingUpload.html":{}}}],["this.notify.showsuccess('signup",{"_index":1779,"title":{},"body":{"components/Signup.html":{}}}],["this.notify.showsuccess('successfully",{"_index":1414,"title":{},"body":{"components/NamingUpload.html":{}}}],["this.notify.showsuccess('verification",{"_index":422,"title":{},"body":{"components/CheckEmail.html":{}}}],["this.notify.showsuccess(`${validfiles.length",{"_index":1348,"title":{},"body":{"components/NamingUpload.html":{}}}],["this.notify.type",{"_index":2010,"title":{},"body":{"components/Toast.html":{}}}],["this.password",{"_index":1777,"title":{},"body":{"components/Signup.html":{}}}],["this.passwordctrl.invalid",{"_index":1769,"title":{},"body":{"components/Signup.html":{}}}],["this.passwordvisible",{"_index":1764,"title":{},"body":{"components/Signup.html":{}}}],["this.plans.set(plans",{"_index":1921,"title":{},"body":{"components/Subscription.html":{}}}],["this.question",{"_index":1586,"title":{},"body":{"components/Practice.html":{}}}],["this.question.id",{"_index":1584,"title":{},"body":{"components/Practice.html":{}}}],["this.question.id)?.options",{"_index":1599,"title":{},"body":{"components/Practice.html":{}}}],["this.question.options.find((o",{"_index":1596,"title":{},"body":{"components/Practice.html":{}}}],["this.question.options.foreach((option",{"_index":1592,"title":{},"body":{"components/Practice.html":{}}}],["this.question.type",{"_index":1591,"title":{},"body":{"components/Practice.html":{}}}],["this.refresh",{"_index":1922,"title":{},"body":{"components/Subscription.html":{}}}],["this.resendtimer",{"_index":415,"title":{},"body":{"components/CheckEmail.html":{}}}],["this.router.getcurrentnavigation",{"_index":410,"title":{},"body":{"components/CheckEmail.html":{}}}],["this.router.navigate(['/dashboard/subscription",{"_index":1938,"title":{},"body":{"guards/SubscriptionGuard.html":{}}}],["this.router.navigate(['/login",{"_index":187,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/Home.html":{},"components/Landing.html":{}}}],["this.router.navigate([`/lesson/${subject.id",{"_index":1844,"title":{},"body":{"components/Subjects.html":{}}}],["this.router.navigate([`/lesson/${this.subjectid",{"_index":586,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["this.router.navigate([`/subject",{"_index":1404,"title":{},"body":{"components/NamingUpload.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["this.router.navigatebyurl",{"_index":743,"title":{},"body":{"components/Header.html":{},"components/NotFound.html":{}}}],["this.router.navigatebyurl('/check",{"_index":1780,"title":{},"body":{"components/Signup.html":{}}}],["this.router.navigatebyurl('/dashboard",{"_index":1238,"title":{},"body":{"components/Login.html":{}}}],["this.router.navigatebyurl('/login",{"_index":2119,"title":{},"body":{"components/VerifyEmail.html":{}}}],["this.router.navigatebyurl('/signup",{"_index":2122,"title":{},"body":{"components/VerifyEmail.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(html",{"_index":1285,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["this.scrolltobottom",{"_index":316,"title":{},"body":{"components/Chatbot.html":{}}}],["this.show('error",{"_index":1512,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.show('success",{"_index":1513,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.showaccount.set(!this.showaccount",{"_index":744,"title":{},"body":{"components/Header.html":{}}}],["this.showlogout.set(false",{"_index":742,"title":{},"body":{"components/Header.html":{}}}],["this.showlogout.set(true",{"_index":741,"title":{},"body":{"components/Header.html":{}}}],["this.startresendtimer",{"_index":414,"title":{},"body":{"components/CheckEmail.html":{}}}],["this.status.set(st",{"_index":1926,"title":{},"body":{"components/Subscription.html":{}}}],["this.subject",{"_index":1361,"title":{},"body":{"components/NamingUpload.html":{}}}],["this.subject.name",{"_index":1364,"title":{},"body":{"components/NamingUpload.html":{}}}],["this.subject.status",{"_index":1365,"title":{},"body":{"components/NamingUpload.html":{}}}],["this.subjectcontent",{"_index":1016,"title":{},"body":{"components/LessonPage.html":{}}}],["this.subjectcontent.exam",{"_index":1044,"title":{},"body":{"components/LessonPage.html":{}}}],["this.subjectcontent.exam.id",{"_index":1063,"title":{},"body":{"components/LessonPage.html":{}}}],["this.subjectcontent.exam.score",{"_index":1104,"title":{},"body":{"components/LessonPage.html":{}}}],["this.subjectcontent.topics",{"_index":1027,"title":{},"body":{"components/LessonPage.html":{}}}],["this.subjectcontent.topics.find((t",{"_index":1121,"title":{},"body":{"components/LessonPage.html":{}}}],["this.subjectcontent.topics.find((topic",{"_index":1117,"title":{},"body":{"components/LessonPage.html":{}}}],["this.subjectcontent.topics.foreach((topic",{"_index":1094,"title":{},"body":{"components/LessonPage.html":{}}}],["this.subjectcontent.topics[0",{"_index":1065,"title":{},"body":{"components/LessonPage.html":{}}}],["this.subjectid",{"_index":569,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/QuestionSettings.html":{}}}],["this.subjectname",{"_index":1363,"title":{},"body":{"components/NamingUpload.html":{}}}],["this.subjectname).pipe",{"_index":1389,"title":{},"body":{"components/NamingUpload.html":{}}}],["this.subjectname.trim",{"_index":1372,"title":{},"body":{"components/NamingUpload.html":{}}}],["this.subjects",{"_index":1830,"title":{},"body":{"components/Subjects.html":{}}}],["this.subjectservice.createsubject().subscribe",{"_index":1835,"title":{},"body":{"components/Subjects.html":{}}}],["this.subjectservice.generateexam",{"_index":571,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["this.subjectservice.generateexercise",{"_index":568,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["this.subjectservice.generatelesson(this.subjectid",{"_index":2073,"title":{},"body":{"components/TopicPreferences.html":{}}}],["this.subjectservice.getallsubjects().pipe",{"_index":1003,"title":{},"body":{"components/LessonPage.html":{}}}],["this.subjectservice.getallsubjects().subscribe",{"_index":1829,"title":{},"body":{"components/Subjects.html":{}}}],["this.subjectservice.getsubject(this.subjectid).subscribe",{"_index":1360,"title":{},"body":{"components/NamingUpload.html":{}}}],["this.subjectservice.ingestdocuments(this.subjectid",{"_index":1407,"title":{},"body":{"components/NamingUpload.html":{}}}],["this.subjectservice.labeldocuments(this.subjectid).pipe",{"_index":1398,"title":{},"body":{"components/NamingUpload.html":{}}}],["this.subjectservice.namesubject(this.subjectid",{"_index":1388,"title":{},"body":{"components/NamingUpload.html":{}}}],["this.subjectservice.selecttopics(this.subjectid",{"_index":2069,"title":{},"body":{"components/TopicPreferences.html":{}}}],["this.subjectservice.updatesessionprogress(this.subjectid",{"_index":1108,"title":{},"body":{"components/LessonPage.html":{}}}],["this.subjectservice.updatesessionstatus(this.subjectid",{"_index":582,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["this.subsvc.cancel().subscribe",{"_index":1924,"title":{},"body":{"components/Subscription.html":{}}}],["this.subsvc.getplans().subscribe(plans",{"_index":1920,"title":{},"body":{"components/Subscription.html":{}}}],["this.subsvc.getstatus().pipe",{"_index":1935,"title":{},"body":{"guards/SubscriptionGuard.html":{}}}],["this.subsvc.getstatus().subscribe(st",{"_index":1925,"title":{},"body":{"components/Subscription.html":{}}}],["this.subsvc.subscribe(id).subscribe",{"_index":1923,"title":{},"body":{"components/Subscription.html":{}}}],["this.textcolour",{"_index":503,"title":{},"body":{"components/CreationStepTab.html":{}}}],["this.topics",{"_index":2055,"title":{},"body":{"components/TopicPreferences.html":{}}}],["this.topics.filter((topic",{"_index":2060,"title":{},"body":{"components/TopicPreferences.html":{}}}],["this.type",{"_index":2000,"title":{},"body":{"components/Toast.html":{}}}],["this.type.set(null",{"_index":1515,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.type.set(type",{"_index":1506,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.updatechatmetadata",{"_index":1078,"title":{},"body":{"components/LessonPage.html":{}}}],["this.updatecurrentview",{"_index":1054,"title":{},"body":{"components/LessonPage.html":{}}}],["this.updateprogress",{"_index":1085,"title":{},"body":{"components/LessonPage.html":{}}}],["this.updateview.emit",{"_index":1737,"title":{},"body":{"components/Sidebar.html":{}}}],["this.uploadeddocs",{"_index":1368,"title":{},"body":{"components/NamingUpload.html":{}}}],["this.verified",{"_index":2118,"title":{},"body":{"components/VerifyEmail.html":{}}}],["this.viewready",{"_index":308,"title":{},"body":{"components/Chatbot.html":{}}}],["this.vscroller.scrolltoanchor(section",{"_index":763,"title":{},"body":{"components/Home.html":{}}}],["this.vscroller.scrolltoposition([0",{"_index":762,"title":{},"body":{"components/Home.html":{}}}],["through",{"_index":1093,"title":{},"body":{"components/LessonPage.html":{}}}],["throw",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"components/LessonPage.html":{},"miscellaneous/variables.html":{}}}],["throwerror",{"_index":158,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["time",{"_index":1164,"title":{},"body":{"components/LessonPage.html":{},"components/Practice.html":{}}}],["timelimit",{"_index":522,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{},"injectables/SubjectsService.html":{}}}],["timestamp",{"_index":261,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/Chatbot.html":{},"components/LessonPage.html":{}}}],["title",{"_index":120,"title":{},"body":{"components/App.html":{},"components/LessonPage.html":{},"interfaces/SubtopicModel.html":{},"interfaces/TopicModel.html":{}}}],["toast",{"_index":82,"title":{"components/Toast.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["toast'},{'name",{"_index":83,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["toast.html",{"_index":1979,"title":{},"body":{"components/Toast.html":{}}}],["togglechatpopup",{"_index":831,"title":{},"body":{"components/LessonPage.html":{}}}],["toggled",{"_index":1152,"title":{},"body":{"components/LessonPage.html":{}}}],["toggleexamtype",{"_index":1703,"title":{},"body":{"components/QuestionSettings.html":{}}}],["toggleexamtype(event",{"_index":539,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["toggleexercisetype",{"_index":1704,"title":{},"body":{"components/QuestionSettings.html":{}}}],["toggleexercisetype(event",{"_index":1708,"title":{},"body":{"components/QuestionSettings.html":{}}}],["toggleexpandtopic",{"_index":1723,"title":{},"body":{"components/Sidebar.html":{}}}],["toggleexpandtopic(topic_id",{"_index":1731,"title":{},"body":{"components/Sidebar.html":{}}}],["togglepasswordvisibility",{"_index":1217,"title":{},"body":{"components/Login.html":{},"components/Signup.html":{}}}],["toggleselectoption",{"_index":1558,"title":{},"body":{"components/Practice.html":{}}}],["toggleselectoption(id",{"_index":1575,"title":{},"body":{"components/Practice.html":{}}}],["toggletopicselection",{"_index":2023,"title":{},"body":{"components/TopicPreferences.html":{}}}],["toggletopicselection(topic_id",{"_index":2027,"title":{},"body":{"components/TopicPreferences.html":{}}}],["token",{"_index":165,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/HttpBaseService.html":{},"components/VerifyEmail.html":{}}}],["tokens/session",{"_index":183,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["tools",{"_index":2214,"title":{},"body":{"index.html":{}}}],["top",{"_index":755,"title":{},"body":{"components/Home.html":{}}}],["topic",{"_index":85,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["topic.completed",{"_index":1026,"title":{},"body":{"components/LessonPage.html":{}}}],["topic.exercise",{"_index":1038,"title":{},"body":{"components/LessonPage.html":{},"components/Sidebar.html":{}}}],["topic.exercise.id",{"_index":1058,"title":{},"body":{"components/LessonPage.html":{}}}],["topic.exercise.score",{"_index":1057,"title":{},"body":{"components/LessonPage.html":{}}}],["topic.expanded",{"_index":1735,"title":{},"body":{"components/Sidebar.html":{}}}],["topic.id",{"_index":1024,"title":{},"body":{"components/LessonPage.html":{},"components/Sidebar.html":{},"components/TopicPreferences.html":{}}}],["topic.id)).subscribe",{"_index":2071,"title":{},"body":{"components/TopicPreferences.html":{}}}],["topic.selected",{"_index":2052,"title":{},"body":{"components/TopicPreferences.html":{}}}],["topic.selected).map((topic",{"_index":1023,"title":{},"body":{"components/LessonPage.html":{}}}],["topic.subtopics",{"_index":1036,"title":{},"body":{"components/LessonPage.html":{},"components/Sidebar.html":{}}}],["topic.subtopics.every((st",{"_index":1125,"title":{},"body":{"components/LessonPage.html":{}}}],["topic.subtopics.filter((st",{"_index":1098,"title":{},"body":{"components/LessonPage.html":{}}}],["topic.subtopics.find((st",{"_index":1052,"title":{},"body":{"components/LessonPage.html":{}}}],["topic.subtopics.length",{"_index":1097,"title":{},"body":{"components/LessonPage.html":{}}}],["topic.subtopics.some((subtopic",{"_index":1118,"title":{},"body":{"components/LessonPage.html":{}}}],["topic.subtopics?.length",{"_index":1096,"title":{},"body":{"components/LessonPage.html":{}}}],["topic.title",{"_index":1025,"title":{},"body":{"components/LessonPage.html":{},"components/Sidebar.html":{},"components/TopicPreferences.html":{}}}],["topic_id",{"_index":843,"title":{},"body":{"components/LessonPage.html":{},"components/Sidebar.html":{},"components/TopicPreferences.html":{}}}],["topic_id).subtopics",{"_index":1084,"title":{},"body":{"components/LessonPage.html":{}}}],["topicdata",{"_index":1116,"title":{},"body":{"components/LessonPage.html":{}}}],["topicdata.id",{"_index":1140,"title":{},"body":{"components/LessonPage.html":{}}}],["topicdata.title",{"_index":1142,"title":{},"body":{"components/LessonPage.html":{}}}],["topicdata?.id",{"_index":1119,"title":{},"body":{"components/LessonPage.html":{}}}],["topicdata?.title",{"_index":1120,"title":{},"body":{"components/LessonPage.html":{}}}],["topicid",{"_index":1178,"title":{},"body":{"injectables/LessonService.html":{},"components/Practice.html":{}}}],["topicids",{"_index":1881,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["topicmodel",{"_index":2013,"title":{"interfaces/TopicModel.html":{}},"body":{"interfaces/TopicModel.html":{},"components/TopicPreferences.html":{},"coverage.html":{}}}],["topicpreferences",{"_index":84,"title":{"components/TopicPreferences.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["topicrequests",{"_index":1029,"title":{},"body":{"components/LessonPage.html":{}}}],["topics",{"_index":636,"title":{},"body":{"components/Features.html":{},"components/LessonPage.html":{},"components/NamingUpload.html":{},"injectables/SubjectsService.html":{},"components/TopicPreferences.html":{}}}],["topics.map((topic",{"_index":1030,"title":{},"body":{"components/LessonPage.html":{}}}],["topicsresponse",{"_index":1020,"title":{},"body":{"components/LessonPage.html":{}}}],["topicsresponse.filter((topic",{"_index":1022,"title":{},"body":{"components/LessonPage.html":{}}}],["total",{"_index":1091,"title":{},"body":{"components/LessonPage.html":{}}}],["track",{"_index":300,"title":{},"body":{"components/Chatbot.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/Sidebar.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["transform",{"_index":1267,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["transform(value",{"_index":1268,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["tropical",{"_index":958,"title":{},"body":{"components/LessonPage.html":{}}}],["true",{"_index":350,"title":{},"body":{"components/Chatbot.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/LessonPage.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"miscellaneous/variables.html":{}}}],["trust",{"_index":1637,"title":{},"body":{"components/Practice.html":{}}}],["try",{"_index":303,"title":{},"body":{"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/Landing.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["tslib",{"_index":2182,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":634,"title":{},"body":{"components/Features.html":{}}}],["type",{"_index":111,"title":{},"body":{"interfaces/AnswerModel.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/ChatMessage.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"interfaces/ExamModel.html":{},"classes/ExamSettings.html":{},"interfaces/ExerciseModel.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"directives/PasswordValidator.html":{},"interfaces/Plan.html":{},"components/Practice.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"interfaces/SignupPayload.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"interfaces/SubscriptionStatus.html":{},"components/Subtopic.html":{},"interfaces/SubtopicModel.html":{},"components/Toast.html":{},"interfaces/TopicModel.html":{},"components/TopicPreferences.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"components/VerifyEmail.html":{},"interfaces/VerifyEmailResponse.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.directive.ts",{"_index":673,"title":{},"body":{"directives/FileTypeDirective.html":{},"coverage.html":{}}}],["type.directive.ts:11",{"_index":681,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["type.directive.ts:13",{"_index":688,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["type.directive.ts:15",{"_index":697,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["type.directive.ts:17",{"_index":693,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["type.directive.ts:20",{"_index":701,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["typealiases",{"_index":2256,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":684,"title":{},"body":{"directives/FileTypeDirective.html":{},"components/NamingUpload.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{},"miscellaneous/functions.html":{}}}],["typically",{"_index":2065,"title":{},"body":{"components/TopicPreferences.html":{}}}],["typographer",{"_index":1274,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["uamds",{"_index":1816,"title":{},"body":{"components/Subjects.html":{}}}],["undefined",{"_index":1102,"title":{},"body":{"components/LessonPage.html":{},"pipes/MarkdownPipe.html":{}}}],["understanding",{"_index":938,"title":{},"body":{"components/LessonPage.html":{}}}],["unexpected",{"_index":2286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":2230,"title":{},"body":{"index.html":{}}}],["unlock",{"_index":805,"title":{},"body":{"components/Landing.html":{},"components/Pricing.html":{}}}],["unreadsubtopic",{"_index":1051,"title":{},"body":{"components/LessonPage.html":{}}}],["unreadsubtopic.id",{"_index":1055,"title":{},"body":{"components/LessonPage.html":{}}}],["until",{"_index":312,"title":{},"body":{"components/Chatbot.html":{}}}],["unwrap",{"_index":1006,"title":{},"body":{"components/LessonPage.html":{}}}],["up",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{},"components/Login.html":{},"components/Pricing.html":{},"components/Signup.html":{}}}],["update",{"_index":588,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/QuestionSettings.html":{}}}],["update_tick",{"_index":1904,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["updatechatmetadata",{"_index":832,"title":{},"body":{"components/LessonPage.html":{}}}],["updatechatmetadata(question_event",{"_index":848,"title":{},"body":{"components/LessonPage.html":{}}}],["updatecurrentview",{"_index":833,"title":{},"body":{"components/LessonPage.html":{}}}],["updatecurrentview(event",{"_index":851,"title":{},"body":{"components/LessonPage.html":{}}}],["updated",{"_index":585,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/QuestionSettings.html":{}}}],["updateoninputchange",{"_index":1554,"title":{},"body":{"components/Practice.html":{}}}],["updateprofile",{"_index":2090,"title":{},"body":{"injectables/UserService.html":{}}}],["updateprofile(data",{"_index":2096,"title":{},"body":{"injectables/UserService.html":{}}}],["updateprogress",{"_index":834,"title":{},"body":{"components/LessonPage.html":{}}}],["updates",{"_index":1127,"title":{},"body":{"components/LessonPage.html":{}}}],["updatesessionprogress",{"_index":1861,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["updatesessionprogress(sessionid",{"_index":1883,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["updatesessionstatus",{"_index":1862,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["updatesessionstatus(sessionid",{"_index":1885,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["updateview",{"_index":1724,"title":{},"body":{"components/Sidebar.html":{}}}],["updating",{"_index":574,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["upload",{"_index":630,"title":{},"body":{"components/Features.html":{},"components/Landing.html":{},"components/NamingUpload.html":{},"components/Pricing.html":{},"components/Subjects.html":{},"miscellaneous/variables.html":{}}}],["upload').then(m",{"_index":2312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["upload'},{'name",{"_index":62,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["upload.css",{"_index":1290,"title":{},"body":{"components/NamingUpload.html":{}}}],["upload.html",{"_index":1289,"title":{},"body":{"components/NamingUpload.html":{}}}],["upload.ts",{"_index":1288,"title":{},"body":{"components/NamingUpload.html":{},"coverage.html":{}}}],["upload.ts:113",{"_index":1307,"title":{},"body":{"components/NamingUpload.html":{}}}],["upload.ts:132",{"_index":1317,"title":{},"body":{"components/NamingUpload.html":{}}}],["upload.ts:17",{"_index":1325,"title":{},"body":{"components/NamingUpload.html":{}}}],["upload.ts:18",{"_index":1324,"title":{},"body":{"components/NamingUpload.html":{}}}],["upload.ts:19",{"_index":1323,"title":{},"body":{"components/NamingUpload.html":{}}}],["upload.ts:20",{"_index":1320,"title":{},"body":{"components/NamingUpload.html":{}}}],["upload.ts:21",{"_index":1321,"title":{},"body":{"components/NamingUpload.html":{}}}],["upload.ts:22",{"_index":1322,"title":{},"body":{"components/NamingUpload.html":{}}}],["upload.ts:23",{"_index":1327,"title":{},"body":{"components/NamingUpload.html":{}}}],["upload.ts:24",{"_index":1326,"title":{},"body":{"components/NamingUpload.html":{}}}],["upload.ts:25",{"_index":1301,"title":{},"body":{"components/NamingUpload.html":{}}}],["upload.ts:34",{"_index":1314,"title":{},"body":{"components/NamingUpload.html":{}}}],["upload.ts:42",{"_index":1312,"title":{},"body":{"components/NamingUpload.html":{}}}],["upload.ts:47",{"_index":1310,"title":{},"body":{"components/NamingUpload.html":{}}}],["upload.ts:51",{"_index":1316,"title":{},"body":{"components/NamingUpload.html":{}}}],["upload.ts:58",{"_index":1304,"title":{},"body":{"components/NamingUpload.html":{}}}],["upload.ts:92",{"_index":1319,"title":{},"body":{"components/NamingUpload.html":{}}}],["upload.ts:96",{"_index":1306,"title":{},"body":{"components/NamingUpload.html":{}}}],["upload/naming",{"_index":1287,"title":{},"body":{"components/NamingUpload.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uploaded",{"_index":1376,"title":{},"body":{"components/NamingUpload.html":{}}}],["uploadeddocs",{"_index":1293,"title":{},"body":{"components/NamingUpload.html":{}}}],["uploads",{"_index":1413,"title":{},"body":{"components/NamingUpload.html":{}}}],["urbanization",{"_index":969,"title":{},"body":{"components/LessonPage.html":{}}}],["url",{"_index":990,"title":{},"body":{"components/LessonPage.html":{},"components/VerifyEmail.html":{}}}],["url.split",{"_index":993,"title":{},"body":{"components/LessonPage.html":{}}}],["urlparams",{"_index":2113,"title":{},"body":{"components/VerifyEmail.html":{}}}],["urlparams.get('token",{"_index":2115,"title":{},"body":{"components/VerifyEmail.html":{}}}],["urlsearchparams(window.location.search",{"_index":2114,"title":{},"body":{"components/VerifyEmail.html":{}}}],["use",{"_index":2236,"title":{},"body":{"index.html":{}}}],["use(markdownitkatex",{"_index":1275,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["use_time_limit",{"_index":1902,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["useclass",{"_index":2275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useexisting",{"_index":1527,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["user",{"_index":362,"title":{},"body":{"components/Chatbot.html":{},"components/LessonPage.html":{},"components/Login.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"interfaces/SignupPayload.html":{},"injectables/UserService.html":{},"interfaces/VerifyEmailResponse.html":{}}}],["user.email",{"_index":1237,"title":{},"body":{"components/Login.html":{}}}],["user.model",{"_index":1258,"title":{},"body":{"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"interfaces/SignupPayload.html":{},"interfaces/VerifyEmailResponse.html":{}}}],["usermodel",{"_index":225,"title":{"interfaces/UserModel.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"interfaces/SignupPayload.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"interfaces/VerifyEmailResponse.html":{},"coverage.html":{}}}],["userservice",{"_index":2084,"title":{"injectables/UserService.html":{}},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["using",{"_index":2191,"title":{},"body":{"index.html":{}}}],["utils/file",{"_index":707,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["valid",{"_index":1773,"title":{},"body":{"components/Signup.html":{}}}],["validate",{"_index":547,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"directives/PasswordValidator.html":{},"components/QuestionSettings.html":{}}}],["validate(control",{"_index":1520,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["validation.util",{"_index":708,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["validation.util.ts",{"_index":2164,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["validationerrors",{"_index":1524,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["validator",{"_index":1518,"title":{},"body":{"directives/PasswordValidator.html":{},"components/Signup.html":{}}}],["validator.ts",{"_index":1517,"title":{},"body":{"directives/PasswordValidator.html":{},"coverage.html":{}}}],["validator.ts:15",{"_index":1522,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["validfiles",{"_index":1347,"title":{},"body":{"components/NamingUpload.html":{}}}],["validfiles.length",{"_index":1345,"title":{},"body":{"components/NamingUpload.html":{}}}],["validfiles.push(file",{"_index":1337,"title":{},"body":{"components/NamingUpload.html":{}}}],["value",{"_index":122,"title":{},"body":{"components/App.html":{},"injectables/AuthService.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/CheckEmail.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"injectables/HttpBaseService.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"injectables/NotificationService.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"injectables/SubscriptionService.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"injectables/UserService.html":{},"components/VerifyEmail.html":{},"miscellaneous/variables.html":{}}}],["value.correct",{"_index":1623,"title":{},"body":{"components/Practice.html":{}}}],["value.feedback",{"_index":1627,"title":{},"body":{"components/Practice.html":{}}}],["var",{"_index":28,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["variable",{"_index":2133,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2263,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vary",{"_index":955,"title":{},"body":{"components/LessonPage.html":{}}}],["verification",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"components/CheckEmail.html":{},"components/VerifyEmail.html":{}}}],["verified",{"_index":2109,"title":{},"body":{"components/VerifyEmail.html":{}}}],["verify",{"_index":88,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"miscellaneous/variables.html":{}}}],["verifyemail",{"_index":87,"title":{"components/VerifyEmail.html":{}},"body":{"components/About.html":{},"components/App.html":{},"injectables/AuthService.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["verifyemail(token",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyemailresponse",{"_index":1261,"title":{"interfaces/VerifyEmailResponse.html":{}},"body":{"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"interfaces/SignupPayload.html":{},"interfaces/VerifyEmailResponse.html":{},"coverage.html":{}}}],["verifying",{"_index":2127,"title":{},"body":{"components/VerifyEmail.html":{}}}],["version",{"_index":2194,"title":{},"body":{"index.html":{},"properties.html":{}}}],["view",{"_index":306,"title":{},"body":{"components/Chatbot.html":{},"components/LessonPage.html":{},"components/Practice.html":{},"components/Sidebar.html":{}}}],["viewchild",{"_index":336,"title":{},"body":{"components/Chatbot.html":{},"components/Login.html":{},"components/Signup.html":{},"components/TopicPreferences.html":{}}}],["viewchild('chatcontainer",{"_index":323,"title":{},"body":{"components/Chatbot.html":{}}}],["viewchild('emailctrl",{"_index":1224,"title":{},"body":{"components/Login.html":{},"components/Signup.html":{}}}],["viewchild('firstnamectrl",{"_index":1754,"title":{},"body":{"components/Signup.html":{}}}],["viewchild('lastnamectrl",{"_index":1757,"title":{},"body":{"components/Signup.html":{}}}],["viewchild('learningstylectrl",{"_index":2030,"title":{},"body":{"components/TopicPreferences.html":{}}}],["viewchild('passwordctrl",{"_index":1229,"title":{},"body":{"components/Login.html":{},"components/Signup.html":{}}}],["viewportscroller",{"_index":751,"title":{},"body":{"components/Home.html":{}}}],["viewready",{"_index":274,"title":{},"body":{"components/Chatbot.html":{}}}],["visit",{"_index":2250,"title":{},"body":{"index.html":{}}}],["void",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{},"components/Chatbot.html":{},"components/CheckEmail.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"injectables/UserService.html":{}}}],["vscroller",{"_index":750,"title":{},"body":{"components/Home.html":{}}}],["wait",{"_index":572,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/QuestionSettings.html":{},"components/VerifyEmail.html":{}}}],["want",{"_index":445,"title":{},"body":{"components/ConfirmLogout.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/TopicPreferences.html":{},"miscellaneous/variables.html":{}}}],["warn",{"_index":1505,"title":{},"body":{"injectables/NotificationService.html":{},"components/Toast.html":{},"miscellaneous/typealiases.html":{}}}],["water",{"_index":983,"title":{},"body":{"components/LessonPage.html":{}}}],["weather",{"_index":947,"title":{},"body":{"components/LessonPage.html":{}}}],["weird",{"_index":1454,"title":{},"body":{"components/NotFound.html":{}}}],["welcome",{"_index":1241,"title":{},"body":{"components/Login.html":{}}}],["well",{"_index":1716,"title":{},"body":{"components/QuestionSettings.html":{}}}],["went",{"_index":1420,"title":{},"body":{"components/NamingUpload.html":{}}}],["whenever",{"_index":2209,"title":{},"body":{"index.html":{}}}],["whether",{"_index":1381,"title":{},"body":{"components/NamingUpload.html":{}}}],["white",{"_index":1998,"title":{},"body":{"components/Toast.html":{}}}],["window.location.pathname",{"_index":991,"title":{},"body":{"components/LessonPage.html":{}}}],["window.settimeout",{"_index":1510,"title":{},"body":{"injectables/NotificationService.html":{}}}],["work",{"_index":1635,"title":{},"body":{"components/Practice.html":{}}}],["works",{"_index":23,"title":{},"body":{"components/About.html":{}}}],["world",{"_index":889,"title":{},"body":{"components/LessonPage.html":{}}}],["worry",{"_index":1475,"title":{},"body":{"components/NotFound.html":{}}}],["wrong",{"_index":1421,"title":{},"body":{"components/NamingUpload.html":{}}}],["x",{"_index":1435,"title":{},"body":{"components/NamingUpload.html":{},"components/Toast.html":{}}}],["yellow",{"_index":2002,"title":{},"body":{"components/Toast.html":{}}}],["yes",{"_index":384,"title":{},"body":{"injectables/ChatbotService.html":{},"components/ConfirmLogout.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/QuestionSettings.html":{}}}],["you're",{"_index":1449,"title":{},"body":{"components/NotFound.html":{}}}],["you've",{"_index":1468,"title":{},"body":{"components/NotFound.html":{}}}],["you\\'re",{"_index":1479,"title":{},"body":{"components/NotFound.html":{}}}],["you\\'ve",{"_index":1481,"title":{},"body":{"components/NotFound.html":{}}}],["yourself",{"_index":662,"title":{},"body":{"components/Features.html":{}}}],["z",{"_index":1989,"title":{},"body":{"components/Toast.html":{}}}],["z\\d!@#$%^&*()_",{"_index":1533,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["z])(?=.*\\d)[a",{"_index":1532,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["za",{"_index":1531,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["zones",{"_index":944,"title":{},"body":{"components/LessonPage.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/About.html":{"url":"components/About.html","title":"component - About","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  About\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/about-ignore/about.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./about.html\n            \n\n\n\n            \n                styleUrl\n                ./about.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  imports: [],\n  templateUrl: './about.html',\n  styleUrl: './about.css'\n})\nexport class About {\n\n}\n\n    \n\n    \n        about works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'about works!'\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'CheckEmail', 'selector': 'app-check-email'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'About'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnswerModel.html":{"url":"interfaces/AnswerModel.html","title":"interface - AnswerModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnswerModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/answer.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            correctOptions\n                                        \n                                \n                                \n                                        \n                                            feeback\n                                        \n                                \n                                \n                                        \n                                            isCorrect\n                                        \n                                \n                                \n                                        \n                                            prompt\n                                        \n                                \n                                \n                                        \n                                            questionId\n                                        \n                                \n                                \n                                        \n                                            selectedOptions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        correctOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        correctOptions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        feeback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        feeback:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isCorrect\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isCorrect:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prompt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prompt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedOptions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AnswerModel {\n    questionId: string;\n    prompt: string;\n    selectedOptions: string[];\n    correctOptions: string[];\n    isCorrect: boolean;\n    feeback: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/App.html":{"url":"components/App.html","title":"component - App","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  App\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                                Toast\n                                Header\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.html\n            \n\n\n\n            \n                styleUrl\n                ./app.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('maestro_frontend')\n                    \n                \n                    \n                        \n                                Defined in src/app/app.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, signal } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { Toast } from \"./shared/components/toast/toast\";\nimport { Header } from \"./shared/components/header/header\";\n\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet, Toast, Header],\n  templateUrl: './app.html',\n  styleUrl: './app.css'\n})\nexport class App {\n  protected readonly title = signal('maestro_frontend');\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'CheckEmail', 'selector': 'app-check-email'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'App'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interceptors/auth.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/interceptors/auth.interceptor.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/interceptors/auth.interceptor.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpErrorResponse,\n  HttpEvent\n} from '@angular/common/http';\nimport { catchError, throwError, Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private auth: AuthService, private router: Router) {}\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const token = this.auth.accessToken;\n    const authReq = token\n      ? req.clone({ setHeaders: { Authorization: `Bearer ${token}` } })\n      : req;\n\n    return next.handle(authReq).pipe(\n      catchError((err: HttpErrorResponse) => {\n        if (err.status === 401) {\n          console.log('Unauthorized request - logging out');\n          // clear stored tokens/session\n          this.auth.logout();  \n\n          // redirect to login page\n          this.router.navigate(['/login']);\n        }\n        return throwError(() => err);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                refreshAccessToken\n                            \n                            \n                                refreshToken\n                            \n                            \n                                resendVerificationEmail\n                            \n                            \n                                signup\n                            \n                            \n                                    Private\n                                storeTokens\n                            \n                            \n                                verifyEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    accessToken\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(credentials: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshAccessToken\n                        \n                    \n                \n            \n            \n                \nrefreshAccessToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshToken\n                        \n                    \n                \n            \n            \n                \nrefreshToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resendVerificationEmail\n                        \n                    \n                \n            \n            \n                \nresendVerificationEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signup\n                        \n                    \n                \n            \n            \n                \nsignup(data: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        storeTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    storeTokens(res: LoginResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                            LoginResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyEmail\n                        \n                    \n                \n            \n            \n                \nverifyEmail(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpBaseService)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        accessToken\n                    \n                \n\n                \n                    \n                        getaccessToken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/auth.service.ts:48\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpBaseService } from './http-base.service';\nimport { UserModel } from '../models/user.model';\nimport { LoginResponse } from '../models/auth-payload.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  refreshToken(): Observable {\n      throw new Error('Method not implemented.');\n  }\n  http = inject(HttpBaseService);\n\n  signup(data: { first_name: string, last_name: string, email: string, password: string }): Observable {\n    return this.http.post('auth/sign-up', data);\n  }\n\n  login(credentials: { email: string; password: string }): Observable {\n    return this.http.post('auth/login', credentials);\n  }\n\n  refreshAccessToken(): Observable {\n    return this.http.post('auth/refresh-token', {});\n  }\n\n  verifyEmail(token: string): Observable {\n    return this.http.post('auth/verify-email', { token });\n  }\n\n  resendVerificationEmail(email: string): Observable {\n    return this.http.post('auth/resend-verification', { email });\n  }\n\n  logout(): void {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n    localStorage.removeItem('userEmail');\n  }\n\n  // logout(): Observable {\n  //   const response = this.http.post('auth/logout', { refreshToken: localStorage.getItem('refreshToken') });\n  //   localStorage.removeItem('accessToken');\n  //   localStorage.removeItem('refreshToken');\n  //   return response\n  // }\n  get accessToken(): string | null {\n    return localStorage.getItem('accessToken');\n  }\n\n  private storeTokens(res: LoginResponse): void{\n    localStorage.setItem('accessToken', res.accessToken);\n    localStorage.setItem('refreshToken', res.refreshToken);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChatMessage.html":{"url":"interfaces/ChatMessage.html","title":"interface - ChatMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChatMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/chat-message.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            sender\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sender:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ChatMessage {\n  sender: string;\n  timestamp: string;\n  message: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Chatbot.html":{"url":"components/Chatbot.html","title":"component - Chatbot","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  Chatbot\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/lesson/chatbot/chatbot.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chatbot\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                            MarkdownPipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./chatbot.html\n            \n\n\n\n            \n                styleUrl\n                ./chatbot.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                autoScrollEffect\n                            \n                            \n                                chatbotService\n                            \n                            \n                                    \n                                    Private\n                                chatContainer\n                            \n                            \n                                currentMessage\n                            \n                            \n                                    Private\n                                injector\n                            \n                            \n                                loading\n                            \n                            \n                                notify\n                            \n                            \n                                    Private\n                                viewReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                onCloseChat\n                            \n                            \n                                    Private\n                                scrollToBottom\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                chatHistory\n                            \n                            \n                                metadata\n                            \n                            \n                                subjectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                chatHistory\n                            \n                            \n                                closeChat\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/lesson/chatbot/chatbot.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        chatHistory\n                    \n                \n                \n                    \n                        Type :         ChatMessage[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/lesson/chatbot/chatbot.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        metadata\n                    \n                \n                \n                    \n                        Type :         ChatMetadata\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/lesson/chatbot/chatbot.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        subjectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/lesson/chatbot/chatbot.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        chatHistory\n                    \n                \n                \n                    \n                        Type :         ChatMessage[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/lesson/chatbot/chatbot.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        closeChat\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/lesson/chatbot/chatbot.ts:20\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/chatbot/chatbot.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCloseChat\n                        \n                    \n                \n            \n            \n                \nonCloseChat()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/chatbot/chatbot.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scrollToBottom\n                        \n                    \n                \n            \n            \n                \n                        \n                    scrollToBottom()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/chatbot/chatbot.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/chatbot/chatbot.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        autoScrollEffect\n                        \n                    \n                \n            \n                \n                    \n                        Default value : effect(\n    () => {\n      const history = this.chatHistory(); // track changes\n      // don’t try to scroll before the view exists\n      if (!this.viewReady || history.length === 0) return;\n\n      // defer until DOM has rendered the new item\n      queueMicrotask(() => this.scrollToBottom());\n    },\n    { injector: this.injector }\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/chatbot/chatbot.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chatbotService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ChatbotService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/chatbot/chatbot.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        chatContainer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('chatContainer')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/chatbot/chatbot.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/chatbot/chatbot.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        injector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Injector)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/chatbot/chatbot.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/chatbot/chatbot.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notify\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(NotificationService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/chatbot/chatbot.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        viewReady\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/chatbot/chatbot.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, input, model, output, AfterViewInit, ElementRef, ViewChild, effect, Injector, ChangeDetectorRef } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { timestamp } from 'rxjs';\nimport { ChatMessage } from '../../../core/models/chat-message.model';\nimport { ChatbotService } from '../../../core/services/chatbot.service';\nimport { ChatMetadata } from '../../../core/models/chat-metadata.model';\nimport { MarkdownPipe } from '../../../shared/pipes/markdown-pipe';\nimport { NotificationService } from '../../../core/services/notification.service';\n\n@Component({\n  selector: 'app-chatbot',\n  imports: [FormsModule, MarkdownPipe],\n  templateUrl: './chatbot.html',\n  styleUrl: './chatbot.css'\n})\nexport class Chatbot {\n  chatHistory = model([]);\n  subjectId = input()\n  metadata = input();\n  closeChat = output();\n  currentMessage: string = ''; \n  loading = false;\n  chatbotService = inject(ChatbotService)\n  notify = inject(NotificationService);\n  @ViewChild('chatContainer') private chatContainer!: ElementRef;\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  onCloseChat() {\n    this.closeChat.emit({});\n  }\n\n  private injector = inject(Injector);\n  private viewReady = false;\n\n  // Create the effect in an injection context\n  private autoScrollEffect = effect(\n    () => {\n      const history = this.chatHistory(); // track changes\n      // don’t try to scroll before the view exists\n      if (!this.viewReady || history.length === 0) return;\n\n      // defer until DOM has rendered the new item\n      queueMicrotask(() => this.scrollToBottom());\n    },\n    { injector: this.injector }\n  );\n\n  ngAfterViewInit() {\n    this.viewReady = true;\n    // initial scroll (e.g., when history is preloaded)\n    queueMicrotask(() => this.scrollToBottom());\n  }\n\n  private scrollToBottom() {\n    const el = this.chatContainer?.nativeElement;\n    if (!el) return;\n    el.scrollTop = el.scrollHeight;\n  }\n\n  sendMessage() {\n    this.loading = true;\n    if (!this.currentMessage) {\n      this.loading = false;\n      return\n    }\n\n    console.log(this.currentMessage);\n    this.chatHistory()?.push({\n      sender: \"user\",\n      message: this.currentMessage,\n      timestamp: Date().toLocaleString(),\n    })\n\n    this.chatbotService.sendMessage(this.subjectId(), this.currentMessage, this.metadata()).subscribe({\n      next: (response) => {\n        this.chatHistory.update(history => [\n          ...history,\n          {\n            sender: \"assistant\",\n            message: response.response,\n            timestamp: new Date().toLocaleString(),\n          }\n        ]);\n        this.currentMessage = '';\n        this.loading = false;\n        console.log(response);\n        this.cdr.detectChanges();\n      }, error: (err) => {\n        this.loading = false;\n        console.error(`Error sending message: ${err}`);\n        this.notify.showError('Failed to send message. Please try again.');\n        this.cdr.detectChanges();\n      },\n    });\n    \n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n\n  \n  \n    @for (chat of chatHistory(); track $index) {\n      \n      \n      \n    }\n  \n\n  \n  \n    \n\n    \n    \n      Send\n    \n  \n\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  @for (chat of chatHistory(); track $index) {                      }                        Send        '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'CheckEmail', 'selector': 'app-check-email'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'Chatbot'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChatbotService.html":{"url":"injectables/ChatbotService.html","title":"injectable - ChatbotService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ChatbotService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/chatbot.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getChatHistory\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getChatHistory\n                        \n                    \n                \n            \n            \n                \ngetChatHistory(sessionId?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/chatbot.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(sessionId?: string, message?: string, metadata?: ChatMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/chatbot.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                metadata\n                                            \n                                                            ChatMetadata\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpBaseService)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/chatbot.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpBaseService } from './http-base.service';\nimport { ChatMetadata } from '../models/chat-metadata.model';\n\n@Injectable({ providedIn: 'root' })\nexport class ChatbotService {\n  http = inject(HttpBaseService);\n\n  sendMessage(sessionId?: string, message?: string, metadata?: ChatMetadata): Observable {\n    return this.http.post(`chatbot/${sessionId}/send-message`, { message, metadata });\n  }\n\n  getChatHistory(sessionId?: string): Observable {\n    return this.http.get(`chatbot/${sessionId}/chat-history`);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckEmail.html":{"url":"components/CheckEmail.html","title":"component - CheckEmail","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  CheckEmail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/auth/check-email/check-email.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-check-email\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./check-email.html\n            \n\n\n\n            \n                styleUrl\n                ./check-email.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authService\n                            \n                            \n                                email\n                            \n                            \n                                loading\n                            \n                            \n                                notify\n                            \n                            \n                                resendTimer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resendVerificationEmail\n                            \n                            \n                                startResendTimer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/auth/check-email/check-email.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resendVerificationEmail\n                        \n                    \n                \n            \n            \n                \nresendVerificationEmail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/auth/check-email/check-email.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startResendTimer\n                        \n                    \n                \n            \n            \n                \nstartResendTimer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/auth/check-email/check-email.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/check-email/check-email.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/check-email/check-email.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/check-email/check-email.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notify\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(NotificationService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/check-email/check-email.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resendTimer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/check-email/check-email.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../../core/services/auth.service';\nimport { NotificationService } from '../../../core/services/notification.service';\n\n@Component({\n  selector: 'app-check-email',\n  imports: [],\n  templateUrl: './check-email.html',\n  styleUrl: './check-email.css'\n})\nexport class CheckEmail {\n  email: string | null = '';\n  resendTimer = 0;\n  loading = false;\n  authService = inject(AuthService)\n  notify = inject(NotificationService);\n\n  constructor(private router: Router, private cdr: ChangeDetectorRef) {\n    const nav = this.router.getCurrentNavigation();\n    this.email = nav?.extras?.state?.['email'];\n    console.log('Got email:', this.email);\n    this.startResendTimer();\n  }\n\n  startResendTimer() {\n    this.resendTimer = 60; // 60 seconds\n    const interval = setInterval(() => {\n      this.resendTimer--;\n      if (this.resendTimer  {\n        console.log('Resend verification email successful', response);\n        this.notify.showSuccess('Verification email resent! Please check your inbox.');\n        this.startResendTimer();\n        this.loading = false;\n        this.cdr.detectChanges();\n      },\n      error: (error) => {\n        console.error('Resend verification email failed', error);\n        this.notify.showError('Failed to resend verification email, Please try again.');\n        this.loading = false;\n        this.cdr.detectChanges();\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n      Maestro\n    \n    \n      \n        Verify Email\n        A verification mail has been sent to {{email}}\n      \n       0) || (loading)\"\n        (click)=\"resendVerificationEmail()\"\n      >\n        Resend mail in {{resendTimer}} seconds\n      \n    \n  \n  \n  \n    \n    \n      \n      Maestro\n    \n  \n\n\n\n  \n  Resending Email...\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Maestro                      Verify Email        A verification mail has been sent to {{email}}             0) || (loading)\"        (click)=\"resendVerificationEmail()\"      >        Resend mail in {{resendTimer}} seconds                                    Maestro          Resending Email...'\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'CheckEmail', 'selector': 'app-check-email'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'CheckEmail'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmLogout.html":{"url":"components/ConfirmLogout.html","title":"component - ConfirmLogout","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ConfirmLogout\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/confirm-logout/confirm-logout.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-logout\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./confirm-logout.html\n            \n\n\n\n            \n                styleUrl\n                ./confirm-logout.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        cancel\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/confirm-logout/confirm-logout.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        confirm\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/confirm-logout/confirm-logout.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-confirm-logout',\n  imports: [CommonModule],\n  templateUrl: './confirm-logout.html',\n  styleUrl: './confirm-logout.css'\n})\nexport class ConfirmLogout {\n  @Output() confirm = new EventEmitter();\n  @Output() cancel = new EventEmitter();\n}\n\n    \n\n    \n        \n  \n    Logout\n    Are you sure you want to log out?\n    \n      \n        Cancel\n      \n      \n        Yes, Logout\n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Logout    Are you sure you want to log out?                  Cancel                    Yes, Logout            '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'CheckEmail', 'selector': 'app-check-email'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmLogout'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Contact.html":{"url":"components/Contact.html","title":"component - Contact","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  Contact\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/contact/contact.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contact\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./contact.html\n            \n\n\n\n            \n                styleUrl\n                ./contact.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onFeaturesClick\n                            \n                            \n                                onHomeClick\n                            \n                            \n                                onPricingClick\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                navigateSection\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        navigateSection\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/contact/contact.ts:10\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onFeaturesClick\n                        \n                    \n                \n            \n            \n                \nonFeaturesClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/contact/contact.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onHomeClick\n                        \n                    \n                \n            \n            \n                \nonHomeClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/contact/contact.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPricingClick\n                        \n                    \n                \n            \n            \n                \nonPricingClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/contact/contact.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  imports: [],\n  templateUrl: './contact.html',\n  styleUrl: './contact.css'\n})\nexport class Contact {\n  @Output() navigateSection = new EventEmitter();\n\n  onHomeClick() {\n    this.navigateSection.emit('top');\n  }\n\n  onFeaturesClick() {\n    this.navigateSection.emit('features');\n  }\n\n  onPricingClick() {\n    this.navigateSection.emit('pricing');\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n    \n    \n      \n      \n        \n          \n            \n          \n\n          \n            Maestro\n          \n        \n        \n          Your Personalized Learning Companion\n        \n      \n      \n      \n        \n          Quick Links\n          \n            \n              Home\n            \n            \n              Features\n            \n            \n              Pricing\n            \n          \n        \n\n        \n          \n            Contact Information\n          \n          \n            \n            maestroaidevs@gmail.com\n          \n        \n      \n    \n\n    \n    \n\n    \n    \n      \n        &copy; 2025 Maestro. All rights reserved.\n      \n      \n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                      Maestro                                    Your Personalized Learning Companion                                            Quick Links                                    Home                                      Features                                      Pricing                                                            Contact Information                                            maestroaidevs@gmail.com                                                          © 2025 Maestro. All rights reserved.                                                                                                            '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'CheckEmail', 'selector': 'app-check-email'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'Contact'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreationStepTab.html":{"url":"components/CreationStepTab.html","title":"component - CreationStepTab","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  CreationStepTab\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/subject-create/creation-step-tab/creation-step-tab.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-creation-step-tab\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./creation-step-tab.html\n            \n\n\n\n            \n                styleUrl\n                ./creation-step-tab.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bgColour\n                            \n                            \n                                textColour\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                icon\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/subject-create/creation-step-tab/creation-step-tab.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/subject-create/creation-step-tab/creation-step-tab.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/subject-create/creation-step-tab/creation-step-tab.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/subject-create/creation-step-tab/creation-step-tab.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bgColour\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/creation-step-tab/creation-step-tab.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        textColour\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/creation-step-tab/creation-step-tab.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule, NgClass } from '@angular/common';\nimport { Component, input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-creation-step-tab',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './creation-step-tab.html',\n  styleUrl: './creation-step-tab.css'\n})\nexport class CreationStepTab implements OnInit {\n  text = input.required();\n  icon = input(null);\n  active = input();\n\n  bgColour = '';\n  textColour = '';\n\n  ngOnInit () {\n    if (this.active()) {\n      this.bgColour = 'bg-prussian-blue-800';\n      this.textColour = 'text-prussian-blue-900';\n    } else {\n      this.bgColour = 'bg-prussian-blue-250';\n      this.textColour = 'text-prussian-blue-500';\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n    {{ text() }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ text() }}  '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'CheckEmail', 'selector': 'app-check-email'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreationStepTab'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExamModel.html":{"url":"interfaces/ExamModel.html","title":"interface - ExamModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExamModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/exam.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            questions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            score\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questions:         QuestionModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         QuestionModel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        score\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        score:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { QuestionModel } from \"./question.model\";\n\nexport interface ExamModel {\n  id: string;\n  score?: number;\n  questions: QuestionModel[];\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExamSettings.html":{"url":"classes/ExamSettings.html","title":"class - ExamSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExamSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/subject-create/question-settings/question-settings.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                include\n                            \n                            \n                                preference\n                            \n                            \n                                questionTypes\n                            \n                            \n                                timeLimit\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        include\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/question-settings/question-settings.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preference\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/question-settings/question-settings.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questionTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/question-settings/question-settings.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeLimit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/question-settings/question-settings.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ChangeDetectorRef, Component, inject } from '@angular/core';\nimport { Header } from '../../../shared/components/header/header';\nimport { CreationStepTab } from '../creation-step-tab/creation-step-tab';\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { SubjectsService } from '../../../core/services/subjects.service';\nimport { forkJoin, Observable } from 'rxjs';\nimport { NotificationService } from '../../../core/services/notification.service'; //  = []\n  preference: string = ''\n}\nclass ExamSettings {\n  include: boolean = false\n  questionTypes: Array = []\n  preference: string = ''\n  timeLimit: any = null\n}\n\n@Component({\n  selector: 'app-question-settings',\n  imports: [Header, CreationStepTab, FormsModule],\n  templateUrl: './question-settings.html',\n  styleUrl: './question-settings.css'\n})\nexport class QuestionSettings {\n  exerciseSettings = new ExerciseSettings();\n  examSettings = new ExamSettings();\n  loading = false;\n  subjectId = '';\n  subjectService = inject(SubjectsService)\n  notify = inject(NotificationService); //  qt !== event.target.value);\n    }\n  }\n\n  toggleExamType(event: any) {\n    if (event.target.checked) {\n      this.examSettings.questionTypes.push(event.target.value);\n    } else {\n      this.examSettings.questionTypes = this.examSettings.questionTypes.filter((qt) => qt !== event.target.value);\n    }\n  }\n\n  onSubmit() {\n    this.loading = true;\n    let exerciseValidated = false;\n    let examValidated = false;\n  \n    // Validate exercise fields\n    if (this.exerciseSettings.include) {\n      if (this.exerciseSettings.questionTypes.length == 0) {\n        this.notify.showError(\"Choose at least one question type for the exercises\");\n        this.loading = false;\n        return;\n      }\n      if (!this.exerciseSettings.preference) {\n        this.notify.showError(\"Exercise preference cannot be empty\");\n        this.loading = false;\n        return;\n      }\n    }\n    exerciseValidated = true;\n  \n    // Validate exam fields\n    if (this.examSettings.include) {\n      if (this.examSettings.questionTypes.length == 0) {\n        this.notify.showError(\"Choose at least one question type for the exam\");\n        this.loading = false;\n        return;\n      }\n      if (!this.examSettings.preference) {\n        this.notify.showError(\"Exam preference cannot be empty\");\n        this.loading = false;\n        return;\n      }\n    }\n    examValidated = true;\n  \n    // Collect all requests to run in parallel\n    const requests: Observable[] = [];\n  \n    if (this.exerciseSettings.include && exerciseValidated) {\n      requests.push(\n        this.subjectService.generateExercise(\n          this.subjectId,\n          this.exerciseSettings.preference,\n          this.exerciseSettings.questionTypes\n        )\n      );\n    }\n  \n    if (this.examSettings.include && examValidated) {\n      requests.push(\n        this.subjectService.generateExam(\n          this.subjectId,\n          this.examSettings.preference,\n          this.examSettings.questionTypes\n        )\n      );\n    }\n  \n    // If there are requests, wait for them to finish before updating status\n    if (requests.length > 0) {\n      forkJoin(requests).subscribe({\n        next: (responses) => {\n          console.log(\"Generation responses:\", responses);\n          this.notify.showSuccess(\"Sucessfully generated practice questions.\")\n          this.subjectService.updateSessionStatus(this.subjectId, \"In Progress\").subscribe({\n            next: () => {\n              console.log(\"Session status updated\");\n              this.router.navigate([`/lesson/${this.subjectId}`]);\n            },\n            error: (err) => {\n              console.error(\"Failed to update session status\", err);\n              this.router.navigate([`/lesson/${this.subjectId}`]);\n            },\n            complete: () => (this.loading = false),\n          });\n        },\n        error: (err) => {\n          console.error(\"Error during generation:\", err);\n          this.loading = false;\n          this.cdr.detectChanges();\n        }\n      });\n    } else {\n      // If no requests to generate, just update status directly\n      this.subjectService.updateSessionStatus(this.subjectId, \"In Progress\").subscribe({\n        next: () => {\n          console.log(\"Session status updated (no generation needed)\");\n          this.router.navigate([`/lesson/${this.subjectId}`]);\n        },\n        error: (err) => {\n          console.error(\"Failed to update session status\", err);\n          this.router.navigate([`/lesson/${this.subjectId}`]);\n        },\n        complete: () => (this.loading = false),\n      });\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExerciseModel.html":{"url":"interfaces/ExerciseModel.html","title":"interface - ExerciseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExerciseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/exercise.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            questions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            score\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questions:         QuestionModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         QuestionModel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        score\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        score:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { QuestionModel } from \"./question.model\";\n\nexport interface ExerciseModel {\n  id: string;\n  score?: number;\n  questions: QuestionModel[];\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExerciseService.html":{"url":"injectables/ExerciseService.html","title":"injectable - ExerciseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ExerciseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/exercise.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPastAnswers\n                            \n                            \n                                submitAnswers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/exercise.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPastAnswers\n                        \n                    \n                \n            \n            \n                \ngetPastAnswers(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/exercise.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitAnswers\n                        \n                    \n                \n            \n            \n                \nsubmitAnswers(id: string, payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/exercise.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.apiUrl}/exercises`\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/exercise.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AnswerModel } from '../models/answer.model';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({ providedIn: 'root' })\nexport class ExerciseService {\n  private apiUrl = `${environment.apiUrl}/exercises`;\n\n  constructor(private http: HttpClient) {}\n\n  getPastAnswers(id: string): Observable {\n    return this.http.get(`${this.apiUrl}/${id}/answers`);\n  }\n\n  submitAnswers(id: string, payload: any): Observable {\n    return this.http.post(`${this.apiUrl}/${id}/submit`, payload);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExerciseSettings.html":{"url":"classes/ExerciseSettings.html","title":"class - ExerciseSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExerciseSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/subject-create/question-settings/question-settings.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                include\n                            \n                            \n                                preference\n                            \n                            \n                                questionTypes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        include\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/question-settings/question-settings.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preference\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/question-settings/question-settings.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questionTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/question-settings/question-settings.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ChangeDetectorRef, Component, inject } from '@angular/core';\nimport { Header } from '../../../shared/components/header/header';\nimport { CreationStepTab } from '../creation-step-tab/creation-step-tab';\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { SubjectsService } from '../../../core/services/subjects.service';\nimport { forkJoin, Observable } from 'rxjs';\nimport { NotificationService } from '../../../core/services/notification.service'; //  = []\n  preference: string = ''\n}\nclass ExamSettings {\n  include: boolean = false\n  questionTypes: Array = []\n  preference: string = ''\n  timeLimit: any = null\n}\n\n@Component({\n  selector: 'app-question-settings',\n  imports: [Header, CreationStepTab, FormsModule],\n  templateUrl: './question-settings.html',\n  styleUrl: './question-settings.css'\n})\nexport class QuestionSettings {\n  exerciseSettings = new ExerciseSettings();\n  examSettings = new ExamSettings();\n  loading = false;\n  subjectId = '';\n  subjectService = inject(SubjectsService)\n  notify = inject(NotificationService); //  qt !== event.target.value);\n    }\n  }\n\n  toggleExamType(event: any) {\n    if (event.target.checked) {\n      this.examSettings.questionTypes.push(event.target.value);\n    } else {\n      this.examSettings.questionTypes = this.examSettings.questionTypes.filter((qt) => qt !== event.target.value);\n    }\n  }\n\n  onSubmit() {\n    this.loading = true;\n    let exerciseValidated = false;\n    let examValidated = false;\n  \n    // Validate exercise fields\n    if (this.exerciseSettings.include) {\n      if (this.exerciseSettings.questionTypes.length == 0) {\n        this.notify.showError(\"Choose at least one question type for the exercises\");\n        this.loading = false;\n        return;\n      }\n      if (!this.exerciseSettings.preference) {\n        this.notify.showError(\"Exercise preference cannot be empty\");\n        this.loading = false;\n        return;\n      }\n    }\n    exerciseValidated = true;\n  \n    // Validate exam fields\n    if (this.examSettings.include) {\n      if (this.examSettings.questionTypes.length == 0) {\n        this.notify.showError(\"Choose at least one question type for the exam\");\n        this.loading = false;\n        return;\n      }\n      if (!this.examSettings.preference) {\n        this.notify.showError(\"Exam preference cannot be empty\");\n        this.loading = false;\n        return;\n      }\n    }\n    examValidated = true;\n  \n    // Collect all requests to run in parallel\n    const requests: Observable[] = [];\n  \n    if (this.exerciseSettings.include && exerciseValidated) {\n      requests.push(\n        this.subjectService.generateExercise(\n          this.subjectId,\n          this.exerciseSettings.preference,\n          this.exerciseSettings.questionTypes\n        )\n      );\n    }\n  \n    if (this.examSettings.include && examValidated) {\n      requests.push(\n        this.subjectService.generateExam(\n          this.subjectId,\n          this.examSettings.preference,\n          this.examSettings.questionTypes\n        )\n      );\n    }\n  \n    // If there are requests, wait for them to finish before updating status\n    if (requests.length > 0) {\n      forkJoin(requests).subscribe({\n        next: (responses) => {\n          console.log(\"Generation responses:\", responses);\n          this.notify.showSuccess(\"Sucessfully generated practice questions.\")\n          this.subjectService.updateSessionStatus(this.subjectId, \"In Progress\").subscribe({\n            next: () => {\n              console.log(\"Session status updated\");\n              this.router.navigate([`/lesson/${this.subjectId}`]);\n            },\n            error: (err) => {\n              console.error(\"Failed to update session status\", err);\n              this.router.navigate([`/lesson/${this.subjectId}`]);\n            },\n            complete: () => (this.loading = false),\n          });\n        },\n        error: (err) => {\n          console.error(\"Error during generation:\", err);\n          this.loading = false;\n          this.cdr.detectChanges();\n        }\n      });\n    } else {\n      // If no requests to generate, just update status directly\n      this.subjectService.updateSessionStatus(this.subjectId, \"In Progress\").subscribe({\n        next: () => {\n          console.log(\"Session status updated (no generation needed)\");\n          this.router.navigate([`/lesson/${this.subjectId}`]);\n        },\n        error: (err) => {\n          console.error(\"Failed to update session status\", err);\n          this.router.navigate([`/lesson/${this.subjectId}`]);\n        },\n        complete: () => (this.loading = false),\n      });\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Features.html":{"url":"components/Features.html","title":"component - Features","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  Features\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/features/features.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-features\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./features.html\n            \n\n\n\n            \n                styleUrl\n                ./features.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-features',\n  imports: [],\n  templateUrl: './features.html',\n  styleUrl: './features.css'\n})\nexport class Features {\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        Features\n      \n      \n      \n        Experience Smarter Learning, Designed for You\n      \n    \n\n    \n\n    \n      \n        \n          \n        \n        \n          \n          \n            Easy Material Comprehension\n          \n          \n          \n            Upload your PDFs and DOCX files, and let Maestro turn complex topics\n            into easy lessons suited to your learning style.\n          \n        \n      \n      \n      \n        \n          \n        \n        \n          \n            Tailored Learning Paths\n          \n          \n            Tell Maestro your learning style and your preferred complexity. Get\n            content that resonates.\n          \n        \n      \n      \n      \n        \n          \n        \n        \n          \n            Engaging Summaries & Notes\n          \n          \n            Forget endless highlighting. Maestro creates interactive summaries\n            and notes to help you grasp key concepts quickly.\n          \n        \n      \n      \n      \n        \n          \n        \n        \n          \n            Practice & Exam Options\n          \n          \n            Challenge yourself with AI-driven quizzes and exams that adapt to\n            your progress, pinpointing areas for improvement.\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Features                          Experience Smarter Learning, Designed for You                                                                                          Easy Material Comprehension                                          Upload your PDFs and DOCX files, and let Maestro turn complex topics            into easy lessons suited to your learning style.                                                                                            Tailored Learning Paths                                Tell Maestro your learning style and your preferred complexity. Get            content that resonates.                                                                                            Engaging Summaries & Notes                                Forget endless highlighting. Maestro creates interactive summaries            and notes to help you grasp key concepts quickly.                                                                                            Practice & Exam Options                                Challenge yourself with AI-driven quizzes and exams that adapt to            your progress, pinpointing areas for improvement.                              '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'CheckEmail', 'selector': 'app-check-email'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'Features'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/FileTypeDirective.html":{"url":"directives/FileTypeDirective.html","title":"directive - FileTypeDirective","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Directives\n  FileTypeDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/file-type.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appFileType]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                onChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appFileType\n                            \n                            \n                                maxBytes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                fileError\n                            \n                            \n                                fileOk\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        appFileType\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/file-type.directive.ts:11\n                            \n                        \n                \n                    \n                        Allowed MIME types, e.g., ['application/pdf','image/png']\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        maxBytes\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10 * 1024 * 1024\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/file-type.directive.ts:13\n                            \n                        \n                \n                    \n                        Max size in bytes (default 10MB)\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        fileError\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/file-type.directive.ts:17\n                            \n                        \n                \n                    \n                        Emits error reason when rejected\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fileOk\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/file-type.directive.ts:15\n                            \n                        \n                \n                    \n                        Emits file when ok; null when rejected\n\n                    \n                \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            change\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/file-type.directive.ts:20\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onChange\n                        \n                    \n                \n            \n            \n                \n                        \n                    onChange(ev: Event)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('change', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/directives/file-type.directive.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ev\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, EventEmitter, HostListener, Input, Output } from '@angular/core';\nimport { isAllowedFile } from '../utils/file-validation.util';\n\n@Directive({\n  selector: '[appFileType]',\n  standalone: true\n})\nexport class FileTypeDirective {\n  /** Allowed MIME types, e.g., ['application/pdf','image/png'] */\n  @Input() appFileType: string[] = [];\n  /** Max size in bytes (default 10MB) */\n  @Input() maxBytes = 10 * 1024 * 1024;\n  /** Emits file when ok; null when rejected */\n  @Output() fileOk = new EventEmitter();\n  /** Emits error reason when rejected */\n  @Output() fileError = new EventEmitter();\n\n  @HostListener('change', ['$event'])\n  onChange(ev: Event) {\n    const input = ev.target as HTMLInputElement;\n    const f = input.files?.[0];\n    if (!f) return;\n    const res = isAllowedFile(f, this.appFileType, this.maxBytes);\n    if (res.ok) {\n      this.fileOk.emit(f);\n    } else {\n      this.fileError.emit(res.reason || 'Invalid file.');\n      this.fileOk.emit(null);\n      input.value = ''; // reset selection\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Header.html":{"url":"components/Header.html","title":"component - Header","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  Header\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/header/header.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterLink\n                                ConfirmLogout\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./header.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                showAccount\n                            \n                            \n                                showLogout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelLogout\n                            \n                            \n                                confirmLogout\n                            \n                            \n                                openLogout\n                            \n                            \n                                popout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/header/header.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelLogout\n                        \n                    \n                \n            \n            \n                \ncancelLogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/header/header.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmLogout\n                        \n                    \n                \n            \n            \n                \nconfirmLogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/header/header.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openLogout\n                        \n                    \n                \n            \n            \n                \nopenLogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/header/header.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        popout\n                        \n                    \n                \n            \n            \n                \npopout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/header/header.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(localStorage.getItem(\"userEmail\"))\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/header/header.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAccount\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/header/header.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showLogout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/header/header.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, signal } from '@angular/core';\nimport { RouterLink, Router } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { ConfirmLogout } from '../confirm-logout/confirm-logout';\nimport { AuthService } from '../../../core/services/auth.service';\n\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [CommonModule, RouterLink, ConfirmLogout],\n  templateUrl: './header.html'\n})\nexport class Header {\n  showLogout = signal(false);\n  showAccount = signal(false);\n  email = signal(localStorage.getItem(\"userEmail\"));\n\n  constructor(private auth: AuthService, private router: Router) {}\n\n  openLogout() { this.showLogout.set(true); }\n  cancelLogout() { this.showLogout.set(false); }\n  confirmLogout() {\n    this.auth.logout();\n    this.showLogout.set(false);\n    this.router.navigateByUrl('/');\n  }\n\n  popout() {\n    this.showAccount.set(!this.showAccount());\n  }\n}\n    \n\n    \n        \n  \n  \n    \n    Maestro\n  \n\n  \n  \n    \n  \n  \n    \n  \n\n\n\n@if (showAccount()) {\n  \n    \n      \n      \n        Account\n        {{email()}}\n      \n    \n    \n      \n      Logout\n    \n  \n}\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Maestro                    @if (showAccount()) {                          Account        {{email()}}                          Logout      }'\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'CheckEmail', 'selector': 'app-check-email'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'Header'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Home.html":{"url":"components/Home.html","title":"component - Home","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  Home\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home/home.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n            \n                imports\n                \n                                Landing\n                                Features\n                                Pricing\n                                Contact\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.html\n            \n\n\n\n            \n                styleUrl\n                ./home.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                scrollTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, vscroller: ViewportScroller)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/home/home.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        vscroller\n                                                  \n                                                        \n                                                                    ViewportScroller\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home/home.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scrollTo\n                        \n                    \n                \n            \n            \n                \nscrollTo(section: \"top\" | \"features\" | \"pricing\" | \"contact\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home/home.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                        \"top\" | \"features\" | \"pricing\" | \"contact\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ViewportScroller } from '@angular/common';\nimport { Landing } from '../landing/landing';\nimport { Features } from '../features/features';\nimport { Pricing } from '../pricing/pricing';\nimport { Contact } from '../contact/contact';\n\n@Component({\n  selector: 'app-home',\n  imports: [Landing, Features, Pricing, Contact],\n  templateUrl: './home.html',\n  styleUrl: './home.css'\n})\nexport class Home {\n  constructor(\n    private router: Router,\n    private vscroller: ViewportScroller\n  ) {}\n\n  ngOnInit(): void {\n    // this.router.navigate(['/login']);\n  }\n\n  scrollTo(section: 'top' | 'features' | 'pricing' | 'contact' ) {\n    if (section === 'top') {\n      this.vscroller.scrollToPosition([0, 0]);\n    } else {\n      this.vscroller.scrollToAnchor(section);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'CheckEmail', 'selector': 'app-check-email'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'Home'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpBaseService.html":{"url":"injectables/HttpBaseService.html","title":"injectable - HttpBaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  HttpBaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/http-base.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                apiUrl\n                            \n                            \n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                    Private\n                                getHeaders\n                            \n                            \n                                post\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(endpoint: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http-base.service.ts:33\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(endpoint: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http-base.service.ts:21\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getHeaders\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHeaders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http-base.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         HttpHeaders\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        post\n                        \n                    \n                \n            \n            \n                \npost(endpoint: string, body: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http-base.service.ts:25\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(endpoint: string, body: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http-base.service.ts:29\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/http-base.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/http-base.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpBaseService {\n  private readonly apiUrl = environment.apiUrl;\n  http = inject(HttpClient);\n\n  private getHeaders(): HttpHeaders {\n    const token = localStorage.getItem('accessToken');\n    return new HttpHeaders({\n      Authorization: token ? `Bearer ${token}` : '',\n    });\n  }\n\n  get(endpoint: string): Observable {\n    return this.http.get(`${this.apiUrl}/${endpoint}`, { headers: this.getHeaders() });\n  }\n\n  post(endpoint: string, body: any): Observable {\n    return this.http.post(`${this.apiUrl}/${endpoint}`, body, { headers: this.getHeaders() });\n  }\n\n  put(endpoint: string, body: any): Observable {\n    return this.http.put(`${this.apiUrl}/${endpoint}`, body, { headers: this.getHeaders() });\n  }\n\n  delete(endpoint: string): Observable {\n    return this.http.delete(`${this.apiUrl}/${endpoint}`, { headers: this.getHeaders() });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Landing.html":{"url":"components/Landing.html","title":"component - Landing","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  Landing\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/landing/landing.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-landing\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./landing.html\n            \n\n\n\n            \n                styleUrl\n                ./landing.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onContactClick\n                            \n                            \n                                onFeaturesClick\n                            \n                            \n                                onGetStartedClick\n                            \n                            \n                                onHomeClick\n                            \n                            \n                                onPricingClick\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                navigateSection\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/landing/landing.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        navigateSection\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/landing/landing.ts:12\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onContactClick\n                        \n                    \n                \n            \n            \n                \nonContactClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/landing/landing.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFeaturesClick\n                        \n                    \n                \n            \n            \n                \nonFeaturesClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/landing/landing.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onGetStartedClick\n                        \n                    \n                \n            \n            \n                \nonGetStartedClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/landing/landing.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onHomeClick\n                        \n                    \n                \n            \n            \n                \nonHomeClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/landing/landing.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPricingClick\n                        \n                    \n                \n            \n            \n                \nonPricingClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/landing/landing.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Output, output } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-landing',\n  imports: [CommonModule],\n  templateUrl: './landing.html',\n  styleUrl: './landing.css'\n})\nexport class Landing {\n  @Output() navigateSection = new EventEmitter();\n\n  constructor(private router: Router) {}\n\n  onHomeClick() {\n    this.navigateSection.emit('top');\n  }\n\n  onFeaturesClick() {\n    this.navigateSection.emit('features');\n  }\n\n  onPricingClick() {\n    this.navigateSection.emit('pricing');\n  }\n\n  onContactClick() {\n    this.navigateSection.emit('contact');\n  }\n\n  onGetStartedClick() {\n    this.router.navigate(['/login']);\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n\n  \n  \n    \n      \n        \n        Maestro\n      \n\n      \n      \n        Home\n        Features\n        Pricing\n        Contact us\n      \n\n      \n        Try Maestro\n      \n    \n\n    \n    \n      \n        \n          Unlock Your Learning Potential with Maestro\n        \n        \n          Upload your materials, customize how you learn, and get AI-crafted\n          lessons, quizzes, and study plans tailored just for you.\n        \n        \n          Get Started\n        \n      \n    \n\n    \n    \n      \n        Be among the first to shape the future of learning.\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Maestro                          Home        Features        Pricing        Contact us                    Try Maestro                                          Unlock Your Learning Potential with Maestro                          Upload your materials, customize how you learn, and get AI-crafted          lessons, quizzes, and study plans tailored just for you.                          Get Started                                        Be among the first to shape the future of learning.            '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'CheckEmail', 'selector': 'app-check-email'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'Landing'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LessonPage.html":{"url":"components/LessonPage.html","title":"component - LessonPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  LessonPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/lesson/lesson-page/lesson-page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-lesson-page\n            \n\n\n            \n                imports\n                \n                                Header\n                                Sidebar\n                                Chatbot\n                                Subtopic\n                                Practice\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./lesson-page.html\n            \n\n\n\n            \n                styleUrl\n                ./lesson-page.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chatbotService\n                            \n                            \n                                chatHistory\n                            \n                            \n                                chatMetadata\n                            \n                            \n                                chatOpen\n                            \n                            \n                                currentView\n                            \n                            \n                                lessonService\n                            \n                            \n                                subjectContent\n                            \n                            \n                                subjectId\n                            \n                            \n                                subjectService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                capitalizeFirstLetter\n                            \n                            \n                                changeSubtopic\n                            \n                            \n                                checkForTopicCompleteness\n                            \n                            \n                                getTopicDataFromExercise\n                            \n                            \n                                getTopicDataFromSubtopic\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleChatPopup\n                            \n                            \n                                updateChatMetadata\n                            \n                            \n                                updatecurrentView\n                            \n                            \n                                updateProgress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        capitalizeFirstLetter\n                        \n                    \n                \n            \n            \n                \ncapitalizeFirstLetter(str: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:464\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeSubtopic\n                        \n                    \n                \n            \n            \n                \nchangeSubtopic(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:409\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkForTopicCompleteness\n                        \n                    \n                \n            \n            \n                \ncheckForTopicCompleteness(topic_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:392\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                topic_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTopicDataFromExercise\n                        \n                    \n                \n            \n            \n                \ngetTopicDataFromExercise()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:386\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { id: any; title: any; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTopicDataFromSubtopic\n                        \n                    \n                \n            \n            \n                \ngetTopicDataFromSubtopic()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:380\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { id: any; title: any; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:185\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleChatPopup\n                        \n                    \n                \n            \n            \n                \ntoggleChatPopup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:459\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateChatMetadata\n                        \n                    \n                \n            \n            \n                \nupdateChatMetadata(question_event?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:428\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question_event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatecurrentView\n                        \n                    \n                \n            \n            \n                \nupdatecurrentView(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:292\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProgress\n                        \n                    \n                \n            \n            \n                \nupdateProgress()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:337\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chatbotService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ChatbotService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chatHistory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChatMessage[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chatMetadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChatMetadata\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chatOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentView\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n    type: 'subtopic', // 'subtopic', 'exercise', or 'exam'\n    id: '', // ID of the current subtopic, exercise question, or exam question\n    content: {} // Content to display based on the current view\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lessonService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LessonService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subjectContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subjectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subjectService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SubjectsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, inject, OnInit, signal } from '@angular/core';\nimport { Header } from '../../../shared/components/header/header';\nimport { Sidebar } from '../sidebar/sidebar';\nimport { Chatbot } from '../chatbot/chatbot';\nimport { Subtopic } from '../subtopic/subtopic';\nimport { Practice } from \"../practice/practice\";\nimport { SubjectsService } from '../../../core/services/subjects.service';\nimport { LessonService } from '../../../core/services/lesson.service';\nimport { ChatMetadata } from '../../../core/models/chat-metadata.model';\nimport { ChatbotService } from '../../../core/services/chatbot.service';\nimport { forkJoin, map, switchMap } from 'rxjs';\nimport { ChatMessage } from '../../../core/models/chat-message.model';\n\n@Component({\n  selector: 'app-lesson-page',\n  imports: [Header, Sidebar, Chatbot, Subtopic, Practice],\n  templateUrl: './lesson-page.html',\n  styleUrl: './lesson-page.css'\n})\nexport class LessonPage implements OnInit {\n  subjectId: string;\n  chatMetadata: ChatMetadata = {};\n  subjectContent: any = {};\n  currentView: any = {\n    type: 'subtopic', // 'subtopic', 'exercise', or 'exam'\n    id: '', // ID of the current subtopic, exercise question, or exam question\n    content: {} // Content to display based on the current view\n  }\n  chatHistory: ChatMessage[] = [];\n  chatOpen = false;\n  subjectService = inject(SubjectsService)\n  lessonService = inject(LessonService)\n  chatbotService = inject(ChatbotService)\n\n  // subjectContent: any = {\n  //   subject_name: 'Geography',\n  //   topics: [\n  //     {\n  //       expanded: false,\n  //       id: 't1',\n  //       title: 'Intro to Geography',\n  //       completed: false,\n  //       subtopics: [\n  //         {\n  //           id: 's1-t1',\n  //           title: 'Geography Basics',\n  //           content: 'Geography is the study of places and the relationships between people and their environments.',\n  //           read: true\n  //         },\n  //         {\n  //           id: 's2-t1',\n  //           title: 'World Capitals',\n  //           content: 'A capital city is the most important city in a country, often where the government is located.',\n  //           read: false\n  //         },\n  //         {\n  //           id: 's3-t1',\n  //           title: 'Physical Geography',\n  //           content: 'Physical geography focuses on the natural environment, including landforms, climates, and ecosystems.',\n  //           read: false\n  //         }\n  //       ],\n  //       exercise: {\n  //         id: 'et1',\n  //         score: null,\n  //         questions: [\n  //           {\n  //             question_id: 'q1-et1',\n  //             question_text: 'What is the capital of France?',\n  //             question_type: 'multiple choice',\n  //             options: [\n  //               { option_id: '1', option_text: 'Paris', is_correct: true, selected: false },\n  //               { option_id: '2', option_text: 'London', is_correct: false, selected: false },\n  //               { option_id: '3', option_text: 'Berlin', is_correct: false, selected: false },\n  //               { option_id: '4', option_text: 'Madrid', is_correct: false, selected: false }\n  //             ]\n  //           },\n  //           {\n  //             question_id: 'q2-et1',\n  //             question_text: 'Which of these are oceans on earth?',\n  //             question_type: 'multiple selection',\n  //             options: [\n  //               { option_id: '1', option_text: 'Atlantic Ocean', is_correct: true, selected: false },\n  //               { option_id: '2', option_text: 'Pacific Ocean', is_correct: true, selected: false },\n  //               { option_id: '3', option_text: 'Amazon River', is_correct: false, selected: false },\n  //               { option_id: '4', option_text: 'Nile River', is_correct: false, selected: false }\n  //             ]\n  //           },\n  //           {\n  //             question_id: 'q3-et1',\n  //             question_text: 'Describe the importance of studying geography in understanding global issues.',\n  //             question_type: 'essay',\n  //           }\n  //         ]\n  //       }\n  //     },\n  //     {\n  //       expanded: false,\n  //       id: 't2',\n  //       title: 'Physical Geography',\n  //       completed: true,\n  //       subtopics: [\n  //         {\n  //           id: 's1-t2',\n  //           title: 'Climate Zones',\n  //           content: 'Climate zones are regions of the world with distinct weather patterns and temperatures.',\n  //           read: true\n  //         },\n  //         {\n  //           id: 's2-t2',\n  //           title: 'Human Geography',\n  //           content: 'Human geography studies how humans interact with the environment and how cultures vary across regions.',\n  //           read: true\n  //         }\n  //       ],\n  //       exercise: {\n  //         id: 'et2',\n  //         score: 2,\n  //         questions: [\n  //           {\n  //             question_id: 'q1-et2',\n  //             question_text: 'What are the main climate zones of the world?',\n  //             question_type: 'multiple selection',\n  //             options: [\n  //               { option_id: '1', option_text: 'Tropical', is_correct: true, selected: true },\n  //               { option_id: '2', option_text: 'Arctic', is_correct: true, selected: true },\n  //               { option_id: '3', option_text: 'Desert', is_correct: true, selected: true },\n  //               { option_id: '4', option_text: 'Mountainous', is_correct: false, selected: false }\n  //             ]\n  //           },\n  //           {\n  //             question_id: 'q2-et2',\n  //             question_text: 'Explain how human activities impact the environment.',\n  //             question_type: 'essay',\n  //             answer: 'Human activities such as deforestation, pollution, and urbanization significantly impact the environment by altering ecosystems, contributing to climate change, and reducing biodiversity.'\n  //           }\n  //         ]\n  //       }\n  //     }\n  //   ],\n  //   exam: {\n  //     id: 'e1',\n  //     score: null,\n  //     questions: [\n  //       {\n  //         question_id: 'q1-e1',\n  //         question_text: 'What is the largest continent on Earth?',\n  //         question_type: 'multiple choice',\n  //         options: [\n  //           { option_id: '1', option_text: 'Asia', is_correct: true, selected: false },\n  //           { option_id: '2', option_text: 'Africa', is_correct: false, selected: false },\n  //           { option_id: '3', option_text: 'North America', is_correct: false, selected: false },\n  //           { option_id: '4', option_text: 'Europe', is_correct: false, selected: false }\n  //         ]\n  //       },\n  //       {\n  //         question_id: 'q2-e1',\n  //         question_text: 'Describe the water cycle and its significance in geography.',\n  //         question_type: 'essay',\n  //         answer: null\n  //       }\n  //     ]\n  //   }\n  // }\n  // chatHistory = [\n  //   {\n  //     sender: \"user\",\n  //     message: \"Hello\",\n  //     timestamp: \"\"\n  //   },\n  //   {\n  //     sender: \"assistant\",\n  //     message: \"Hi there, how can I help you?\",\n  //     timestamp: \"\"\n  //   },\n  // ]\n\n  constructor(private cdr: ChangeDetectorRef) {\n    // Extract subjectId from the route parameters\n    const url = window.location.pathname;\n    const parts = url.split('/');\n    this.subjectId = parts[parts.length - 1]; // Assuming the last part is the subjectId\n  }\n\n  ngOnInit(): void {\n    // Fetch chat history\n    this.chatbotService.getChatHistory(this.subjectId).subscribe({\n      next: (response) => {\n        this.chatHistory = response.history;\n      }, error(err) {\n        console.error(`Error fetching chat history ${err}`)\n      },\n    });\n\n\n    // 1. Fetch all subjects first\n    this.subjectService.getAllSubjects().pipe(\n      map((res: any) => res.sessions || []), // unwrap sessions array\n      map((subjects: any[]) => subjects.find(s => s.id === this.subjectId)), // pick current subject\n      switchMap((subject) => {\n        if (!subject) throw new Error('Subject not found');\n        \n        this.subjectContent = {\n          subject_name: subject.name,\n          topics: [],\n          exam: null\n        };\n  \n        // 2. Fetch topics for this subject\n        return this.lessonService.getAllTopics(this.subjectId);\n      }),\n      switchMap((res: any) => {\n        const topicsResponse = res.topics || []; // unwrap topics array\n  \n        // Shape topics\n        const topics = topicsResponse.filter((topic: any) => topic.selected).map((topic: any) => ({\n          expanded: false,\n          id: topic.id,\n          title: topic.title,\n          completed: topic.completed,\n          subtopics: [],\n          exercise: null\n        }));\n        this.subjectContent.topics = topics;\n  \n        // 3. For each topic fetch subtopics + exercise in parallel\n        const topicRequests = topics.map((topic: any) =>\n          forkJoin({\n            subtopics: this.lessonService.getAllSubtopics(topic.id).pipe(\n              map((r: any) => r.subtopics || [])\n            ),\n            exercise: this.lessonService.getExercise(topic.id).pipe(\n              map((r: any) => r.exercise || null)\n            )\n          }).pipe(\n            map((res) => {\n              topic.subtopics = res.subtopics;\n              topic.exercise = res.exercise;\n              console.log(topic.exercise)\n              return topic;\n            })\n          )\n        );\n  \n        return forkJoin(topicRequests); // wait for all topics to finish loading\n      }),\n      switchMap(() => {\n        // 4. Finally fetch exam\n        return this.lessonService.getExam(this.subjectId).pipe(\n          map((res: any) => {\n            this.subjectContent.exam = res.exam || null; // unwrap exam\n            return res.exam;\n          })\n        );\n      })\n    ).subscribe({\n      next: () => {\n        // ✅ Everything loaded, now set initial view\n        for (let topic of this.subjectContent.topics) {\n          if (!topic.completed) {\n            const unreadSubtopic = topic.subtopics.find((st: any) => !st.read);\n            if (unreadSubtopic) {\n              this.updatecurrentView({ id: unreadSubtopic.id, type: 'subtopic' });\n              break;\n            } else if (topic.exercise && topic.exercise.score === null) {\n              this.updatecurrentView({ id: topic.exercise.id, type: 'exercise' });\n              break;\n            }\n          }\n        }\n  \n        // If still nothing, set exam or fallback\n        if (!this.currentView.id && this.subjectContent.exam) {\n          this.updatecurrentView({ id: this.subjectContent.exam.id, type: 'exam' });\n        } else if (!this.currentView.id) {\n          const firstTopic = this.subjectContent.topics[0];\n          if (firstTopic && firstTopic.subtopics.length > 0) {\n            this.updatecurrentView({ id: firstTopic.subtopics[0].id, type: 'subtopic' });\n          }\n        }\n  \n        this.cdr.detectChanges();\n      },\n      error: (err) => {\n        console.error('Failed to initialize subject content:', err);\n      }\n    });\n  }\n  \n  \n  //\n  updatecurrentView(event: any) {\n    let content = null;\n\n    if (event.type === 'subtopic') {\n      content = this.subjectContent.topics\n        .flatMap((topic: any) => topic.subtopics)\n        .find((subtopic: any)=> subtopic.id === event.id) || {};\n      // check for completed topic\n      } else if (event.type === 'exercise') {\n        content = this.subjectContent.topics\n        .flatMap((topic: any) => topic.exercise)\n        .find((exercise: any) => exercise.id === event.id) || {};\n      } else if (event.type === 'exam') {\n        content = this.subjectContent.exam\n      }\n      \n    this.currentView = {\n      id: event.id,\n      type: event.type,\n      content: content\n    }\n\n    if (event.type === 'subtopic') {\n      this.updateChatMetadata();\n\n      // mark subtopic as read\n      const topic_id = this.getTopicDataFromSubtopic().id\n      this.lessonService.markSubtopicAsRead(topic_id, event.id).subscribe({\n        next: () => {\n          this.subjectContent.topics\n          .find((topic: any) => topic.id == topic_id).subtopics\n          .find((subtopic: any) => subtopic.id == event.id)\n          .read = true\n          this.updateProgress()\n          this.checkForTopicCompleteness(topic_id)\n        }, error(err) {\n          console.error(`Failed to mark subtopic as read: ${err}`)\n        },\n      });\n    } else if (this.chatOpen && (this.currentView.content.score == null)){\n      this.chatOpen = false;\n    }\n    console.log(this.currentView)\n  }\n\n  updateProgress() {\n    let total = 0;\n    let completed = 0;\n  \n    // --- Loop through topics ---\n    this.subjectContent.topics.forEach((topic: any) => {\n      // Count subtopics\n      if (topic.subtopics?.length) {\n        total += topic.subtopics.length;\n        completed += topic.subtopics.filter((st: any) => st.read).length;\n      }\n  \n      // Count exercise (each topic has exactly one exercise object)\n      if (topic.exercise) {\n        total += 1;\n        if (topic.exercise.score !== null && topic.exercise.score !== undefined) {\n          completed += 1;\n        }\n      }\n    });\n  \n    // --- Count exam (only one per subjectContent) ---\n    if (this.subjectContent.exam) {\n      total += 1;\n      if (this.subjectContent.exam.score !== null && this.subjectContent.exam.score !== undefined) {\n        completed += 1;\n      }\n    }\n  \n    // Calculate percentage\n    const fraction = (completed / total)\n    this.subjectService.updateSessionProgress(this.subjectId, fraction).subscribe({\n      next: () => {\n        console.log(\"Progress updated successfully\")\n        const percentage = total > 0 ? Math.round(fraction * 100) : 0;\n        console.log(`Progress: ${completed}/${total} (${percentage}%)`);\n      }, error(err) {\n        console.error(`Failed to update progress: ${err}`)\n      },\n    });\n  }  \n  \n  //\n  getTopicDataFromSubtopic() {\n    const topicData = this.subjectContent.topics.find((topic: any) => topic.subtopics.some((subtopic: any) => subtopic.id === this.currentView.id));\n    return { id: topicData?.id, title: topicData?.title};\n  }\n\n  //\n  getTopicDataFromExercise() {\n    const topicData = this.subjectContent.topics.find((topic: any) => topic.exercise && topic.exercise.id === this.currentView.id);\n    return { id: topicData?.id, title: topicData?.title};\n  }\n\n  //\n  checkForTopicCompleteness(topic_id: string) {\n    const topic = this.subjectContent.topics.find((t: any) => t.id === topic_id);\n  \n    if (!topic) return; // no topic found\n  \n    const allSubtopicsRead = Array.isArray(topic.subtopics) \n      ? topic.subtopics.every((st: any) => st.read) \n      : false;\n  \n    const hasExerciseScore = topic.exercise\n      ? topic.exercise.score !== null\n      : true;\n  \n    topic.completed = allSubtopicsRead && hasExerciseScore;\n  }\n\n  // Updates the current view to the previous or next subtopic\n  changeSubtopic(event: any) {\n    const id = event.id\n    const direction = event.direction;\n\n    const topic = this.subjectContent.topics.find((t: any) => t.id === id);\n    if (!topic) return;\n\n    const subtopics = topic.subtopics;\n    const currentIndex = subtopics.findIndex((s: any) => s.id === this.currentView.id);\n    if (currentIndex === -1) return;\n\n    let newIndex = currentIndex + (direction === 'next' ? 1 : -1);\n    if (newIndex = subtopics.length) newIndex = subtopics.length - 1; // Caps next subtopic at last subtopic\n\n    this.updatecurrentView({ id: subtopics[newIndex].id, type: 'subtopic'})\n  }\n\n  //\n  updateChatMetadata(question_event? : any) {\n    if (this.currentView.type === 'subtopic') {\n      const topicData = this.getTopicDataFromSubtopic()\n      this.chatMetadata.topic_id = topicData.id\n      this.chatMetadata.topic_name = topicData.title\n      this.chatMetadata.sub_topic_id = this.currentView.id\n      this.chatMetadata.sub_topic_name = this.currentView.content.title\n      this.chatMetadata.exercise_id = null\n      this.chatMetadata.exam_id = null\n      this.chatMetadata.question_id = null\n    } else if (this.currentView.type === 'exercise') {\n      const topicData = this.getTopicDataFromExercise()\n      this.chatMetadata.topic_id = topicData.id\n      this.chatMetadata.topic_name = topicData.title\n      this.chatMetadata.sub_topic_id = null\n      this.chatMetadata.sub_topic_name = null\n      this.chatMetadata.exercise_id = this.currentView.id\n      this.chatMetadata.exam_id = null\n      this.chatMetadata.question_id = question_event.id\n    } else if (this.currentView.type === 'exam') {\n      this.chatMetadata.topic_id = null\n      this.chatMetadata.topic_name = null\n      this.chatMetadata.sub_topic_id = null\n      this.chatMetadata.sub_topic_name = null\n      this.chatMetadata.exercise_id = null\n      this.chatMetadata.exam_id = this.currentView.id\n      this.chatMetadata.question_id = question_event.id\n    }\n  }\n\n  //\n  toggleChatPopup() {\n    this.chatOpen = !this.chatOpen\n    console.log(\"chat toggled\")\n  }\n\n  capitalizeFirstLetter(str: string) {\n    return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n  }\n}\n\n    \n\n    \n        \n\n\n@if (currentView.type === 'exercise' || currentView.type === 'exam') {\n  \n    \n      \n        Practice {{capitalizeFirstLetter(currentView.type)}} for {{(currentView.type === 'exercise') ? getTopicDataFromExercise().title : subjectContent.subject_name}}\n      \n      \n        {{ currentView.content.questions.length }} Question{{(currentView.content.questions.length > 1) ? 's' : '' }}\n      \n      These questions will help reinforce your understanding. Take your time to answer all the questions.\n    \n    \n      Score:\n      \n        @if (!(currentView.content.score == null)) {\n          {{currentView.content.score}} / {{currentView.content.questions.length}}\n        } @else {\n          Not Graded\n        }\n      \n    \n  \n}\n\n\n  \n\n  \n    @if (currentView.type === 'subtopic') {\n      \n    }\n    @if (currentView.type === 'exercise' || currentView.type === 'exam') {\n      \n    }\n  \n\n  \n\n\n\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (currentView.type === \\'exercise\\' || currentView.type === \\'exam\\') {                    Practice {{capitalizeFirstLetter(currentView.type)}} for {{(currentView.type === \\'exercise\\') ? getTopicDataFromExercise().title : subjectContent.subject_name}}                    {{ currentView.content.questions.length }} Question{{(currentView.content.questions.length > 1) ? \\'s\\' : \\'\\' }}            These questions will help reinforce your understanding. Take your time to answer all the questions.              Score:              @if (!(currentView.content.score == null)) {          {{currentView.content.score}} / {{currentView.content.questions.length}}        } @else {          Not Graded        }            }        @if (currentView.type === \\'subtopic\\') {          }    @if (currentView.type === \\'exercise\\' || currentView.type === \\'exam\\') {          }      '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'CheckEmail', 'selector': 'app-check-email'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'LessonPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LessonService.html":{"url":"injectables/LessonService.html","title":"injectable - LessonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  LessonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/lesson.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllSubtopics\n                            \n                            \n                                getAllTopics\n                            \n                            \n                                getExam\n                            \n                            \n                                getExercise\n                            \n                            \n                                markSubtopicAsRead\n                            \n                            \n                                saveExamScore\n                            \n                            \n                                saveExerciseScore\n                            \n                            \n                                scoreEssayQuestion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllSubtopics\n                        \n                    \n                \n            \n            \n                \ngetAllSubtopics(topicId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/lesson.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                topicId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllTopics\n                        \n                    \n                \n            \n            \n                \ngetAllTopics(sessionId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/lesson.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getExam\n                        \n                    \n                \n            \n            \n                \ngetExam(sessionId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/lesson.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getExercise\n                        \n                    \n                \n            \n            \n                \ngetExercise(topicId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/lesson.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                topicId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markSubtopicAsRead\n                        \n                    \n                \n            \n            \n                \nmarkSubtopicAsRead(topicId: string, subtopicId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/lesson.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                topicId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                subtopicId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveExamScore\n                        \n                    \n                \n            \n            \n                \nsaveExamScore(sessionId?: string, examId?: string, score?: number, questionData?: SaveQuestionData[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/lesson.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                examId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                score\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                questionData\n                                            \n                                                            SaveQuestionData[]\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveExerciseScore\n                        \n                    \n                \n            \n            \n                \nsaveExerciseScore(topicId?: string | null, exerciseId?: string, score?: number, questionData?: SaveQuestionData[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/lesson.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                topicId\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                exerciseId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                score\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                questionData\n                                            \n                                                            SaveQuestionData[]\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scoreEssayQuestion\n                        \n                    \n                \n            \n            \n                \nscoreEssayQuestion(sessionId?: string, questionId?: string, answer?: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/lesson.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                questionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                answer\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpBaseService)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/lesson.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpBaseService } from './http-base.service';\nimport { SaveQuestionData } from '../models/question.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LessonService {\n  http = inject(HttpBaseService);\n\n  getAllTopics(sessionId: string): Observable {\n    return this.http.get(`topic/${sessionId}/list`);\n  }\n\n  getAllSubtopics(topicId: string): Observable {\n    return this.http.get(`topic/${topicId}/get-content`);\n  }\n\n  getExercise(topicId: string): Observable {\n    return this.http.get(`topic/${topicId}/get-exercise`);\n  }\n\n  getExam(sessionId: string): Observable {\n    return this.http.get(`session/${sessionId}/get-exam`);\n  }\n\n  scoreEssayQuestion(sessionId?: string, questionId?: string, answer?: string | null): Observable {\n    return this.http.post(`chatbot/answer-question`, { session_id: sessionId, question_id: questionId, answer });\n  }\n\n  markSubtopicAsRead(topicId: string, subtopicId: string): Observable {\n    return this.http.put(`topic/${topicId}/mark-as-read`, { subtopic_id: subtopicId });\n  }\n\n  saveExerciseScore(topicId?: string | null, exerciseId?: string, score?: number, questionData?: SaveQuestionData[]): Observable {\n    return this.http.put(`topic/${topicId}/save-exercise-score`, { exercise_id: exerciseId, score, question_data: questionData });\n  }\n\n  saveExamScore(sessionId?: string, examId?: string, score?: number, questionData?: SaveQuestionData[]): Observable {\n    return this.http.put(`session/${sessionId}/save-exam-score`, { exam_id: examId, score, question_data: questionData });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Login.html":{"url":"components/Login.html","title":"component - Login","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  Login\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/auth/login/login.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authService\n                            \n                            \n                                email\n                            \n                            \n                                    \n                                emailCtrl\n                            \n                            \n                                loading\n                            \n                            \n                                notify\n                            \n                            \n                                password\n                            \n                            \n                                    \n                                passwordCtrl\n                            \n                            \n                                passwordVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                            \n                                togglePasswordVisibility\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/auth/login/login.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/auth/login/login.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePasswordVisibility\n                        \n                    \n                \n            \n            \n                \ntogglePasswordVisibility()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/auth/login/login.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/login/login.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/login/login.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        emailCtrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('emailCtrl')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/login/login.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/login/login.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notify\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(NotificationService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/login/login.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/login/login.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        passwordCtrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('passwordCtrl')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/login/login.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"password\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/login/login.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, inject, ViewChild } from '@angular/core';\nimport { FormsModule, NgModel } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../../core/services/auth.service';\nimport { NotificationService } from '../../../core/services/notification.service'; //  {\n          console.log('Login successful', response);\n          localStorage.setItem('accessToken', response.accessToken);\n          localStorage.setItem('refreshToken', response.refreshToken);\n          const user = response.user;\n          console.log('Logged in user:', user);\n          localStorage.setItem('userEmail', user.email);\n          this.loading = false;\n          this.router.navigateByUrl('/dashboard');\n        },\n        error: (error) => {\n          console.error('Login failed', error);\n          this.notify.showError('Invalid email or password');\n          this.loading = false;\n          this.cdr.detectChanges();\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n      Maestro\n    \n    Welcome Back!\n    Access your personalized lessons and materials.\n    \n      \n      \n        Email Address\n        \n        \n        @if (emailCtrl.invalid && emailCtrl.touched) {\n          \n            @if (emailCtrl.errors?.['required']) {Email is required}\n            @if (emailCtrl.errors?.['email']) {Invalid email format}\n          \n        }\n      \n\n      \n      \n        Password\n        \n        \n        @if (passwordCtrl.invalid && passwordCtrl.touched) {\n          \n            Password is required\n          \n        }\n        \n          \n        \n      \n\n      \n        Next\n      \n    \n    \n      New to Maestro? Sign Up!\n    \n  \n  \n  \n    \n    \n      \n      Maestro\n    \n  \n\n\n\n  \n  Logging In...\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Maestro        Welcome Back!    Access your personalized lessons and materials.                        Email Address                        @if (emailCtrl.invalid && emailCtrl.touched) {                      @if (emailCtrl.errors?.[\\'required\\']) {Email is required}            @if (emailCtrl.errors?.[\\'email\\']) {Invalid email format}                  }                          Password                        @if (passwordCtrl.invalid && passwordCtrl.touched) {                      Password is required                  }                                              Next                    New to Maestro? Sign Up!                              Maestro          Logging In...'\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'CheckEmail', 'selector': 'app-check-email'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'Login'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginPayload.html":{"url":"interfaces/LoginPayload.html","title":"interface - LoginPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/auth-payload.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserModel } from \"./user.model\";\n\nexport interface LoginPayload {\n  email: string;\n  password: string;\n}\n\nexport interface LoginResponse {\n  user: UserModel;\n  accessToken: string;\n  refreshToken: string;\n}\n\nexport interface SignupPayload {\n  name: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nexport interface VerifyEmailResponse {\n  success: boolean;\n  message: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginResponse.html":{"url":"interfaces/LoginResponse.html","title":"interface - LoginResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/auth-payload.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         UserModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserModel } from \"./user.model\";\n\nexport interface LoginPayload {\n  email: string;\n  password: string;\n}\n\nexport interface LoginResponse {\n  user: UserModel;\n  accessToken: string;\n  refreshToken: string;\n}\n\nexport interface SignupPayload {\n  name: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nexport interface VerifyEmailResponse {\n  success: boolean;\n  message: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/MarkdownPipe.html":{"url":"pipes/MarkdownPipe.html","title":"pipe - MarkdownPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  MarkdownPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/markdown-pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        markdown\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pipes/markdown-pipe.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | null | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     SafeHtml\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        md\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new MarkdownIt({ html: true, linkify: true, typographer: true })\n    .use(markdownItKatex)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/pipes/markdown-pipe.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport MarkdownIt from 'markdown-it';\nimport markdownItKatex from 'markdown-it-katex';\n\n@Pipe({\n  name: 'markdown',\n  standalone: true\n})\nexport class MarkdownPipe implements PipeTransform {\n  private md = new MarkdownIt({ html: true, linkify: true, typographer: true })\n    .use(markdownItKatex);\n\n  constructor(private sanitizer: DomSanitizer) {}\n\n  transform(value: string | null | undefined): SafeHtml {\n    if (!value) return '';\n    const html = this.md.render(value);\n    return this.sanitizer.bypassSecurityTrustHtml(html);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NamingUpload.html":{"url":"components/NamingUpload.html","title":"component - NamingUpload","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  NamingUpload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/subject-create/naming-upload/naming-upload.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-naming-upload\n            \n\n\n            \n                imports\n                \n                                Header\n                                CreationStepTab\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./naming-upload.html\n            \n\n\n\n            \n                styleUrl\n                ./naming-upload.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                files\n                            \n                            \n                                isDragging\n                            \n                            \n                                loading\n                            \n                            \n                                notify\n                            \n                            \n                                subject\n                            \n                            \n                                subjectId\n                            \n                            \n                                subjectName\n                            \n                            \n                                subjectService\n                            \n                            \n                                uploadedDocs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addFiles\n                            \n                            \n                                formatFileSize\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDragLeave\n                            \n                            \n                                onDragOver\n                            \n                            \n                                onFileDrop\n                            \n                            \n                                onFileSelect\n                            \n                            \n                                onSubmit\n                            \n                            \n                                removeFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/subject-create/naming-upload/naming-upload.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        addFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFiles(fileList: FileList)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/subject-create/naming-upload/naming-upload.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileList\n                                            \n                                                        FileList\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatFileSize\n                        \n                    \n                \n            \n            \n                \nformatFileSize(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/subject-create/naming-upload/naming-upload.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/subject-create/naming-upload/naming-upload.ts:113\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDragLeave\n                        \n                    \n                \n            \n            \n                \nonDragLeave(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/subject-create/naming-upload/naming-upload.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDragOver\n                        \n                    \n                \n            \n            \n                \nonDragOver(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/subject-create/naming-upload/naming-upload.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFileDrop\n                        \n                    \n                \n            \n            \n                \nonFileDrop(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/subject-create/naming-upload/naming-upload.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFileSelect\n                        \n                    \n                \n            \n            \n                \nonFileSelect(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/subject-create/naming-upload/naming-upload.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/subject-create/naming-upload/naming-upload.ts:132\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFile\n                        \n                    \n                \n            \n            \n                \nremoveFile(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/subject-create/naming-upload/naming-upload.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        files\n                        \n                    \n                \n            \n                \n                    \n                        Type :     File[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/naming-upload/naming-upload.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDragging\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/naming-upload/naming-upload.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/naming-upload/naming-upload.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notify\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(NotificationService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/naming-upload/naming-upload.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/naming-upload/naming-upload.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subjectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/naming-upload/naming-upload.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subjectName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/naming-upload/naming-upload.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subjectService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SubjectsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/naming-upload/naming-upload.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadedDocs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/naming-upload/naming-upload.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, inject, OnInit } from '@angular/core';\nimport { Header } from '../../../shared/components/header/header';\nimport { Router } from '@angular/router';\nimport { CreationStepTab } from '../creation-step-tab/creation-step-tab';\nimport { FormsModule } from '@angular/forms';\nimport { SubjectsService } from '../../../core/services/subjects.service';\nimport { NotificationService } from '../../../core/services/notification.service'; //  {\n        const ext = file.name.split('.').pop()?.toLowerCase();\n    \n        if (!ext || !allowedExtensions.includes(ext)) {\n          invalidFiles.push(file.name);\n        } else if (file.size > 20_000_000) { // 20MB cap for now\n          largeFiles.push(file.name);\n        } else {\n          validFiles.push(file);\n        }\n      });\n    \n      if (invalidFiles.length) {\n        this.notify.showError(`Unsupported file types: ${invalidFiles.join(', ')}`);\n      }\n      if (largeFiles.length) {\n        this.notify.showError(`Files too large: ${largeFiles.join(\", \")}`);\n      }\n      if (validFiles.length) {\n        this.files = [...this.files, ...validFiles];\n        this.notify.showSuccess(`${validFiles.length} file(s) added.`);\n      }\n    }\n  }  \n\n  removeFile(file: File) {\n    this.files = this.files.filter((f) => f !== file);\n  }\n\n  formatFileSize(file: File) {\n    let size: any = file.size;\n    let end = null;\n    if (size >= 1_000_000) {\n      size /= 1_000_000;\n      size = size.toFixed(3);\n      end = 'MB';\n    } else if (size >= 1_000) {\n      size /= 1_000;\n      size = size.toFixed(3);\n      end = 'KB';\n    } else {\n      end = 'B';\n    }\n    return `${size} ${end}`;\n  }\n\n  ngOnInit(): void {\n    // Fetch details of the subject if needed\n    this.subjectService.getSubject(this.subjectId).subscribe({\n      next: (response) => {\n        console.log(response);\n        this.subject = response.session;\n        this.subjectName = this.subject.name || '';\n        if (this.subject.status !== 'pending naming' && this.subject.status !== 'pending document upload') {\n          this.uploadedDocs = true;\n        }\n        this.cdr.detectChanges();\n      },\n      error: (err) => {\n        console.error('Error fetching subject details:', err);\n        this.notify.showError('Failed to load subject details. Please try again later.');\n      }\n    });\n  }\n\n  onSubmit() {\n    this.loading = true;\n  \n    if (this.subjectName.trim() === '' && this.subject.status === 'pending naming') {\n      this.notify.showError('Subject name is required');\n      this.loading = false;\n      return;\n    }\n  \n    if (this.files.length === 0 && !this.uploadedDocs) {\n      this.notify.showError('At least one file must be uploaded');\n      this.loading = false;\n      return;\n    }\n  \n    console.log('Subject Name:', this.subjectName);\n    console.log('Files:', this.files);\n    console.log('Stage 0' + this.loading);\n  \n    // 👉 Decide whether to name subject or skip directly\n    iif(\n      () => this.subject.status === 'pending naming',\n      // ✅ Case 1: Subject needs naming → call nameSubject first\n      this.subjectService.nameSubject(this.subjectId, this.subjectName).pipe(\n        tap((response) => {\n          console.log('Stage 1 (naming)', this.loading, response);\n          this.subject.status = 'pending document upload'; // Update status locally\n        })\n      ),\n      // ✅ Case 2: Skip naming → just emit a dummy observable so chain continues\n      of({ session: { id: this.subjectId } })\n    ).pipe(\n      switchMap(() =>\n        iif(\n          () => this.uploadedDocs,\n          // ✅ Skip ingest → label only\n          this.subjectService.labelDocuments(this.subjectId).pipe(\n            tap((labelResponse) => {\n              console.log('Stage 2 (skipped ingest)', this.loading, labelResponse);\n              this.notify.showSuccess(\"Topics successfully identified.\");\n              this.router.navigate([`/subject-create/${this.subjectId}/topic-preferences`]);\n            })\n          ),\n          // ✅ Ingest then label\n          this.subjectService.ingestDocuments(this.subjectId, this.files).pipe(\n            tap(() => {\n              console.log('Stage 2 (ingest)', this.loading);\n              this.subject.status = 'pending topic labelling'; // Update status locally\n              this.uploadedDocs = true; // Prevent further uploads\n              this.notify.showSuccess('Successfully ingested documents. Identifying topics...');\n            }),\n            switchMap(() =>\n              this.subjectService.labelDocuments(this.subjectId).pipe(\n                tap((labelResponse) => {\n                  console.log('Stage 3 (label)', this.loading, labelResponse);\n                  this.notify.showSuccess(\"Topics successfully identified.\");\n                  this.router.navigate([`/subject-create/${this.subjectId}/topic-preferences`]);\n                })\n              )\n            )\n          )\n        )\n      ),\n      catchError((err) => {\n        console.error('Error in subject creation flow:', err);\n        this.notify.showError('Something went wrong. Please try again later.');\n        return EMPTY;\n      }),\n      finalize(() => {\n        this.loading = false;\n        this.cdr.detectChanges();\n      })\n    ).subscribe();\n  }\n  \n}\n\n    \n\n    \n        \n\n  \n    \n    \n    \n  \n  Create a new subject\n  \n    Subject Name\n    \n    \n    @if (nameCtrl.invalid && nameCtrl.touched) {\n      \n        @if (nameCtrl.errors?.['required']) {Subject Name cannot be empty}\n      \n    }\n\n    \n    \n      \n        \n      \n      \n      Upload your PDFs and DOCX files here to start generating personalized lessons for this subject.\n      JPG, PNG, PDF. Max file size: 25MB.\n    \n\n    \n    @if (files.length > 0) {\n      \n        Selected files:\n        \n          @for (file of files; track $index) {\n            \n              {{ file.name }}\n              ({{formatFileSize(file)}})\n              \n                \n                X\n              \n            \n          }\n        \n      \n    }\n\n    \n      \n        Next\n        \n      \n      \n        \n        loading...\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Create a new subject      Subject Name            @if (nameCtrl.invalid && nameCtrl.touched) {              @if (nameCtrl.errors?.[\\'required\\']) {Subject Name cannot be empty}          }                                        Upload your PDFs and DOCX files here to start generating personalized lessons for this subject.      JPG, PNG, PDF. Max file size: 25MB.            @if (files.length > 0) {              Selected files:                  @for (file of files; track $index) {                          {{ file.name }}              ({{formatFileSize(file)}})                                              X                                    }                  }                  Next                                    loading...            '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'CheckEmail', 'selector': 'app-check-email'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'NamingUpload'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFound.html":{"url":"components/NotFound.html","title":"component - NotFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  NotFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/not-found/not-found.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./not-found.html\n            \n\n\n\n            \n                styleUrl\n                ./not-found.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goHome\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/not-found/not-found.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goHome\n                        \n                    \n                \n            \n            \n                \ngoHome()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/not-found/not-found.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-not-found',\n  imports: [CommonModule],\n  templateUrl: './not-found.html',\n  styleUrl: './not-found.css'\n})\nexport class NotFound {\n  constructor(private router: Router) {}\n  goHome() {\n    this.router.navigateByUrl('/');\n  }\n}\n\n    \n\n    \n        \n  Hey there cheeky mate. What do you think you're doing here? Get back to learning!\n  Also you might have noticed the sideways scrollable landing page, weird innit? It's a feature not a bug, I swear.\n  Anyways, it just goes to show that you can take the bug out of the code, but you can never take the code out of the bug ;)\n\n\n  \n    \n    \n      404\n      Oops! Looks like you've gone off-topic.\n      Even Maestro can't find this page — but we can help you get back to learning.\n      \n        Return to Home\n      \n    \n  \n  \n    Lost? Don't worry — Maestro always brings clarity.\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Hey there cheeky mate. What do you think you\\'re doing here? Get back to learning!  Also you might have noticed the sideways scrollable landing page, weird innit? It\\'s a feature not a bug, I swear.  Anyways, it just goes to show that you can take the bug out of the code, but you can never take the code out of the bug ;)                404      Oops! Looks like you\\'ve gone off-topic.      Even Maestro can\\'t find this page — but we can help you get back to learning.              Return to Home                  Lost? Don\\'t worry — Maestro always brings clarity.  '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'CheckEmail', 'selector': 'app-check-email'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotFound'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/notification.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _timer\n                            \n                            \n                                message\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                show\n                            \n                            \n                                showError\n                            \n                            \n                                showSuccess\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/notification.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow(type: NoticeType, msg: string, ms: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/notification.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            NoticeType\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                msg\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                ms\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    4000\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n            \n                \nshowError(msg: string, ms: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/notification.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                msg\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                ms\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    5000\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccess\n                        \n                    \n                \n            \n            \n                \nshowSuccess(msg: string, ms: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/notification.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                msg\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                ms\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    2500\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _timer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/notification.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/notification.service.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/notification.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\n\nexport type NoticeType = 'success' | 'error' | 'info' | 'warn';\n\n@Injectable({ providedIn: 'root' })\nexport class NotificationService {\n  message = signal(null);\n  type = signal(null);\n  private _timer?: number;\n\n  show(type: NoticeType, msg: string, ms = 4000) {\n    this.type.set(type);\n    this.message.set(msg);\n    clearTimeout(this._timer);\n    this._timer = window.setTimeout(() => this.clear(), ms) as any;\n  }\n\n  showError(msg: string, ms = 5000) { this.show('error', msg, ms); }\n  showSuccess(msg: string, ms = 2500) { this.show('success', msg, ms); }\n  clear() { this.message.set(null); this.type.set(null); }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/PasswordValidator.html":{"url":"directives/PasswordValidator.html","title":"directive - PasswordValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Directives\n  PasswordValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/password-validator.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                PasswordValidator\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [appPasswordValidator]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/directives/password-validator.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidationErrors | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl, ValidationErrors } from '@angular/forms';\n\n@Directive({\n  selector: '[appPasswordValidator]',\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      useExisting: PasswordValidator,\n      multi: true,\n    },\n  ],\n})\nexport class PasswordValidator implements Validator {\n  validate(control: AbstractControl): ValidationErrors | null {\n    if (!control.value) return null;\n\n    const regex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d!@#$%^&*()_+.,?-]{8,}$/;\n    return regex.test(control.value) ? null : { invalidPassword: true };\n    const pw = control.get('password')?.value;\n    const cpw = control.get('confirmPassword')?.value;\n    return pw === cpw ? null : { passwordMismatch: true };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Plan.html":{"url":"interfaces/Plan.html","title":"interface - Plan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Plan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/subscription.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            durationDays\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            maxSubjects\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        durationDays\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        durationDays:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxSubjects\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxSubjects:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Plan {\n  id: string;\n  name: string;\n  price: number;\n  maxSubjects: number;\n  durationDays: number;\n}\n\nexport interface SubscriptionStatus {\n  plan: Plan;\n  startedAt: string;\n  expiresAt: string;\n  isActive: boolean;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Practice.html":{"url":"components/Practice.html","title":"component - Practice","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  Practice\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/lesson/practice/practice.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-practice\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                            MarkdownPipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./practice.html\n            \n\n\n\n            \n                styleUrl\n                ./practice.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lessonService\n                            \n                            \n                                loading\n                            \n                            \n                                notify\n                            \n                            \n                                question\n                            \n                            \n                                    Private\n                                updateOnInputChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                autoResize\n                            \n                            \n                                cycleQuestion\n                            \n                            \n                                getQuestionNumber\n                            \n                            \n                                submitAnswers\n                            \n                            \n                                toggleSelectOption\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentView\n                            \n                            \n                                subjectId\n                            \n                            \n                                topicId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changeProgress\n                            \n                            \n                                changeQuestion\n                            \n                            \n                                exerciseCompleted\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/lesson/practice/practice.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentView\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/lesson/practice/practice.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        subjectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/lesson/practice/practice.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        topicId\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/lesson/practice/practice.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changeProgress\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/lesson/practice/practice.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        changeQuestion\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/lesson/practice/practice.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        exerciseCompleted\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/lesson/practice/practice.ts:20\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        autoResize\n                        \n                    \n                \n            \n            \n                \nautoResize(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/practice/practice.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cycleQuestion\n                        \n                    \n                \n            \n            \n                \ncycleQuestion(direction: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/practice/practice.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                direction\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getQuestionNumber\n                        \n                    \n                \n            \n            \n                \ngetQuestionNumber()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/practice/practice.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitAnswers\n                        \n                    \n                \n            \n            \n                \nsubmitAnswers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/practice/practice.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSelectOption\n                        \n                    \n                \n            \n            \n                \ntoggleSelectOption(id: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/practice/practice.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        lessonService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LessonService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/practice/practice.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/practice/practice.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notify\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(NotificationService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/practice/practice.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/practice/practice.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateOnInputChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : effect(() => {\n    const view = this.currentView(); // \n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/practice/practice.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, effect, inject, input, OnInit, output, SimpleChanges } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { QuestionModel, SaveQuestionData } from '../../../core/models/question.model';\nimport { LessonService } from '../../../core/services/lesson.service';\nimport { catchError, forkJoin, Observable, of, switchMap, take, tap } from 'rxjs';\nimport { MarkdownPipe } from '../../../shared/pipes/markdown-pipe';\nimport { NotificationService } from '../../../core/services/notification.service';\n\n@Component({\n  selector: 'app-practice',\n  imports: [FormsModule, MarkdownPipe],\n  templateUrl: './practice.html',\n  styleUrl: './practice.css'\n})\nexport class Practice {\n  currentView = input();\n  subjectId = input();\n  topicId = input()\n  changeQuestion = output();\n  exerciseCompleted = output();\n  changeProgress = output();\n  question: any;\n  loading = false;\n  notify = inject(NotificationService);\n  lessonService = inject(LessonService)\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  // This will run any time currentView changes\n  private updateOnInputChange = effect(() => {\n    const view = this.currentView(); //  q.id === this.question.id);\n\n    let newIndex = currentIndex + (direction === 'next' ? 1 : -1);\n    if (newIndex = this.currentView().content.questions.length) newIndex = this.currentView().content.questions.length - 1; // Caps next question at last question\n\n    this.question = this.currentView().content.questions[newIndex]\n    console.log(this.question)\n    this.changeQuestion.emit({id: this.question.id})\n  }\n\n  getQuestionNumber() {\n    return this.currentView().content.questions.findIndex((q: any) => q.id === this.question.id) + 1;\n  }\n\n  toggleSelectOption(id: any) {\n    if (this.question.type === 'multiple choice') {\n      this.question.options.forEach((option: any) => {\n        option.selected = option.id === id;\n      });\n    } else if (this.question.type === 'multiple selection') {\n      const option = this.question.options.find((o: any) => o.id === id);\n      if (option) {\n        option.selected = !option.selected;\n      }\n    }\n    console.log(this.currentView()?.content?.questions.find((q: any) => q.id === this.question.id)?.options);\n  }\n\n  submitAnswers() {\n    const proceed = confirm(\"Are you sure you want to submit?\")\n    if (!proceed) return\n\n    this.loading = true;\n\n    let correctCount = 0;\n    let questionData: SaveQuestionData[] = [];\n\n    const essayCalls: Observable[] = [];\n\n    this.currentView().content.questions.forEach((question: QuestionModel) => {\n      let q: SaveQuestionData = {\n        id: question.id,\n        type: question.type,\n        options: [],\n        essay_answer: null,\n        essay_feedback: null\n      };\n\n      if (question.type === 'multiple choice' || question.type === 'multiple selection') {\n        const isCorrect = question.options?.every(opt => opt.selected === opt.correct);\n        if (isCorrect) correctCount++;\n        q.options = question.options?.map(opt => ({ id: opt.id, selected: opt.selected }));\n      } \n      \n      else if (question.type === 'essay') {\n        if (!question.essay_answer) question.essay_answer = \"\"\n        essayCalls.push(\n          this.lessonService.scoreEssayQuestion(this.subjectId(), question.id, question.essay_answer).pipe(\n            tap((value) => {\n              console.log(value)\n              if (value.correct) correctCount++;\n              q.essay_answer = question.essay_answer;\n              q.essay_feedback = question.essay_feedback = value.feedback;\n            }),\n            catchError(err => {\n              console.error(`Error scoring essay question: ${err}`);\n              this.notify.showError('Failed to score an essay question.');\n              return of(null);\n            })\n          )\n        );\n      }\n\n      questionData.push(q); // this might seem counterintuitive, but it actually does work with the async essay scoring, trust me bro, I asked gpt... I lied, it doesn't work\n    });\n\n    // save score observable\n    let saveCall$: Observable;\n    if (this.currentView().type === 'exercise') {\n      console.log(questionData)\n      saveCall$ = this.lessonService.saveExerciseScore(this.topicId(), this.currentView().id, correctCount, questionData).pipe(\n        tap(() => this.exerciseCompleted.emit(this.topicId()))\n        );\n    } else if (this.currentView().type === 'exam') {\n      console.log(questionData)\n      saveCall$ = this.lessonService.saveExamScore(this.subjectId(), this.currentView().id, correctCount, questionData);\n    } else {\n      saveCall$ = of(null);\n    }\n\n    // run essay scoring first, then save score\n    forkJoin(essayCalls.length > 0 ? essayCalls : [of(null)]).pipe(\n      switchMap(() => {\n        // Save final score into the currentView\n        this.currentView().content.score = correctCount;\n        return saveCall$;\n      })\n    ).subscribe({\n      next: () => {\n        this.changeProgress.emit({}); // Notify parent to refresh progress\n        this.loading = false; // ✅ only after scoring + saving\n        this.cdr.detectChanges();\n      },\n      error: (err) => {\n        console.error('Failed to submit answers:', err);\n        this.notify.showError('Failed to submit answers. Please try again.');\n        this.loading = false;\n        this.cdr.detectChanges();\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    Question {{getQuestionNumber()}}\n  \n  \n    \n    @if (question.type === 'essay') {\n      \n      @if (currentView().content.score) {\n        \n          Feedback: \n          \n        \n      }\n    } @else {\n      @for (option of question.options; track option.id) {\n        \n          \n          \n          \n        \n        @if (!(currentView().content.score == null)) {\n          \n            \n          \n        }\n      }\n    }\n  \n  \n  \n  \n    \n      \n      Previous\n    \n    \n      Next\n      \n    \n  \n\n  \n  \n    \n      Submit\n    \n    \n      \n      loading...\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Question {{getQuestionNumber()}}            @if (question.type === \\'essay\\') {            @if (currentView().content.score) {                  Feedback:                         }    } @else {      @for (option of question.options; track option.id) {                                                      @if (!(currentView().content.score == null)) {                                        }      }    }                        Previous              Next                          Submit                    loading...      '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'CheckEmail', 'selector': 'app-check-email'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'Practice'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Pricing.html":{"url":"components/Pricing.html","title":"component - Pricing","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  Pricing\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/pricing/pricing.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pricing\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./pricing.html\n            \n\n\n\n            \n                styleUrl\n                ./pricing.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-pricing',\n  imports: [],\n  templateUrl: './pricing.html',\n  styleUrl: './pricing.css'\n})\nexport class Pricing {\n\n}\n\n    \n\n    \n        \n\n  \n    \n      Simple, Flexible Plans for\n      Every Learner\n    \n    \n      Start free, grow your study power as you go.\n    \n  \n\n  \n  \n    \n    \n      Basic\n      \n        ₦0/per month\n      \n      \n        Get started for free\n      \n      \n        For curious learners who want to try Maestro.\n      \n      \n      \n\n      \n        Features\n        \n          \n            \n            Create 2 personalized lessons each month\n          \n          \n            \n            Keep up to 5 lessons saved in your library\n          \n          \n            \n            Upload files up to 3MB each\n          \n        \n      \n    \n\n    \n    \n      \n      \n        \n          ★ Most Popular\n        \n      \n      Standard\n      \n        ₦6000/per month\n      \n      \n        Get Started\n      \n      \n        For consistent learners who need more flexibility.\n      \n      \n      \n        Features\n        \n          \n            \n            Unlock 8 lessons every month\n          \n          \n            \n            Store up to 20 lessons for easy access\n          \n          \n            \n            Upload documents up to 10MB\n          \n        \n      \n    \n\n    \n    \n      Premium\n      \n        ₦15,000/per month\n      \n      \n        Go Premium\n      \n      \n        For serious learners who want it all.\n      \n      \n      \n      \n        Features\n        \n          \n            \n            Generate up to 25 lessons per month\n          \n          \n            \n            Save 100 lessons in your personal library\n          \n          \n            \n            Upload files as large as 20MB\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Simple, Flexible Plans for      Every Learner              Start free, grow your study power as you go.                        Basic              ₦0/per month                    Get started for free                    For curious learners who want to try Maestro.                                Features                                          Create 2 personalized lessons each month                                            Keep up to 5 lessons saved in your library                                            Upload files up to 3MB each                                                                  ★ Most Popular                    Standard              ₦6000/per month                    Get Started                    For consistent learners who need more flexibility.                          Features                                          Unlock 8 lessons every month                                            Store up to 20 lessons for easy access                                            Upload documents up to 10MB                                          Premium              ₦15,000/per month                    Go Premium                    For serious learners who want it all.                                Features                                          Generate up to 25 lessons per month                                            Save 100 lessons in your personal library                                            Upload files as large as 20MB                              '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'CheckEmail', 'selector': 'app-check-email'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'Pricing'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QuestionModel.html":{"url":"interfaces/QuestionModel.html","title":"interface - QuestionModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QuestionModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/question.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            essay_answer\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            essay_feedback\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        essay_answer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        essay_answer:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        essay_feedback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        essay_feedback:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         QuestionOption[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         QuestionOption[] | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         QuestionType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         QuestionType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface QuestionOption {\n  id: string;\n  text: string;\n  correct: boolean;\n  selected: boolean;\n  explanation: string;\n}\n\nexport type QuestionType = 'multiple choice' | 'multiple selection' | 'essay';\n\nexport interface QuestionModel {\n  id: string;\n  text: string;\n  type: QuestionType;\n  options?: QuestionOption[] | null; // only for choice types\n  essay_answer?: string | null;\n  essay_feedback?: string | null;\n}\n\nexport interface SaveQuestionData {\n  id: string;\n  type: QuestionType;\n  options?: { id: string; selected: boolean }[] | null; // only for choice types\n  essay_answer?: string | null;\n  essay_feedback?: string | null;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QuestionOption.html":{"url":"interfaces/QuestionOption.html","title":"interface - QuestionOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QuestionOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/question.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            correct\n                                        \n                                \n                                \n                                        \n                                            explanation\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            selected\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        correct\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        correct:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        explanation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        explanation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface QuestionOption {\n  id: string;\n  text: string;\n  correct: boolean;\n  selected: boolean;\n  explanation: string;\n}\n\nexport type QuestionType = 'multiple choice' | 'multiple selection' | 'essay';\n\nexport interface QuestionModel {\n  id: string;\n  text: string;\n  type: QuestionType;\n  options?: QuestionOption[] | null; // only for choice types\n  essay_answer?: string | null;\n  essay_feedback?: string | null;\n}\n\nexport interface SaveQuestionData {\n  id: string;\n  type: QuestionType;\n  options?: { id: string; selected: boolean }[] | null; // only for choice types\n  essay_answer?: string | null;\n  essay_feedback?: string | null;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuestionSettings.html":{"url":"components/QuestionSettings.html","title":"component - QuestionSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  QuestionSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/subject-create/question-settings/question-settings.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-question-settings\n            \n\n\n            \n                imports\n                \n                                Header\n                                CreationStepTab\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./question-settings.html\n            \n\n\n\n            \n                styleUrl\n                ./question-settings.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                examSettings\n                            \n                            \n                                exerciseSettings\n                            \n                            \n                                loading\n                            \n                            \n                                notify\n                            \n                            \n                                subjectId\n                            \n                            \n                                subjectService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                            \n                                toggleExamType\n                            \n                            \n                                toggleExerciseType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/subject-create/question-settings/question-settings.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/subject-create/question-settings/question-settings.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleExamType\n                        \n                    \n                \n            \n            \n                \ntoggleExamType(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/subject-create/question-settings/question-settings.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleExerciseType\n                        \n                    \n                \n            \n            \n                \ntoggleExerciseType(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/subject-create/question-settings/question-settings.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        examSettings\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ExamSettings()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/question-settings/question-settings.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exerciseSettings\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ExerciseSettings()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/question-settings/question-settings.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/question-settings/question-settings.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notify\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(NotificationService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/question-settings/question-settings.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subjectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/question-settings/question-settings.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subjectService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SubjectsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/question-settings/question-settings.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, inject } from '@angular/core';\nimport { Header } from '../../../shared/components/header/header';\nimport { CreationStepTab } from '../creation-step-tab/creation-step-tab';\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { SubjectsService } from '../../../core/services/subjects.service';\nimport { forkJoin, Observable } from 'rxjs';\nimport { NotificationService } from '../../../core/services/notification.service'; //  = []\n  preference: string = ''\n}\nclass ExamSettings {\n  include: boolean = false\n  questionTypes: Array = []\n  preference: string = ''\n  timeLimit: any = null\n}\n\n@Component({\n  selector: 'app-question-settings',\n  imports: [Header, CreationStepTab, FormsModule],\n  templateUrl: './question-settings.html',\n  styleUrl: './question-settings.css'\n})\nexport class QuestionSettings {\n  exerciseSettings = new ExerciseSettings();\n  examSettings = new ExamSettings();\n  loading = false;\n  subjectId = '';\n  subjectService = inject(SubjectsService)\n  notify = inject(NotificationService); //  qt !== event.target.value);\n    }\n  }\n\n  toggleExamType(event: any) {\n    if (event.target.checked) {\n      this.examSettings.questionTypes.push(event.target.value);\n    } else {\n      this.examSettings.questionTypes = this.examSettings.questionTypes.filter((qt) => qt !== event.target.value);\n    }\n  }\n\n  onSubmit() {\n    this.loading = true;\n    let exerciseValidated = false;\n    let examValidated = false;\n  \n    // Validate exercise fields\n    if (this.exerciseSettings.include) {\n      if (this.exerciseSettings.questionTypes.length == 0) {\n        this.notify.showError(\"Choose at least one question type for the exercises\");\n        this.loading = false;\n        return;\n      }\n      if (!this.exerciseSettings.preference) {\n        this.notify.showError(\"Exercise preference cannot be empty\");\n        this.loading = false;\n        return;\n      }\n    }\n    exerciseValidated = true;\n  \n    // Validate exam fields\n    if (this.examSettings.include) {\n      if (this.examSettings.questionTypes.length == 0) {\n        this.notify.showError(\"Choose at least one question type for the exam\");\n        this.loading = false;\n        return;\n      }\n      if (!this.examSettings.preference) {\n        this.notify.showError(\"Exam preference cannot be empty\");\n        this.loading = false;\n        return;\n      }\n    }\n    examValidated = true;\n  \n    // Collect all requests to run in parallel\n    const requests: Observable[] = [];\n  \n    if (this.exerciseSettings.include && exerciseValidated) {\n      requests.push(\n        this.subjectService.generateExercise(\n          this.subjectId,\n          this.exerciseSettings.preference,\n          this.exerciseSettings.questionTypes\n        )\n      );\n    }\n  \n    if (this.examSettings.include && examValidated) {\n      requests.push(\n        this.subjectService.generateExam(\n          this.subjectId,\n          this.examSettings.preference,\n          this.examSettings.questionTypes\n        )\n      );\n    }\n  \n    // If there are requests, wait for them to finish before updating status\n    if (requests.length > 0) {\n      forkJoin(requests).subscribe({\n        next: (responses) => {\n          console.log(\"Generation responses:\", responses);\n          this.notify.showSuccess(\"Sucessfully generated practice questions.\")\n          this.subjectService.updateSessionStatus(this.subjectId, \"In Progress\").subscribe({\n            next: () => {\n              console.log(\"Session status updated\");\n              this.router.navigate([`/lesson/${this.subjectId}`]);\n            },\n            error: (err) => {\n              console.error(\"Failed to update session status\", err);\n              this.router.navigate([`/lesson/${this.subjectId}`]);\n            },\n            complete: () => (this.loading = false),\n          });\n        },\n        error: (err) => {\n          console.error(\"Error during generation:\", err);\n          this.loading = false;\n          this.cdr.detectChanges();\n        }\n      });\n    } else {\n      // If no requests to generate, just update status directly\n      this.subjectService.updateSessionStatus(this.subjectId, \"In Progress\").subscribe({\n        next: () => {\n          console.log(\"Session status updated (no generation needed)\");\n          this.router.navigate([`/lesson/${this.subjectId}`]);\n        },\n        error: (err) => {\n          console.error(\"Failed to update session status\", err);\n          this.router.navigate([`/lesson/${this.subjectId}`]);\n        },\n        complete: () => (this.loading = false),\n      });\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n  \n  \n    \n    \n    \n  \n\n  Set Practice Questions\n  \n    You can choose to generate practice exercises as well as an exam alongside the lesson.\n  \n\n  \n    \n    \n      Exercises\n      \n      Do you want to include exercises for each topic?\n      \n        \n        Yes\n      \n      \n        \n        No\n      \n\n      \n      What question types do you want for the exercise?\n      \n        \n        Multiple Choice\n      \n      \n        \n        Multiple Selection\n      \n      \n        \n        Essay\n      \n      \n      \n      How would you like the exercises to be?\n      \n    \n    \n    \n    \n      Exam\n      \n      Do you want to include an exam for the lesson?\n      \n        \n        Yes\n      \n      \n        \n        No\n      \n\n      \n      What question types do you want for the exam?\n      \n        \n        Multiple Choice\n      \n      \n        \n        Multiple Selection\n      \n      \n        \n        Essay\n      \n      \n      \n      How would you like the exam to be?\n      \n    \n  \n  \n    \n      Next\n      \n    \n    \n      \n      loading...\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Set Practice Questions      You can choose to generate practice exercises as well as an exam alongside the lesson.                  Exercises            Do you want to include exercises for each topic?                      Yes                            No                  What question types do you want for the exercise?                      Multiple Choice                            Multiple Selection                            Essay                        How would you like the exercises to be?                            Exam            Do you want to include an exam for the lesson?                      Yes                            No                  What question types do you want for the exam?                      Multiple Choice                            Multiple Selection                            Essay                        How would you like the exam to be?                        Next                          loading...      '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'CheckEmail', 'selector': 'app-check-email'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'QuestionSettings'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SaveQuestionData.html":{"url":"interfaces/SaveQuestionData.html","title":"interface - SaveQuestionData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SaveQuestionData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/question.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            essay_answer\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            essay_feedback\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        essay_answer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        essay_answer:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        essay_feedback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        essay_feedback:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     literal type[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[] | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         QuestionType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         QuestionType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface QuestionOption {\n  id: string;\n  text: string;\n  correct: boolean;\n  selected: boolean;\n  explanation: string;\n}\n\nexport type QuestionType = 'multiple choice' | 'multiple selection' | 'essay';\n\nexport interface QuestionModel {\n  id: string;\n  text: string;\n  type: QuestionType;\n  options?: QuestionOption[] | null; // only for choice types\n  essay_answer?: string | null;\n  essay_feedback?: string | null;\n}\n\nexport interface SaveQuestionData {\n  id: string;\n  type: QuestionType;\n  options?: { id: string; selected: boolean }[] | null; // only for choice types\n  essay_answer?: string | null;\n  essay_feedback?: string | null;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Sidebar.html":{"url":"components/Sidebar.html","title":"component - Sidebar","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  Sidebar\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/lesson/sidebar/sidebar.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n\n            \n                imports\n                \n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sidebar.html\n            \n\n\n\n            \n                styleUrl\n                ./sidebar.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logContent\n                            \n                            \n                                selectView\n                            \n                            \n                                toggleExpandTopic\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                currentView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                updateView\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/lesson/sidebar/sidebar.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        currentView\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/lesson/sidebar/sidebar.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        updateView\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/lesson/sidebar/sidebar.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logContent\n                        \n                    \n                \n            \n            \n                \nlogContent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/sidebar/sidebar.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectView\n                        \n                    \n                \n            \n            \n                \nselectView(id: string, type: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/sidebar/sidebar.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleExpandTopic\n                        \n                    \n                \n            \n            \n                \ntoggleExpandTopic(topic_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/sidebar/sidebar.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                topic_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, input, output } from '@angular/core';\nimport { RouterLink } from '@angular/router';\n\n@Component({\n  selector: 'app-sidebar',\n  imports: [RouterLink],\n  templateUrl: './sidebar.html',\n  styleUrl: './sidebar.css'\n})\nexport class Sidebar {\n  content = input();\n  currentView = input();\n  updateView = output();\n\n  logContent() {\n    console.log(this.content());\n  }\n\n  toggleExpandTopic(topic_id: string) {\n    const topic = this.content().topics.find((t: any) => t.id === topic_id);\n    if (topic) {\n      topic.expanded = !topic.expanded;\n    }\n  }\n\n  selectView(id: string, type: string) {\n    console.log(`Selected view: ${type} with ID: ${id}`);\n    this.updateView.emit({ id, type });\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n    \n    Back to Subjects\n  \n\n  \n  \n    \n    @for (topic of content().topics; track topic.id) {\n      \n        \n        {{ topic.title }}\n      \n      @if (topic.expanded) {\n        \n        @for (subtopic of topic.subtopics; track subtopic.id) {\n          \n            {{ subtopic.title }}\n          \n        }\n        \n        @if (topic.exercise) {\n          \n            Exercise\n          \n        }\n      }\n    }\n    \n    @if (content().exam) {\n      \n        Exam\n      \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      Back to Subjects              @for (topic of content().topics; track topic.id) {                      {{ topic.title }}            @if (topic.expanded) {                @for (subtopic of topic.subtopics; track subtopic.id) {                      {{ subtopic.title }}                  }                @if (topic.exercise) {                      Exercise                  }      }    }        @if (content().exam) {              Exam          }  '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'CheckEmail', 'selector': 'app-check-email'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'Sidebar'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Signup.html":{"url":"components/Signup.html","title":"component - Signup","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  Signup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/auth/signup/signup.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signup\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                                PasswordValidator\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./signup.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authService\n                            \n                            \n                                email\n                            \n                            \n                                    \n                                emailCtrl\n                            \n                            \n                                firstname\n                            \n                            \n                                    \n                                firstnameCtrl\n                            \n                            \n                                lastname\n                            \n                            \n                                    \n                                lastnameCtrl\n                            \n                            \n                                loading\n                            \n                            \n                                notify\n                            \n                            \n                                password\n                            \n                            \n                                    \n                                passwordCtrl\n                            \n                            \n                                passwordVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                            \n                                togglePasswordVisibility\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/auth/signup/signup.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/auth/signup/signup.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePasswordVisibility\n                        \n                    \n                \n            \n            \n                \ntogglePasswordVisibility()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/auth/signup/signup.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/signup/signup.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/signup/signup.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        emailCtrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('emailCtrl')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/signup/signup.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/signup/signup.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstnameCtrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('firstnameCtrl')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/signup/signup.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/signup/signup.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastnameCtrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('lastnameCtrl')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/signup/signup.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/signup/signup.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notify\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(NotificationService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/signup/signup.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/signup/signup.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        passwordCtrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('passwordCtrl')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/signup/signup.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"password\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/signup/signup.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, inject, ViewChild } from '@angular/core';\nimport { FormsModule, NgModel } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { PasswordValidator } from '../../../shared/directives/password-validator';\nimport { AuthService } from '../../../core/services/auth.service';\nimport { NotificationService } from '../../../core/services/notification.service';\n\n@Component({\n  selector: 'app-signup',\n  imports: [FormsModule, PasswordValidator],\n  templateUrl: './signup.html',\n})\nexport class Signup {\n  firstname = \"\";\n  lastname = \"\";\n  email = \"\";\n  password = \"\";\n  passwordVisible = \"password\";\n  loading = false;\n  authService = inject(AuthService);\n  notify = inject(NotificationService);\n  \n  @ViewChild('firstnameCtrl') firstnameCtrl!: NgModel;\n  @ViewChild('lastnameCtrl') lastnameCtrl!: NgModel;\n  @ViewChild('emailCtrl') emailCtrl!: NgModel;\n  @ViewChild('passwordCtrl') passwordCtrl!: NgModel;\n\n  constructor(\n    private router: Router,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  togglePasswordVisibility() {\n    if (this.passwordVisible === \"password\") {\n      this.passwordVisible = \"text\"\n    } else {\n      this.passwordVisible = \"password\"\n    }\n  }\n\n  onSubmit() {\n    this.loading = true;\n    // Later: replace with real API call\n    if (this.emailCtrl.invalid || this.passwordCtrl.invalid || this.firstnameCtrl.invalid || this.lastnameCtrl.invalid) {\n      this.notify.showError(\"first name, last name, valid email, and valid password are required\");\n      this.loading = false;\n    } else {\n      this.authService.signup({ \n        first_name: this.firstname, last_name: this.lastname, email: this.email, password: this.password }).subscribe({\n        next: (response) => {\n          console.log('Signup successful', response);\n          this.notify.showSuccess('Signup successful! Please log in.');\n          this.loading = false;\n          this.router.navigateByUrl('/check-email', { state: { email: this.email } });\n        },\n        error: (error) => {\n          console.error('Signup failed', error);\n          this.notify.showError('Signup failed, Please try again.');\n          this.loading = false;\n          this.cdr.detectChanges();\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n      Maestro\n    \n    Meet Maestro\n    Your AI-powered assistant for mastering complex subjects, simplified.\n    \n      \n        \n        \n          First Name\n          \n          \n          @if (firstnameCtrl.invalid && firstnameCtrl.touched) {\n            \n              First Name is required\n            \n          }\n        \n        \n        \n          Last Name\n          \n          \n          @if (lastnameCtrl.invalid && lastnameCtrl.touched) {\n            \n              Last Name is required\n            \n          }\n        \n      \n\n      \n      \n        Email Address\n        \n        \n        @if (emailCtrl.invalid && emailCtrl.touched) {\n          \n            @if (emailCtrl.errors?.['required']) {Email is required}\n            @if (emailCtrl.errors?.['email']) {Invalid email format}\n          \n        }\n      \n\n      \n      \n        Password\n        \n        \n        @if (passwordCtrl.invalid && passwordCtrl.touched) {\n          \n            @if (passwordCtrl.errors?.['required']) {Password is required}\n            @if (passwordCtrl.errors?.['invalidPassword']) {Password must be at least 8 characters and include letters & numbers}\n          \n        }\n        \n          \n        \n      \n\n      \n        Next\n      \n    \n    \n      Have a Maestro account? Log In\n    \n  \n  \n  \n    \n    \n      \n      Maestro\n    \n  \n\n\n\n  \n  Signing Up...\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Maestro        Meet Maestro    Your AI-powered assistant for mastering complex subjects, simplified.                                    First Name                              @if (firstnameCtrl.invalid && firstnameCtrl.touched) {                          First Name is required                      }                                  Last Name                              @if (lastnameCtrl.invalid && lastnameCtrl.touched) {                          Last Name is required                      }                                  Email Address                        @if (emailCtrl.invalid && emailCtrl.touched) {                      @if (emailCtrl.errors?.[\\'required\\']) {Email is required}            @if (emailCtrl.errors?.[\\'email\\']) {Invalid email format}                  }                          Password                        @if (passwordCtrl.invalid && passwordCtrl.touched) {                      @if (passwordCtrl.errors?.[\\'required\\']) {Password is required}            @if (passwordCtrl.errors?.[\\'invalidPassword\\']) {Password must be at least 8 characters and include letters & numbers}                  }                                              Next                    Have a Maestro account? Log In                              Maestro          Signing Up...'\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'CheckEmail', 'selector': 'app-check-email'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'Signup'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignupPayload.html":{"url":"interfaces/SignupPayload.html","title":"interface - SignupPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignupPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/auth-payload.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            confirmPassword\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        confirmPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserModel } from \"./user.model\";\n\nexport interface LoginPayload {\n  email: string;\n  password: string;\n}\n\nexport interface LoginResponse {\n  user: UserModel;\n  accessToken: string;\n  refreshToken: string;\n}\n\nexport interface SignupPayload {\n  name: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nexport interface VerifyEmailResponse {\n  success: boolean;\n  message: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Subjects.html":{"url":"components/Subjects.html","title":"component - Subjects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  Subjects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/dashboard/subjects/subjects.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-subjects\n            \n\n\n            \n                imports\n                \n                                Header\n                            RouterLink\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./subjects.html\n            \n\n\n\n            \n                styleUrl\n                ./subjects.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadingSubjects\n                            \n                            \n                                old_subjects\n                            \n                            \n                                subjects\n                            \n                            \n                                subjectService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createNewSubject\n                            \n                            \n                                navigateSubject\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/dashboard/subjects/subjects.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createNewSubject\n                        \n                    \n                \n            \n            \n                \ncreateNewSubject()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/dashboard/subjects/subjects.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateSubject\n                        \n                    \n                \n            \n            \n                \nnavigateSubject(subject: SubjectModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/dashboard/subjects/subjects.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                subject\n                                            \n                                                            SubjectModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/dashboard/subjects/subjects.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loadingSubjects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/subjects/subjects.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        old_subjects\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubjectModel[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      \"id\": \"sj2nd-2dkap-uamds\",\n      \"name\": \"Mathematics\",\n      \"created_at\": new Date(\"2023-10-01T12:00:00Z\"),\n      \"status\": \"In Progress\",\n      \"completion\": 30,\n    },\n    {\n      \"id\": \"sj2nd-2dkap-uamds\",\n      \"name\": \"Science\",\n      \"created_at\": new Date(\"2023-10-01T12:00:00Z\"),\n      \"status\": \"Completed\",\n      \"completion\": 100,\n    },\n    {\n      \"id\": \"sj2nd-2dkap-uamds\",\n      \"name\": \"History\",\n      \"created_at\": new Date(\"2023-10-01T12:00:00Z\"),\n      \"status\": \"Not Started\",\n      \"completion\": 0,\n    },\n    {\n      \"id\": \"sj2nd-2dkap-uamds\",\n      \"name\": \"Literature\",\n      \"created_at\": new Date(\"2023-10-01T12:00:00Z\"),\n      \"status\": \"In Progress\",\n      \"completion\": 50,\n    }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/subjects/subjects.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subjects\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubjectModel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/subjects/subjects.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subjectService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SubjectsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/subjects/subjects.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, inject, OnInit } from '@angular/core';\nimport { Header } from '../../../shared/components/header/header';\nimport { Router, RouterLink } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { SubjectModel } from '../../../core/models/subject.model';\nimport { SubjectsService } from '../../../core/services/subjects.service';\n\n@Component({\n  selector: 'app-subjects',\n  imports: [Header, RouterLink, CommonModule],\n  templateUrl: './subjects.html',\n  styleUrl: './subjects.css'\n})\nexport class Subjects implements OnInit {\n  old_subjects: SubjectModel[] = [\n    {\n      \"id\": \"sj2nd-2dkap-uamds\",\n      \"name\": \"Mathematics\",\n      \"created_at\": new Date(\"2023-10-01T12:00:00Z\"),\n      \"status\": \"In Progress\",\n      \"completion\": 30,\n    },\n    {\n      \"id\": \"sj2nd-2dkap-uamds\",\n      \"name\": \"Science\",\n      \"created_at\": new Date(\"2023-10-01T12:00:00Z\"),\n      \"status\": \"Completed\",\n      \"completion\": 100,\n    },\n    {\n      \"id\": \"sj2nd-2dkap-uamds\",\n      \"name\": \"History\",\n      \"created_at\": new Date(\"2023-10-01T12:00:00Z\"),\n      \"status\": \"Not Started\",\n      \"completion\": 0,\n    },\n    {\n      \"id\": \"sj2nd-2dkap-uamds\",\n      \"name\": \"Literature\",\n      \"created_at\": new Date(\"2023-10-01T12:00:00Z\"),\n      \"status\": \"In Progress\",\n      \"completion\": 50,\n    }\n  ];\n  loadingSubjects = true;\n  subjects: SubjectModel[] = [];\n  subjectService = inject(SubjectsService)\n\n  constructor(private router: Router, private cdr: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this.subjectService.getAllSubjects().subscribe({\n      next: (response) => {\n        console.log(response)\n        this.subjects = response.sessions;\n        console.log(this.subjects)\n        this.loadingSubjects = false;\n        this.cdr.detectChanges();\n      },\n      error: (err) => {\n        console.error('Error fetching subjects:', err);\n        alert(\"Failed to load subjects. Please try again later.\");\n      }\n    });\n  }\n\n  createNewSubject() {\n    this.subjectService.createSubject().subscribe({\n      next: (response) => {\n        const newSubjectId = response.session.id;\n        this.router.navigate([`/subject-create/${newSubjectId}/naming-upload`]);\n      },\n      error: (err) => {\n        console.error('Error creating subject:', err);\n        alert(\"Failed to create a new subject. Please try again later.\");\n      }\n    });\n  }\n\n  navigateSubject(subject: SubjectModel) {\n    if (subject.status === 'pending naming' || subject.status === 'pending document upload' || subject.status === 'pending topic labelling') {\n      this.router.navigate([`/subject-create/${subject.id}/naming-upload`])\n    } else if (subject.status === 'pending topic selection' || subject.status === 'pending lesson generation') {\n      this.router.navigate([`/subject-create/${subject.id}/topic-preferences`])\n    } else if (subject.status === 'pending practice question generation') {\n      this.router.navigate([`/subject-create/${subject.id}/question-settings`])\n    } else {\n      this.router.navigate([`/lesson/${subject.id}`])\n    }\n  }\n}\n\n    \n\n    \n        \n@if (loadingSubjects) {\n  \n    \n      \n      Loading Subjects...\n    \n  \n} @else {\n  @if (subjects.length == 0) {\n    \n      Start Your Learning Journey\n      Create subjects to keep your study materials neatly categorized and easy to find.\n      \n        Create New Subject\n        \n      \n    \n  } @else {\n    \n      \n      \n        \n          \n          My Subjects\n        \n        \n          Create New Subject\n          \n        \n      \n  \n      \n      \n        @for (subject of subjects; track subject.id) {\n          \n          \n            \n              {{subject.name}}\n              {{subject.status}}\n            \n            \n              \n              \n                \n                  \n                \n              \n              {{(subject.completion*100).toFixed(0)}}%\n            \n          \n        }\n      \n    \n  }\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (loadingSubjects) {                  Loading Subjects...      } @else {  @if (subjects.length == 0) {          Start Your Learning Journey      Create subjects to keep your study materials neatly categorized and easy to find.              Create New Subject                    } @else {                                            My Subjects                          Create New Subject                                              @for (subject of subjects; track subject.id) {                                              {{subject.name}}              {{subject.status}}                                                                                                                                  {{(subject.completion*100).toFixed(0)}}%                              }            }}'\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'CheckEmail', 'selector': 'app-check-email'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'Subjects'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubjectsService.html":{"url":"injectables/SubjectsService.html","title":"injectable - SubjectsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  SubjectsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/subjects.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createSubject\n                            \n                            \n                                generateExam\n                            \n                            \n                                generateExercise\n                            \n                            \n                                generateLesson\n                            \n                            \n                                getAllSubjects\n                            \n                            \n                                getSubject\n                            \n                            \n                                ingestDocuments\n                            \n                            \n                                labelDocuments\n                            \n                            \n                                nameSubject\n                            \n                            \n                                selectTopics\n                            \n                            \n                                updateSessionProgress\n                            \n                            \n                                updateSessionStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createSubject\n                        \n                    \n                \n            \n            \n                \ncreateSubject()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/subjects.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateExam\n                        \n                    \n                \n            \n            \n                \ngenerateExam(sessionId: string, prefs: string, questionTypes: string[], timeLimit: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/subjects.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                prefs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                questionTypes\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                timeLimit\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateExercise\n                        \n                    \n                \n            \n            \n                \ngenerateExercise(sessionId: string, prefs: string, questionTypes: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/subjects.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                prefs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                questionTypes\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateLesson\n                        \n                    \n                \n            \n            \n                \ngenerateLesson(sessionId: string, prefs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/subjects.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                prefs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllSubjects\n                        \n                    \n                \n            \n            \n                \ngetAllSubjects()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/subjects.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSubject\n                        \n                    \n                \n            \n            \n                \ngetSubject(sessionId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/subjects.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingestDocuments\n                        \n                    \n                \n            \n            \n                \ningestDocuments(sessionId: string, files: File[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/subjects.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                files\n                                            \n                                                        File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelDocuments\n                        \n                    \n                \n            \n            \n                \nlabelDocuments(sessionId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/subjects.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nameSubject\n                        \n                    \n                \n            \n            \n                \nnameSubject(sessionId: string, name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/subjects.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectTopics\n                        \n                    \n                \n            \n            \n                \nselectTopics(sessionId: string, topicIds: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/subjects.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                topicIds\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSessionProgress\n                        \n                    \n                \n            \n            \n                \nupdateSessionProgress(sessionId: string, progress: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/subjects.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                progress\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSessionStatus\n                        \n                    \n                \n            \n            \n                \nupdateSessionStatus(sessionId: string, status: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/subjects.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpBaseService)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/subjects.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpBaseService } from './http-base.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SubjectsService {\n  http = inject(HttpBaseService);\n\n  getAllSubjects(): Observable {\n    return this.http.get('session/list');\n  }\n\n  createSubject(): Observable {\n    return this.http.post('session/create', {});\n  }\n\n  nameSubject(sessionId: string, name: string): Observable {\n    return this.http.put(`session/${sessionId}/name`, { name });\n  }\n\n  getSubject(sessionId: string): Observable {\n    return this.http.get(`session/${sessionId}/get`);\n  }\n\n  ingestDocuments(sessionId: string, files: File[]): Observable {\n    const formData = new FormData();\n    files.forEach((file) => formData.append('files', file));\n    return this.http.post(`session/${sessionId}/docs/ingest`, formData);\n  }\n\n  labelDocuments(sessionId: string): Observable {\n    return this.http.post(`session/${sessionId}/docs/label`, {});\n  }\n\n  selectTopics(sessionId: string, topicIds: string[]): Observable {\n    return this.http.post(`session/${sessionId}/select-topics`, { topics: topicIds });\n  }\n\n  generateLesson(sessionId: string, prefs: string): Observable {\n    return this.http.post(`session/${sessionId}/generate-lesson`, { lesson_preference: prefs });\n  }\n\n  generateExercise(sessionId: string, prefs: string, questionTypes: string[]): Observable {\n    return this.http.post(`session/${sessionId}/generate-exercises`, { exercise_preference: prefs, question_types: questionTypes });\n  }\n\n  generateExam(sessionId: string, prefs: string, questionTypes: string[], timeLimit: boolean = false): Observable {\n    return this.http.post(`session/${sessionId}/generate-exam`, { exam_preference: prefs, question_types: questionTypes, use_time_limit: timeLimit });\n  }\n\n  updateSessionStatus(sessionId: string, status: string): Observable {\n    return this.http.put(`session/${sessionId}/update-status`, { status });\n  }\n\n  updateSessionProgress(sessionId: string, progress: number): Observable {\n    return this.http.put(`session/${sessionId}/update-progress`, { update_tick: progress });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Subscription.html":{"url":"components/Subscription.html","title":"component - Subscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  Subscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/dashboard/subscription/subscription.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-subscription\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                plans\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onCancel\n                            \n                            \n                                onSubscribe\n                            \n                            \n                                    Private\n                                refresh\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(subSvc: SubscriptionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/dashboard/subscription/subscription.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subSvc\n                                                  \n                                                        \n                                                                        SubscriptionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/dashboard/subscription/subscription.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/dashboard/subscription/subscription.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubscribe\n                        \n                    \n                \n            \n            \n                \nonSubscribe(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/dashboard/subscription/subscription.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        refresh\n                        \n                    \n                \n            \n            \n                \n                        \n                    refresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/dashboard/subscription/subscription.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        plans\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/subscription/subscription.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/subscription/subscription.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SubscriptionService } from '../../../core/services/subscription.service';\nimport {Plan, SubscriptionStatus} from '../../../core/models/subscription.model';\n\n@Component({\n  selector: 'app-subscription',\n  standalone: true,\n  imports: [CommonModule],\n  template: ` `\n})\nexport class Subscription implements OnInit {\n  plans = signal([]);\n  status = signal(null);\n\n  constructor(private subSvc: SubscriptionService) {}\n\n  ngOnInit() {\n    this.subSvc.getPlans().subscribe(plans => this.plans.set(plans));\n    this.refresh();\n  }\n\n  onSubscribe(id: string) {\n    this.subSvc.subscribe(id).subscribe(() => this.refresh());\n  }\n\n  onCancel() {\n    this.subSvc.cancel().subscribe(() => this.refresh());\n  }\n\n  private refresh() {\n    this.subSvc.getStatus().subscribe(st => this.status.set(st));\n  }\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'CheckEmail', 'selector': 'app-check-email'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'Subscription'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/SubscriptionGuard.html":{"url":"guards/SubscriptionGuard.html","title":"guard - SubscriptionGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    SubscriptionGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n                File\n            \n            \n                src/app/core/guards/subscription.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(subSvc: SubscriptionService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/subscription.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subSvc\n                                                  \n                                                        \n                                                                        SubscriptionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/subscription.guard.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  Router\n} from '@angular/router';\nimport { map } from 'rxjs';\nimport { SubscriptionService } from '../services/subscription.service';\n\n@Injectable({ providedIn: 'root' })\nexport class SubscriptionGuard implements CanActivate {\n  constructor(\n    private subSvc: SubscriptionService,\n    private router: Router\n  ) {}\n\n  canActivate() {\n    return this.subSvc.getStatus().pipe(\n      map(st => {\n        if (!st.isActive) {\n          this.router.navigate(['/dashboard/subscription']);\n          return false;\n        }\n        return true;\n      })\n    );\n  }\n}\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubscriptionService.html":{"url":"injectables/SubscriptionService.html","title":"injectable - SubscriptionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  SubscriptionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/subscription.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                getPlans\n                            \n                            \n                                getStatus\n                            \n                            \n                                subscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/subscription.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/subscription.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlans\n                        \n                    \n                \n            \n            \n                \ngetPlans()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/subscription.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStatus\n                        \n                    \n                \n            \n            \n                \ngetStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/subscription.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribe\n                        \n                    \n                \n            \n            \n                \nsubscribe(planId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/subscription.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                planId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '${environment.apiUrl}/subscriptions'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/subscription.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Plan, SubscriptionStatus } from '../models/subscription.model';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({ providedIn: 'root' })\nexport class SubscriptionService {\n  private baseUrl = '${environment.apiUrl}/subscriptions';\n\n  constructor(private http: HttpClient) {}\n\n  getPlans(): Observable {\n    return this.http.get(`${this.baseUrl}/plans`);\n  }\n\n  subscribe(planId: string): Observable {\n    return this.http.post(`${this.baseUrl}/subscribe`, { planId });\n  }\n\n  getStatus(): Observable {\n    return this.http.get(`${this.baseUrl}/status`);\n  }\n\n  cancel() : Observable {\n    return this.http.post(`${this.baseUrl}/cancel`, {});\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SubscriptionStatus.html":{"url":"interfaces/SubscriptionStatus.html","title":"interface - SubscriptionStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SubscriptionStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/subscription.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            expiresAt\n                                        \n                                \n                                \n                                        \n                                            isActive\n                                        \n                                \n                                \n                                        \n                                            plan\n                                        \n                                \n                                \n                                        \n                                            startedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expiresAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plan\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        plan:         Plan\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Plan\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Plan {\n  id: string;\n  name: string;\n  price: number;\n  maxSubjects: number;\n  durationDays: number;\n}\n\nexport interface SubscriptionStatus {\n  plan: Plan;\n  startedAt: string;\n  expiresAt: string;\n  isActive: boolean;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Subtopic.html":{"url":"components/Subtopic.html","title":"component - Subtopic","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  Subtopic\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/lesson/subtopic/subtopic.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-subtopic\n            \n\n\n            \n                imports\n                \n                            MarkdownPipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./subtopic.html\n            \n\n\n\n            \n                styleUrl\n                ./subtopic.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                nextSubtopic\n                            \n                            \n                                prevSubtopic\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentTopic\n                            \n                            \n                                currentView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                cycleSubtopic\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentTopic\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/lesson/subtopic/subtopic.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        currentView\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/lesson/subtopic/subtopic.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        cycleSubtopic\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/lesson/subtopic/subtopic.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        nextSubtopic\n                        \n                    \n                \n            \n            \n                \nnextSubtopic()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/subtopic/subtopic.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prevSubtopic\n                        \n                    \n                \n            \n            \n                \nprevSubtopic()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/subtopic/subtopic.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, input, output } from '@angular/core';\nimport { MarkdownPipe } from '../../../shared/pipes/markdown-pipe';\n// import { MarkdownModule } from 'ngx-markdown';\n\n@Component({\n  selector: 'app-subtopic',\n  imports: [MarkdownPipe],\n  templateUrl: './subtopic.html',\n  styleUrl: './subtopic.css'\n})\nexport class Subtopic {\n  currentTopic = input();\n  currentView = input();\n  cycleSubtopic = output();\n\n  prevSubtopic() {\n    this.cycleSubtopic.emit({ id: this.currentTopic().id, direction: 'prev' });\n  }\n\n  nextSubtopic() {\n    this.cycleSubtopic.emit({ id: this.currentTopic().id, direction: 'next' });\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n    \n      {{ currentTopic().title }}\n      \n      {{ currentView().content.title }}\n    \n    \n    \n      \n        \n        Previous\n      \n      \n        Next\n        \n      \n    \n  \n\n  \n  \n    \n      \n    \n    {{ currentView().content.title }}\n  \n\n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ currentTopic().title }}            {{ currentView().content.title }}                                  Previous                    Next                                          {{ currentView().content.title }}      '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'CheckEmail', 'selector': 'app-check-email'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'Subtopic'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SubtopicModel.html":{"url":"interfaces/SubtopicModel.html","title":"interface - SubtopicModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SubtopicModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/subtopic.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            brief_description\n                                        \n                                \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            read\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        brief_description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        brief_description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        read\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        read:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SubtopicModel {\n  id: string;\n  title: string;\n  brief_description: string;\n  content: string;      // Text or markdown\n  read: boolean;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Toast.html":{"url":"components/Toast.html","title":"component - Toast","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  Toast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/toast/toast.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toast\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./toast.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                classes\n                            \n                            \n                                msg\n                            \n                            \n                                    Public\n                                notify\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(notify: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/toast/toast.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/toast/toast.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        classes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => ({\n    'fixed bottom-4 right-4 z-50 flex items-center space-x-3 p-4 rounded shadow-lg text-white':\n      true,\n    'bg-green-500': this.type() === 'success',\n    'bg-red-500': this.type() === 'error',\n    'bg-blue-500': this.type() === 'info',\n    'bg-yellow-500': this.type() === 'warn'\n  }))\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/toast/toast.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        msg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/toast/toast.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        notify\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/toast/toast.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/toast/toast.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, computed } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NotificationService } from '../../../core/services/notification.service';\n\n@Component({\n  selector: 'app-toast',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './toast.html',\n  // providers: [NotificationService]\n})\nexport class Toast {\n  msg: any;\n  type: any;\n  classes = computed(() => ({\n    'fixed bottom-4 right-4 z-50 flex items-center space-x-3 p-4 rounded shadow-lg text-white':\n      true,\n    'bg-green-500': this.type() === 'success',\n    'bg-red-500': this.type() === 'error',\n    'bg-blue-500': this.type() === 'info',\n    'bg-yellow-500': this.type() === 'warn'\n  }));\n\n  constructor(public notify: NotificationService) {\n    this.msg = this.notify.message;\n    this.type = this.notify.type;\n  }\n  close() { this.notify.clear(); }\n}\n    \n\n    \n        @if(msg()) {\n  \n    {{ msg() }}\n    ✕\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if(msg()) {      {{ msg() }}    ✕  }'\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'CheckEmail', 'selector': 'app-check-email'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'Toast'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TopicModel.html":{"url":"interfaces/TopicModel.html","title":"interface - TopicModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TopicModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/topic.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            brief_description\n                                        \n                                \n                                \n                                        \n                                            completed\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            selected\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        brief_description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        brief_description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        completed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TopicModel {\n  id: string;\n  title: string;\n  brief_description: string;\n  completed: boolean;\n  selected: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopicPreferences.html":{"url":"components/TopicPreferences.html","title":"component - TopicPreferences","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  TopicPreferences\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/subject-create/topic-preferences/topic-preferences.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-topic-preferences\n            \n\n\n            \n                imports\n                \n                                Header\n                                CreationStepTab\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./topic-preferences.html\n            \n\n\n\n            \n                styleUrl\n                ./topic-preferences.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                learningStyle\n                            \n                            \n                                    \n                                learningStyleCtrl\n                            \n                            \n                                lessonService\n                            \n                            \n                                loading\n                            \n                            \n                                notify\n                            \n                            \n                                old_topics\n                            \n                            \n                                subjectId\n                            \n                            \n                                subjectService\n                            \n                            \n                                topics\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                toggleTopicSelection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/subject-create/topic-preferences/topic-preferences.ts:68\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/subject-create/topic-preferences/topic-preferences.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/subject-create/topic-preferences/topic-preferences.ts:101\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleTopicSelection\n                        \n                    \n                \n            \n            \n                \ntoggleTopicSelection(topic_id: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/subject-create/topic-preferences/topic-preferences.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                topic_id\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        learningStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/topic-preferences/topic-preferences.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        learningStyleCtrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('learningStyleCtrl')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/topic-preferences/topic-preferences.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lessonService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LessonService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/topic-preferences/topic-preferences.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/topic-preferences/topic-preferences.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notify\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(NotificationService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/topic-preferences/topic-preferences.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        old_topics\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      \"id\": \"dksda-daidj2d-a2m90-1\",\n      \"name\": \"Definition\",\n      \"selected\": false\n    },\n    {\n      \"id\": \"dksda-daidj2d-a2m90-2\",\n      \"name\": \"Course Overview\",\n      \"selected\": false\n    },\n    {\n      \"id\": \"dksda-daidj2d-a2m90-3\",\n      \"name\": \"Key Features of the Course\",\n      \"selected\": false\n    },\n    {\n      \"id\": \"dksda-daidj2d-a2m90-4\",\n      \"name\": \"Learning Objectives\",\n      \"selected\": false\n    },\n    {\n      \"id\": \"dksda-daidj2d-a2m90-5\",\n      \"name\": \"Course Modules\",\n      \"selected\": false\n    },\n    {\n      \"id\": \"dksda-daidj2d-a2m90-6\",\n      \"name\": \"Assesment Methods\",\n      \"selected\": false\n    },\n    {\n      \"id\": \"dksda-daidj2d-a2m90-7\",\n      \"name\": \"Frequently Asked Questions (FAQs)\",\n      \"selected\": false\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/topic-preferences/topic-preferences.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subjectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/topic-preferences/topic-preferences.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subjectService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SubjectsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/topic-preferences/topic-preferences.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        topics\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TopicModel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/topic-preferences/topic-preferences.ts:65\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, inject, OnInit, ViewChild } from '@angular/core';\nimport { Header } from '../../../shared/components/header/header';\nimport { CreationStepTab } from '../creation-step-tab/creation-step-tab';\nimport { FormsModule, NgModel } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { TopicModel } from '../../../core/models/topic.model';\nimport { SubjectsService } from '../../../core/services/subjects.service';\nimport { LessonService } from '../../../core/services/lesson.service';\nimport { NotificationService } from '../../../core/services/notification.service'; //  {\n        if (topic.id === topic_id) {topic.selected = !topic.selected}\n      }\n    )\n  }\n\n  ngOnInit(): void {\n    // Fetch topics from backend\n    this.lessonService.getAllTopics(this.subjectId).subscribe({\n      next: (response) => {\n        console.log(response)\n        this.topics = response.topics\n        console.log(this.topics)\n        this.cdr.detectChanges();\n      },\n      error: (err) => {\n        console.error('Error fetching topics:', err);\n        this.notify.showError(\"Failed to load topics. Please try again later.\");\n      }\n    });\n  }\n\n  onSubmit() {\n    const selectedTopics = this.topics.filter((topic) => topic.selected);\n    this.loading = true;\n    if (selectedTopics.length == 0) {\n      this.notify.showError(\"At least one topic must be selected\");\n      this.loading = false;\n      return\n    }\n    if (this.learningStyleCtrl.invalid) {\n      this.notify.showError(\"Learning Style is required\");\n      this.loading = false;\n      return\n    }\n\n    // Here you would typically send the data to the backend\n    console.log(selectedTopics);\n    console.log(this.learningStyle);\n\n    // Select topics\n    this.subjectService.selectTopics(this.subjectId, selectedTopics.map((topic) => topic.id)).subscribe({\n      next: (response) => {\n        console.log(\"Topics selected:\", response);\n        \n        // Generate lesson\n        this.subjectService.generateLesson(this.subjectId, this.learningStyle).subscribe({\n          next: (response) => {\n            console.log(\"Lesson generated:\", response);\n            this.notify.showSuccess(\"Successfully generated lesson.\")\n            this.router.navigate([`/subject-create/${this.subjectId}/question-settings`])\n            this.loading = false;\n          },\n\n          error: (err) => {\n            this.loading = false;\n            console.error('Error generating lesson:', err);\n            this.notify.showError(\"Failed to generate lesson. Please try again later.\");\n            this.loading = false;\n            this.cdr.detectChanges();\n          }\n        });\n      },\n      \n      error: (err) => {\n        this.loading = false;\n        console.error('Error selecting topics:', err);\n        this.notify.showError(\"Failed to select topics. Please try again later.\");\n        this.loading = false;\n        this.cdr.detectChanges();\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n    \n    \n    \n  \n\n  Create Your Personalized Lesson\n  \n    Select the specific topics from your document that you want Maestro to focus on for your lesson.\n  \n\n  \n  \n    @for (topic of topics; track topic.id) {\n      \n        @if (topic.selected) {\n          \n          \n        }\n        {{topic.title}}\n      \n    }\n  \n\n  \n  Learning Style\n  \n    How would you like this lesson to be?\n    \n    \n    @if (learningStyleCtrl.invalid && learningStyleCtrl.touched) {\n      \n        Learning Style is required\n      \n    }\n    \n      \n        Next\n        \n      \n      \n        \n        loading...\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Create Your Personalized Lesson      Select the specific topics from your document that you want Maestro to focus on for your lesson.          @for (topic of topics; track topic.id) {              @if (topic.selected) {                            }        {{topic.title}}          }      Learning Style      How would you like this lesson to be?            @if (learningStyleCtrl.invalid && learningStyleCtrl.touched) {              Learning Style is required          }                  Next                                    loading...            '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'CheckEmail', 'selector': 'app-check-email'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'TopicPreferences'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserModel.html":{"url":"interfaces/UserModel.html","title":"interface - UserModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/user.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            first_name\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            last_name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserModel {\n  id: string;\n  email: string;\n  first_name: string;\n  last_name: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                            \n                                    Private\n                                currentUser$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchProfile\n                            \n                            \n                                getCurrentUser\n                            \n                            \n                                setCurrentUser\n                            \n                            \n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/user.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchProfile\n                        \n                    \n                \n            \n            \n                \nfetchProfile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \ngetCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCurrentUser\n                        \n                    \n                \n            \n            \n                \nsetCurrentUser(user: UserModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProfile\n                        \n                    \n                \n            \n            \n                \nupdateProfile(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/api/users'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { UserModel } from '../models/user.model';\n\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n  private baseUrl = '/api/users';\n  private currentUser$ = new BehaviorSubject(null);\n\n  constructor(private http: HttpClient) {}\n\n  fetchProfile(): Observable {\n    return this.http.get(`${this.baseUrl}/me`);\n  }\n\n  updateProfile(data: Partial): Observable {\n    return this.http.put(`${this.baseUrl}/me`, data);\n  }\n\n  setCurrentUser(user: UserModel): void {\n    this.currentUser$.next(user);\n  }\n\n  getCurrentUser(): Observable {\n    return this.currentUser$.asObservable();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VerifyEmail.html":{"url":"components/VerifyEmail.html","title":"component - VerifyEmail","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  VerifyEmail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/auth/verify-email/verify-email.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-verify-email\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./verify-email.html\n            \n\n\n\n            \n                styleUrl\n                ./verify-email.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authService\n                            \n                            \n                                verified\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/auth/verify-email/verify-email.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/verify-email/verify-email.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verified\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/verify-email/verify-email.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { AuthService } from '../../../core/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-verify-email',\n  imports: [],\n  templateUrl: './verify-email.html',\n  styleUrl: './verify-email.css'\n})\nexport class VerifyEmail {\n  verified = false;\n  authService = inject(AuthService);\n\n  constructor(private router: Router) {\n    // Extract token from URL query params then call verifyEmail\n    const urlParams = new URLSearchParams(window.location.search);\n    const token = urlParams.get('token');\n\n    if (token) {\n      this.authService.verifyEmail(token).subscribe({\n        next: (response) => {\n          console.log('Email verification successful', response);\n          this.verified = true;\n          this.router.navigateByUrl('/login');\n        },\n        error: (error) => {\n          console.error('Email verification failed', error);\n          alert('Email verification failed, Please try again.');\n          this.router.navigateByUrl('/signup');\n        }\n      });\n    } else {\n      alert('Invalid verification link.');\n      this.router.navigateByUrl('/signup');\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n      Maestro\n    \n    @if (verified) {\n      \n        Email verified successfully!Now redirecting to login...\n      \n    } @else {\n      \n        Please wait, verifying email...\n      \n    }\n  \n  \n  \n    \n    \n      \n      Maestro\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Maestro        @if (verified) {              Email verified successfully!Now redirecting to login...          } @else {              Please wait, verifying email...          }                          Maestro      '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'CheckEmail', 'selector': 'app-check-email'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'VerifyEmail'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VerifyEmailResponse.html":{"url":"interfaces/VerifyEmailResponse.html","title":"interface - VerifyEmailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VerifyEmailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/auth-payload.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserModel } from \"./user.model\";\n\nexport interface LoginPayload {\n  email: string;\n  password: string;\n}\n\nexport interface LoginResponse {\n  user: UserModel;\n  accessToken: string;\n  refreshToken: string;\n}\n\nexport interface SignupPayload {\n  name: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nexport interface VerifyEmailResponse {\n  success: boolean;\n  message: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.ts\n            \n            variable\n            routes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.ts\n            \n            component\n            App\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/core/guards/subscription.guard.ts\n            \n            guard\n            SubscriptionGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/core/interceptors/auth.interceptor.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/core/interceptors/http-error.interceptor.ts\n            \n            variable\n            httpErrorInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/models/answer.model.ts\n            \n            interface\n            AnswerModel\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/app/core/models/auth-payload.model.ts\n            \n            interface\n            LoginPayload\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/core/models/auth-payload.model.ts\n            \n            interface\n            LoginResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/core/models/auth-payload.model.ts\n            \n            interface\n            SignupPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/app/core/models/auth-payload.model.ts\n            \n            interface\n            VerifyEmailResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/core/models/chat-message.model.ts\n            \n            interface\n            ChatMessage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/core/models/chat-metadata.model.ts\n            \n            type alias\n            ChatMetadata\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/models/exam.model.ts\n            \n            interface\n            ExamModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/core/models/exercise.model.ts\n            \n            interface\n            ExerciseModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/core/models/question.model.ts\n            \n            interface\n            QuestionModel\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/app/core/models/question.model.ts\n            \n            interface\n            QuestionOption\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/app/core/models/question.model.ts\n            \n            interface\n            SaveQuestionData\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/app/core/models/question.model.ts\n            \n            type alias\n            QuestionType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/models/subject.model.ts\n            \n            type alias\n            SubjectModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/models/subscription.model.ts\n            \n            interface\n            Plan\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/app/core/models/subscription.model.ts\n            \n            interface\n            SubscriptionStatus\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/app/core/models/subtopic.model.ts\n            \n            interface\n            SubtopicModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/app/core/models/topic.model.ts\n            \n            interface\n            TopicModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/app/core/models/user.model.ts\n            \n            interface\n            UserModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/app/core/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                        src/app/core/services/chatbot.service.ts\n            \n            injectable\n            ChatbotService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/core/services/exercise.service.ts\n            \n            injectable\n            ExerciseService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/app/core/services/http-base.service.ts\n            \n            injectable\n            HttpBaseService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/app/core/services/lesson.service.ts\n            \n            injectable\n            LessonService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                        src/app/core/services/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/app/core/services/notification.service.ts\n            \n            type alias\n            NoticeType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/services/subjects.service.ts\n            \n            injectable\n            SubjectsService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                        src/app/core/services/subscription.service.ts\n            \n            injectable\n            SubscriptionService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/app/core/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/app/pages/auth/check-email/check-email.ts\n            \n            component\n            CheckEmail\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                        src/app/pages/auth/login/login.ts\n            \n            component\n            Login\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/app/pages/auth/signup/signup.ts\n            \n            component\n            Signup\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                        src/app/pages/auth/verify-email/verify-email.ts\n            \n            component\n            VerifyEmail\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/pages/dashboard/subjects/subjects.ts\n            \n            component\n            Subjects\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                        src/app/pages/dashboard/subscription/subscription.ts\n            \n            component\n            Subscription\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/app/pages/home/about-ignore/about.ts\n            \n            component\n            About\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/pages/home/contact/contact.ts\n            \n            component\n            Contact\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/app/pages/home/features/features.ts\n            \n            component\n            Features\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/pages/home/home/home.ts\n            \n            component\n            Home\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/pages/home/landing/landing.ts\n            \n            component\n            Landing\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/app/pages/home/pricing/pricing.ts\n            \n            component\n            Pricing\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/pages/lesson/chatbot/chatbot.ts\n            \n            component\n            Chatbot\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                        src/app/pages/lesson/lesson-page/lesson-page.ts\n            \n            component\n            LessonPage\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                        src/app/pages/lesson/practice/practice.ts\n            \n            component\n            Practice\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                        src/app/pages/lesson/sidebar/sidebar.ts\n            \n            component\n            Sidebar\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/app/pages/lesson/subtopic/subtopic.ts\n            \n            component\n            Subtopic\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/app/pages/not-found/not-found.ts\n            \n            component\n            NotFound\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/pages/subject-create/creation-step-tab/creation-step-tab.ts\n            \n            component\n            CreationStepTab\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/app/pages/subject-create/naming-upload/naming-upload.ts\n            \n            component\n            NamingUpload\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                        src/app/pages/subject-create/question-settings/question-settings.ts\n            \n            component\n            QuestionSettings\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                        src/app/pages/subject-create/question-settings/question-settings.ts\n            \n            class\n            ExamSettings\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/app/pages/subject-create/question-settings/question-settings.ts\n            \n            class\n            ExerciseSettings\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/pages/subject-create/topic-preferences/topic-preferences.ts\n            \n            component\n            TopicPreferences\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                        src/app/pages/subject-create/topic-preferences/topic-preferences.ts\n            \n            type alias\n            Topic\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/shared/components/confirm-logout/confirm-logout.ts\n            \n            component\n            ConfirmLogout\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/shared/components/header/header.ts\n            \n            component\n            Header\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                        src/app/shared/components/toast/toast.ts\n            \n            component\n            Toast\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/app/shared/directives/file-type.directive.ts\n            \n            directive\n            FileTypeDirective\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                        src/app/shared/directives/password-validator.ts\n            \n            directive\n            PasswordValidator\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/shared/pipes/markdown-pipe.ts\n            \n            pipe\n            MarkdownPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/shared/utils/file-validation.util.ts\n            \n            function\n            isAllowedFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ^20.3.2\n        \n            @angular/compiler : ^20.3.2\n        \n            @angular/core : ^20.3.2\n        \n            @angular/forms : ^20.3.2\n        \n            @angular/platform-browser : ^20.3.2\n        \n            @angular/router : ^20.3.2\n        \n            katex : ^0.16.22\n        \n            markdown-it : ^14.1.0\n        \n            markdown-it-katex : ^2.0.3\n        \n            ngx-markdown : ^20.0.0\n        \n            rxjs : ~7.8.0\n        \n            tailwind-scrollbar : ^1.3.1\n        \n            tslib : ^2.3.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            isAllowedFile   (src/.../file-validation.util.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/utils/file-validation.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isAllowedFile\n                        \n                    \n                \n            \n            \n                \nisAllowedFile(file: File, types, maxBytes: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                types\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                maxBytes\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \n\n\nMaestroFrontend\nThis project was generated using Angular CLI version 20.1.5.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n\n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    26 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    16 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ChatMetadata   (src/.../chat-metadata.model.ts)\n                        \n                        \n                            NoticeType   (src/.../notification.service.ts)\n                        \n                        \n                            QuestionType   (src/.../question.model.ts)\n                        \n                        \n                            SubjectModel   (src/.../subject.model.ts)\n                        \n                        \n                            Topic   (src/.../topic-preferences.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/models/chat-metadata.model.ts\n    \n    \n        \n            \n                \n                    \n                    ChatMetadata\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/services/notification.service.ts\n    \n    \n        \n            \n                \n                    \n                    NoticeType\n                \n            \n            \n                \n                        \"success\" | \"error\" | \"info\" | \"warn\"\n\n                \n            \n        \n    \n    src/app/core/models/question.model.ts\n    \n    \n        \n            \n                \n                    \n                    QuestionType\n                \n            \n            \n                \n                        \"multiple choice\" | \"multiple selection\" | \"essay\"\n\n                \n            \n        \n    \n    src/app/core/models/subject.model.ts\n    \n    \n        \n            \n                \n                    \n                    SubjectModel\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/pages/subject-create/topic-preferences/topic-preferences.ts\n    \n    \n        \n            \n                \n                    \n                    Topic\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            httpErrorInterceptor   (src/.../http-error.interceptor.ts)\n                        \n                        \n                            routes   (src/.../app.routes.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideBrowserGlobalErrorListeners(),\n    provideZonelessChangeDetection(),\n    provideRouter(routes),\n    provideHttpClient(withInterceptorsFromDi()),\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    provideMarkdown(),\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  apiUrl: 'https://maestro-backend-staging.onrender.com/api' // deployed API\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  apiUrl: 'http://localhost:5000/api' // local dev API\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/interceptors/http-error.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        httpErrorInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\n  const notify = inject(NotificationService);\n  return next(req).pipe({\n    error: (err: HttpErrorResponse) => {\n      const msg =\n        err.error?.message ||\n        err.statusText ||\n        'An unexpected error occurred.';\n      notify.showError(msg);\n      throw err;\n    }\n  } as any);\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Routes\n\n                    \n                \n                \n                    \n                        Default value : [\n  // Home\n  { path: '', loadComponent: () => \"import('./pages/home/home/home').then(m => m.Home)\" },\n\n  // Auth\n  { path: 'signup', loadComponent: () => \"import('./pages/auth/signup/signup').then(m => m.Signup)\" },\n  { path: 'login', loadComponent: () => \"import('./pages/auth/login/login').then(m => m.Login)\" },\n  { path: 'verify-email', loadComponent: () => \"import('./pages/auth/verify-email/verify-email').then(m => m.VerifyEmail)\" },\n  { path: 'check-email', loadComponent: () => \"import('./pages/auth/check-email/check-email').then(m => m.CheckEmail)\" },\n\n  // Dashboard\n  { path: 'dashboard', loadComponent: () => \"import('./pages/dashboard/subjects/subjects').then(m => m.Subjects)\" },\n  { path: 'dashboard/subscription', loadComponent: () => \"import('./pages/dashboard/subscription/subscription').then(m => m.Subscription)\" },\n\n  // Subject Creation (stepper flow, could be nested later if you want)\n  { path: 'subject-create/:sessionId/naming-upload', loadComponent: () => \"import('./pages/subject-create/naming-upload/naming-upload').then(m => m.NamingUpload)\" },\n  { path: 'subject-create/:sessionId/topic-preferences', loadComponent: () => \"import('./pages/subject-create/topic-preferences/topic-preferences').then(m => m.TopicPreferences)\" },\n  { path: 'subject-create/:sessionId/question-settings', loadComponent: () => \"import('./pages/subject-create/question-settings/question-settings').then(m => m.QuestionSettings)\" },\n\n  // Lesson\n  { path: 'lesson/:subjectId', loadComponent: () => \"import('./pages/lesson/lesson-page/lesson-page').then(m => m.LessonPage)\" },\n\n  // Not Found\n  { path: '**', loadComponent: () => \"import('./pages/not-found/not-found').then(m => m.NotFound)\" },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
