var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/About.html",[0,0.28]],["body/components/About.html",[0,0.375,1,1.378,2,0.175,3,0.175,4,1.141,5,1.141,6,1.141,7,0.155,8,3.842,9,3.842,10,0.971,11,1.782,12,1.781,13,1.434,14,5.804,15,1.683,16,5.804,17,0.417,18,0.015,19,0.547,20,1.053,21,0.257,22,0.574,23,5.026,24,1.141,25,1.434,26,1.492,27,0.933,28,1.765,29,1.141,30,0.645,31,1.141,32,1.141,33,1.053,34,1.141,35,1.053,36,1.141,37,1.141,38,1.053,39,1.141,40,0.971,41,1.011,42,1.011,43,1.141,44,1.053,45,1.141,46,0.971,47,1.141,48,1.011,49,1.141,50,1.053,51,1.141,52,1.053,53,1.053,54,1.141,55,0.933,56,1.141,57,1.053,58,1.141,59,1.141,60,1.053,61,1.141,62,1.053,63,1.141,64,1.053,65,1.141,66,0.971,67,1.011,68,1.141,69,1.053,70,1.141,71,0.971,72,1.141,73,1.053,74,1.141,75,1.053,76,1.141,77,1.053,78,1.141,79,1.053,80,1.141,81,1.053,82,1.053,83,1.141,84,1.011,85,1.096,86,0.859,87,0.971,88,1.011,89,1.141,90,1.011,91,1.096,92,1.141,93,0.011,94,0.011]],["title/interfaces/AnswerModel.html",[95,0.716,96,2.748]],["body/interfaces/AnswerModel.html",[2,0.214,3,0.214,7,0.19,18,0.015,21,0.315,93,0.013,94,0.013,95,1.007,96,4.693,97,1.932,98,4.701,99,0.315,100,0.733,101,7.383,102,7.383,103,6.394,104,7.383,105,6.394,106,7.383,107,1.1,108,0.41,109,2.636]],["title/components/App.html",[0,0.224,12,0.845]],["body/components/App.html",[0,0.361,1,1.308,2,0.162,3,0.162,4,1.055,5,1.055,6,1.055,7,0.144,10,0.899,11,1.773,12,1.777,13,1.362,15,1.598,17,0.626,18,0.015,19,0.506,20,1.308,21,0.238,22,0.531,24,1.055,25,1.362,26,1.418,27,0.863,28,1.711,29,1.055,30,0.62,31,1.055,32,1.055,33,0.974,34,1.055,35,0.974,36,1.055,37,1.055,38,0.974,39,1.055,40,0.899,41,0.936,42,0.936,43,1.055,44,0.974,45,1.055,46,1.457,47,1.055,48,0.936,49,1.055,50,0.974,51,1.055,52,0.974,53,0.974,54,1.055,55,0.863,56,1.055,57,0.974,58,1.055,59,1.055,60,0.974,61,1.055,62,0.974,63,1.055,64,0.974,65,1.055,66,0.899,67,0.936,68,1.055,69,0.974,70,1.055,71,0.899,72,1.055,73,0.974,74,1.055,75,0.974,76,1.055,77,0.974,78,1.055,79,1.579,80,1.055,81,0.974,82,0.974,83,1.055,84,0.936,85,1.014,86,0.794,87,0.899,88,0.936,89,1.055,90,0.936,91,1.014,92,1.055,93,0.011,94,0.011,99,0.238,100,0.613,110,3.555,111,2.568,112,6.224,113,5.512,114,5.512,115,6.224,116,5.39,117,4.431,118,0.899,119,0.936,120,5.512,121,0.67,122,4.104,123,2.706,124,1.461,125,4.104,126,2.238]],["title/interceptors/AuthInterceptor.html",[127,3.343,128,2.748]],["body/interceptors/AuthInterceptor.html",[2,0.183,3,0.183,7,0.162,17,0.679,18,0.016,19,0.571,21,0.269,22,0.6,30,0.595,55,0.974,93,0.012,94,0.012,99,0.269,108,0.318,121,0.974,124,1.648,128,4.249,129,4.631,130,4.011,131,1.155,132,5.968,133,1.581,134,4.011,135,4.032,136,3.046,137,4.631,138,1.255,139,1.062,140,4.642,141,5.968,142,6.975,143,2.676,144,6.975,145,4.631,146,5.169,147,0.896,148,2.799,149,1.802,150,5.968,151,5.169,152,4.631,153,3.054,154,4.011,155,5.968,156,1.648,157,4.631,158,2.39,159,2.057,160,1.72,161,2.037,162,5.137,163,4.631,164,4.631,165,4.631,166,4.631,167,4.011,168,4.011,169,1.731,170,4.631,171,4.631,172,4.631,173,4.631,174,4.631,175,4.631,176,4.631,177,4.011,178,4.011,179,4.631,180,4.631,181,4.011,182,4.631,183,3.297,184,3.602,185,2.158]],["title/injectables/AuthService.html",[135,2.231,149,1.165]],["body/injectables/AuthService.html",[2,0.151,3,0.151,7,0.134,17,0.637,18,0.016,19,0.471,21,0.222,22,0.495,30,0.644,55,1.105,71,1.15,84,1.198,86,1.162,93,0.01,94,0.01,99,0.222,100,0.584,107,1.018,108,0.389,111,1.782,118,0.837,119,0.872,121,1.209,131,1.017,135,3.037,138,1.358,139,1.15,147,1.388,148,3.235,149,1.586,156,1.361,160,2.229,161,1.305,162,4.669,169,2.029,186,1.873,187,3.312,188,3.523,189,5.269,190,6.462,191,4.466,192,5.254,193,5.254,194,3.957,195,5.254,196,5.026,197,3.824,198,5.254,199,3.824,200,1.874,201,3.824,202,3.824,203,5.254,204,3.824,205,3.741,206,5.254,207,3.735,208,3.824,209,3.312,210,5.254,211,3.824,212,3.741,213,3.824,214,3.824,215,3.824,216,1.42,217,2.211,218,2.723,219,1.974,220,3.312,221,3.824,222,3.824,223,1.873,224,2.975,225,1.305,226,3.824,227,3.824,228,2.975,229,2.975,230,3.037,231,3.824,232,2.975,233,3.824,234,3.824,235,3.824,236,5.254,237,5.254,238,2.865,239,3.824,240,3.824,241,1.483,242,3.312,243,3.312,244,3.824,245,3.312,246,3.824]],["title/interfaces/ChatMessage.html",[95,0.716,247,2.545]],["body/interfaces/ChatMessage.html",[2,0.227,3,0.227,7,0.201,18,0.015,21,0.334,93,0.013,94,0.013,95,1.067,97,2.046,99,0.334,100,0.759,107,1.085,108,0.388,247,4.499,248,4.472,249,4.979,250,3.884,251,5.854,252,5.854]],["title/components/Chatbot.html",[0,0.224,33,0.916]],["body/components/Chatbot.html",[0,0.274,1,0.921,2,0.1,3,0.1,4,0.649,5,1.216,6,0.649,7,0.088,10,1.162,11,1.701,12,1.696,13,0.959,15,1.125,17,0.593,18,0.016,19,0.311,20,0.921,21,0.146,22,0.327,24,0.649,25,0.959,26,0.998,27,0.531,28,1.365,29,0.649,30,0.471,31,0.649,32,0.649,33,1.436,34,0.649,35,0.599,36,0.649,37,0.649,38,0.599,39,0.649,40,0.553,41,0.576,42,0.576,43,0.649,44,0.599,45,0.649,46,0.553,47,0.649,48,0.576,49,0.649,50,0.599,51,0.649,52,0.599,53,0.599,54,0.649,55,0.531,56,0.649,57,0.599,58,0.649,59,0.649,60,0.599,61,0.649,62,0.599,63,0.649,64,0.599,65,0.649,66,0.553,67,0.576,68,0.649,69,0.599,70,0.649,71,0.553,72,0.649,73,0.599,74,0.649,75,0.599,76,0.649,77,0.599,78,0.649,79,0.599,80,0.649,81,0.599,82,0.599,83,0.649,84,0.576,85,0.624,86,0.489,87,0.553,88,0.576,89,0.649,90,0.576,91,0.624,92,0.649,93,0.008,94,0.008,99,0.274,100,0.431,107,0.642,108,0.335,118,1.379,119,1.436,121,1.195,131,0.751,143,1.023,147,1.027,156,0.898,160,2.698,161,1.614,169,1.539,185,1.808,200,1.539,216,0.937,225,1.614,238,1.376,247,3.117,250,2.44,251,3.019,252,3.678,253,2.186,254,2.44,255,2.91,256,3.881,257,3.881,258,4.728,259,3.499,260,4.728,261,4.728,262,6.048,263,2.316,264,4.728,265,5.307,266,5.307,267,5.307,268,4.597,269,2.389,270,5.456,271,2.733,272,2.243,273,4.728,274,3.881,275,2.559,276,2.524,277,2.524,278,2.524,279,2.524,280,2.524,281,2.524,282,2.524,283,4.597,284,3.779,285,3.361,286,3.267,287,3.361,288,3.881,289,2.243,290,4.728,291,2.763,292,2.763,293,3.881,294,4.728,295,3.881,296,1.724,297,3.881,298,3.881,299,3.881,300,3.881,301,4.728,302,4.728,303,3.881,304,2.524,305,3.361,306,2.524,307,4.728,308,1.664,309,3.881,310,2.524,311,2.524,312,3.881,313,2.524,314,2.67,315,2.524,316,2.524,317,2.91,318,3.881,319,2.243,320,2.524,321,1.797,322,1.176,323,3.361,324,2.186,325,2.186,326,1.964,327,1.964,328,1.376,329,2.524,330,1.664,331,2.524,332,2.524,333,1.325,334,2.186,335,2.186,336,2.524,337,3.881,338,2.524,339,2.524,340,2.524,341,2.739,342,5.307,343,2.524,344,2.524,345,1.376,346,3.881,347,2.524,348,2.524,349,2.524,350,1.964,351,2.524,352,1.797,353,0.937,354,1.964,355,2.524,356,3.361,357,3.019]],["title/injectables/ChatbotService.html",[149,1.165,259,2.545]],["body/injectables/ChatbotService.html",[2,0.192,3,0.192,7,0.17,10,1.555,17,0.668,18,0.016,19,0.599,21,0.282,22,0.63,30,0.614,93,0.012,94,0.012,99,0.282,100,0.685,107,1.055,108,0.328,111,2.266,118,1.065,119,1.109,121,1.102,131,1.192,138,1.294,139,1.095,147,1.192,148,3.106,149,1.859,156,1.731,169,1.786,186,2.382,188,3.872,212,4.384,216,1.806,217,2.811,218,3.462,223,2.382,250,3.781,259,4.06,268,5.333,275,4.683,284,3.462,326,3.783,358,4.212,359,6.158,360,6.158,361,4.863,362,4.384,363,4.683,364,6.158,365,4.863,366,4.863,367,4.863,368,4.863,369,4.863]],["title/components/ConfirmLogout.html",[0,0.224,35,0.916]],["body/components/ConfirmLogout.html",[0,0.356,1,1.283,2,0.157,3,0.157,4,1.025,5,1.025,6,1.025,7,0.14,10,0.873,11,1.77,12,1.768,13,1.336,15,1.568,17,0.509,18,0.015,19,0.491,20,1.283,21,0.231,22,0.516,24,1.025,25,1.336,26,1.39,27,0.838,28,1.691,29,1.025,30,0.611,31,1.025,32,1.025,33,0.947,34,1.025,35,1.561,36,1.922,37,1.025,38,0.947,39,1.025,40,0.873,41,0.909,42,0.909,43,1.025,44,0.947,45,1.025,46,0.873,47,1.025,48,0.909,49,1.025,50,0.947,51,1.025,52,0.947,53,0.947,54,1.025,55,0.838,56,1.025,57,0.947,58,1.025,59,1.025,60,0.947,61,1.025,62,0.947,63,1.025,64,0.947,65,1.025,66,0.873,67,0.909,68,1.025,69,0.947,70,1.025,71,0.873,72,1.025,73,0.947,74,1.025,75,0.947,76,1.025,77,0.947,78,1.025,79,0.947,80,1.025,81,0.947,82,0.947,83,1.025,84,0.909,85,0.985,86,0.772,87,0.873,88,0.909,89,1.025,90,0.909,91,0.985,92,1.025,93,0.01,94,0.01,108,0.288,121,0.882,177,4.682,189,5.512,225,1.845,272,2.305,319,3.545,363,3.564,370,5.312,371,4.771,372,3.453,373,3.344,374,5.406,375,5.406,376,5.695,377,5.346,378,3.988,379,3.988,380,1.953,381,4.682,382,3.328,383,4.682]],["title/components/Contact.html",[0,0.224,38,0.916]],["body/components/Contact.html",[0,0.364,1,1.32,2,0.164,3,0.164,4,1.069,5,1.069,6,1.069,7,0.146,10,0.91,11,1.775,12,1.773,13,1.374,15,1.613,17,0.391,18,0.015,19,0.512,20,0.987,21,0.241,22,0.538,24,1.069,25,1.374,26,1.43,27,0.874,28,1.72,29,1.069,30,0.624,31,1.069,32,1.069,33,0.987,34,1.069,35,0.987,36,1.069,37,1.069,38,1.767,39,1.069,40,0.91,41,0.948,42,0.948,43,1.069,44,1.487,45,1.069,46,0.91,47,1.069,48,1.428,49,1.069,50,0.987,51,1.069,52,0.987,53,0.987,54,1.069,55,0.874,56,1.069,57,0.987,58,1.069,59,1.069,60,0.987,61,1.069,62,0.987,63,1.069,64,1.487,65,1.069,66,0.91,67,0.948,68,1.069,69,0.987,70,1.069,71,0.91,72,1.069,73,0.987,74,1.069,75,0.987,76,1.069,77,0.987,78,1.069,79,0.987,80,1.069,81,0.987,82,0.987,83,1.069,84,0.948,85,1.027,86,0.805,87,0.91,88,0.948,89,1.069,90,0.948,91,1.027,92,1.069,93,0.011,94,0.011,384,3.601,385,5.561,386,5.561,387,3.647,388,3.666,389,3.666,390,5.561,391,5.561,392,5.561,393,4.816,394,5.561,395,4.158,396,5.561,397,5.561,398,5.561]],["title/components/CreationStepTab.html",[0,0.224,40,0.845]],["body/components/CreationStepTab.html",[0,0.324,1,1.134,2,0.132,3,0.132,4,0.859,5,0.859,6,0.859,7,0.117,10,0.731,11,1.746,12,1.743,13,1.18,15,1.385,17,0.449,18,0.016,19,0.411,20,1.134,21,0.194,22,0.432,24,0.859,25,1.18,26,1.228,27,0.702,28,1.566,29,0.859,30,0.556,31,0.859,32,0.859,33,0.793,34,0.859,35,0.793,36,0.859,37,0.859,38,0.793,39,0.859,40,1.333,41,1.573,42,1.785,43,0.859,44,0.793,45,0.859,46,0.731,47,0.859,48,0.761,49,0.859,50,0.793,51,0.859,52,0.793,53,0.793,54,0.859,55,0.702,56,0.859,57,0.793,58,0.859,59,0.859,60,0.793,61,0.859,62,0.793,63,0.859,64,0.793,65,0.859,66,0.731,67,0.761,68,0.859,69,0.793,70,0.859,71,0.731,72,0.859,73,0.793,74,0.859,75,0.793,76,0.859,77,0.793,78,0.859,79,0.793,80,0.859,81,0.793,82,0.793,83,0.859,84,0.761,85,0.825,86,0.646,87,0.731,88,0.761,89,0.859,90,0.761,91,0.825,92,0.859,93,0.009,94,0.009,99,0.194,100,0.531,107,0.827,108,0.324,118,1.221,119,1.272,121,1.093,131,0.925,147,0.646,158,2.465,200,0.968,241,1.852,269,2.94,317,2.94,333,1.904,373,3.041,380,1.635,399,3.762,400,5.975,401,3.988,402,2.892,403,3.433,404,2.94,405,2.94,406,4.777,407,4.777,408,5.578,409,5.578,410,3.747,411,5.578,412,5.578,413,3.988,414,3.339,415,3.339,416,2.202,417,3.339,418,3.339,419,3.339,420,3.339,421,3.339,422,3.339,423,3.339,424,3.339,425,4.777,426,4.137,427,6.088,428,5.273,429,3.339,430,4.777,431,3.339,432,3.339,433,2.892]],["title/interfaces/ExamModel.html",[95,0.716,434,3.002]],["body/interfaces/ExamModel.html",[2,0.224,3,0.224,7,0.199,17,0.534,18,0.015,21,0.329,93,0.013,94,0.013,95,1.053,97,2.018,99,0.329,100,0.752,107,0.983,108,0.385,139,1.204,434,5.265,435,4.912,436,2.557,437,4.94,438,4.94,439,4.085,440,3.733,441,4.912]],["title/classes/ExamSettings.html",[22,0.5,442,2.545]],["body/classes/ExamSettings.html",[0,0.262,2,0.122,3,0.122,7,0.108,11,0.677,12,0.677,13,0.763,15,0.896,17,0.65,18,0.016,19,0.381,20,0.733,21,0.179,22,0.585,40,0.989,41,0.704,42,1.03,46,0.989,66,0.677,67,1.424,93,0.009,94,0.009,99,0.179,100,0.502,107,0.725,108,0.348,109,1.677,118,1.286,119,1.339,121,0.958,124,1.1,126,1.685,136,1.252,143,2.163,148,1.915,156,1.1,161,1.055,169,1.703,185,3.04,216,1.147,225,1.541,241,1.751,254,2.331,263,1.513,271,1.786,291,2.2,296,2.371,314,3.112,322,1.44,333,1.822,341,3.565,353,1.982,399,3.406,401,1.786,404,1.902,442,3.872,443,2.2,444,4.119,445,4.119,446,2.2,447,3.8,448,5.075,449,3.8,450,3.8,451,3.09,452,3.09,453,3.215,454,3.09,455,3.09,456,1.902,457,1.513,458,1.786,459,2.037,460,1.513,461,1.786,462,1.902,463,2.403,464,2.403,465,2.978,466,1.786,467,1.786,468,1.594,469,1.786,470,3.513,471,3.513,472,2.403,473,2.403,474,2.403,475,3.513,476,2.403,477,1.786,478,4.152,479,4.152,480,3.215,481,1.786,482,3.513,483,3.513,484,2.403,485,3.513,486,2.611,487,2.2,488,3.513,489,2.403,490,3.215,491,2.331,492,3.513,493,2.403,494,3.513,495,2.403,496,2.403,497,4.568,498,2.037,499,2.2,500,3.513,501,2.403,502,3.215,503,2.403,504,2.403,505,2.2,506,2.2,507,2.403,508,4.016,509,2.403,510,2.403,511,4.152,512,2.403,513,3.513,514,3.513,515,3.513,516,3.215,517,4.568,518,3.513,519,3.8,520,3.513,521,3.215,522,2.403,523,2.403,524,3.215,525,1.902,526,2.403,527,2.403]],["title/interfaces/ExerciseModel.html",[95,0.716,528,3.002]],["body/interfaces/ExerciseModel.html",[2,0.224,3,0.224,7,0.199,17,0.534,18,0.015,21,0.329,93,0.013,94,0.013,95,1.053,97,2.018,99,0.329,100,0.752,107,0.983,108,0.385,139,1.204,436,2.557,437,4.94,438,4.94,439,4.085,440,3.733,441,4.912,528,5.265,529,4.912]],["title/injectables/ExerciseService.html",[149,1.165,530,3.002]],["body/injectables/ExerciseService.html",[2,0.191,3,0.191,7,0.169,17,0.688,18,0.016,19,0.596,21,0.281,22,0.626,30,0.672,93,0.012,94,0.012,96,3.442,99,0.281,100,0.682,107,1.016,108,0.359,111,2.253,118,1.059,119,1.102,121,1.156,131,1.188,133,1.65,138,1.417,139,1.199,147,1.188,148,3.101,149,1.852,153,3.188,156,1.721,159,2.147,160,2.502,169,1.779,186,2.368,188,3.345,223,2.368,436,2.094,530,4.772,531,4.188,532,5.242,533,6.135,534,5.313,535,3.761,536,5.046,537,6.135,538,6.135,539,4.835,540,6.135,541,7.088,542,4.835,543,6.135,544,4.835,545,2.976,546,3.761,547,4.835,548,4.835]],["title/classes/ExerciseSettings.html",[22,0.5,465,2.545]],["body/classes/ExerciseSettings.html",[0,0.265,2,0.124,3,0.124,7,0.11,11,0.687,12,0.687,13,0.776,15,0.91,17,0.653,18,0.016,19,0.387,20,0.745,21,0.182,22,0.592,40,1.001,41,0.716,42,1.042,46,1.001,66,0.687,67,1.434,93,0.009,94,0.009,99,0.182,100,0.508,107,0.732,108,0.335,109,1.697,118,1.18,119,1.228,121,0.879,124,1.117,126,1.712,136,1.272,143,2.183,148,1.937,156,1.117,161,1.072,169,1.716,185,3.057,216,1.166,225,1.56,241,1.217,254,2.358,263,1.538,271,1.815,291,2.235,296,2.392,314,3.122,322,1.463,333,1.839,341,3.581,353,2,399,3.226,401,1.815,404,1.933,442,3.552,443,2.235,444,3.901,445,3.901,446,2.235,447,3.836,448,5.104,449,3.836,450,2.235,453,3.253,456,1.933,457,1.538,458,1.815,459,2.07,460,1.538,461,1.815,462,1.933,463,2.442,464,2.442,465,3.552,466,1.815,467,1.815,468,1.62,469,1.815,470,3.554,471,3.554,472,2.442,473,2.442,474,2.442,475,3.554,476,2.442,477,1.815,478,4.191,479,4.191,480,3.253,481,1.815,482,3.554,483,3.554,484,2.442,485,3.554,486,2.641,487,2.235,488,3.554,489,2.442,490,3.253,491,2.358,492,3.554,493,2.442,494,3.554,495,2.442,496,2.442,497,4.602,498,2.07,499,2.235,500,3.554,501,2.442,502,3.253,503,2.442,504,2.442,505,2.235,506,2.235,507,2.442,508,4.039,509,2.442,510,2.442,511,4.191,512,2.442,513,3.554,514,3.554,515,3.554,516,3.253,517,4.602,518,3.554,519,3.836,520,3.554,521,3.253,522,2.442,523,2.442,524,3.253,525,1.933,526,2.442,527,2.442,549,3.14,550,3.14,551,3.14]],["title/components/Features.html",[0,0.224,44,0.916]],["body/components/Features.html",[0,0.337,1,1.196,2,0.142,3,0.142,4,0.926,5,0.926,6,0.926,7,0.126,10,0.788,11,1.757,12,1.754,13,1.245,15,1.461,17,0.339,18,0.015,19,0.444,20,0.855,21,0.209,22,0.466,24,0.926,25,1.245,26,1.296,27,0.757,28,1.619,29,0.926,30,0.579,31,0.926,32,0.926,33,0.855,34,0.926,35,0.855,36,0.926,37,0.926,38,0.855,39,0.926,40,0.788,41,0.821,42,0.821,43,0.926,44,1.708,45,0.926,46,0.788,47,0.926,48,0.821,49,0.926,50,0.855,51,0.926,52,0.855,53,0.855,54,0.926,55,0.757,56,0.926,57,0.855,58,0.926,59,0.926,60,0.855,61,0.926,62,1.38,63,0.926,64,0.855,65,0.926,66,0.788,67,0.821,68,0.926,69,0.855,70,0.926,71,0.788,72,0.926,73,0.855,74,0.926,75,0.855,76,0.926,77,0.855,78,0.926,79,0.855,80,0.926,81,0.855,82,0.855,83,0.926,84,0.821,85,0.89,86,0.697,87,0.788,88,0.821,89,0.926,90,0.821,91,0.89,92,0.926,93,0.01,94,0.01,387,3.745,389,4.744,491,2.6,552,3.119,553,5.039,554,5.039,555,5.039,556,5.039,557,5.039,558,4.898,559,5.039,560,5.039,561,3.102,562,4.364,563,4.364,564,3.323,565,5.039,566,4.364,567,3.323,568,3.323,569,5.039,570,5.453,571,4.364,572,5.039,573,5.039,574,5.039,575,5.039,576,3.323,577,5.039,578,5.039,579,6.297,580,6.297,581,5.039,582,5.039,583,5.039,584,5.039,585,5.039,586,4.364,587,5.039,588,4.364,589,5.039,590,5.039,591,3.102,592,5.039,593,5.039,594,3.92,595,5.039,596,4.364,597,5.039,598,5.039,599,3.323,600,5.039,601,5.039,602,5.039]],["title/directives/FileTypeDirective.html",[27,0.811,88,0.88]],["body/directives/FileTypeDirective.html",[2,0.159,3,0.159,7,0.231,10,0.883,11,1.193,17,0.512,18,0.016,19,0.497,21,0.234,22,0.522,27,1.145,30,0.402,87,0.883,88,1.242,93,0.011,94,0.011,99,0.234,107,0.74,108,0.367,118,1.446,119,1.242,121,1.16,131,1.054,138,0.848,139,0.717,147,0.78,161,2.105,169,1.169,200,1.169,209,3.492,225,1.859,241,2.112,269,3.353,272,3.148,308,2.659,317,4.066,319,3.565,333,1.859,335,4.717,353,2.022,377,5.367,405,3.353,440,2.081,603,6.295,604,3.492,605,6.899,606,5.447,607,5.342,608,6.168,609,6.168,610,5.447,611,4.717,612,4.032,613,5.447,614,5.447,615,3.148,616,5.447,617,4.717,618,6.606,619,4.032,620,4.717,621,4.717,622,5.447,623,4.717,624,4.032,625,6.606,626,5.447,627,6.606,628,4.032,629,5.447,630,4.032,631,4.688,632,5.447,633,5.447,634,5.447,635,4.032,636,4.032,637,3.136,638,4.032,639,4.032,640,4.032,641,4.032,642,4.717,643,4.032,644,4.032,645,4.032,646,4.032,647,4.032,648,4.032,649,4.032,650,3.136,651,4.032,652,4.032,653,4.032,654,2.081]],["title/components/Header.html",[0,0.224,46,0.845]],["body/components/Header.html",[0,0.339,1,1.206,2,0.144,3,0.144,4,0.937,5,0.937,6,0.937,7,0.128,10,0.798,11,1.758,12,1.756,13,1.255,17,0.626,18,0.016,19,0.449,20,1.206,21,0.211,22,0.472,24,0.937,25,1.255,26,1.306,27,0.766,28,1.627,29,0.937,30,0.631,31,0.937,32,0.937,33,0.865,34,0.937,35,1.713,36,1.306,37,0.937,38,0.865,39,0.937,40,0.798,41,0.83,42,0.83,43,0.937,44,0.865,45,0.937,46,1.509,47,0.937,48,1.334,49,0.937,50,0.865,51,0.937,52,0.865,53,0.865,54,0.937,55,0.766,56,0.937,57,0.865,58,0.937,59,0.937,60,0.865,61,0.937,62,0.865,63,0.937,64,0.865,65,0.937,66,0.798,67,0.83,68,0.937,69,0.865,70,0.937,71,0.798,72,0.937,73,0.865,74,0.937,75,1.388,76,0.937,77,0.865,78,0.937,79,0.865,80,0.937,81,0.865,82,0.865,83,0.937,84,0.83,85,0.9,86,0.705,87,0.798,88,0.83,89,0.937,90,0.83,91,0.9,92,0.937,93,0.01,94,0.01,99,0.211,100,0.565,108,0.194,118,0.798,119,0.83,121,1.086,123,2.402,124,1.296,131,0.983,133,1.243,134,3.155,135,3.658,136,2.866,138,0.766,139,0.648,140,3.951,147,1.132,159,1.618,160,1.352,181,3.155,189,4.55,200,1.696,333,1.734,371,2.833,373,3.189,380,1.784,387,2.77,405,3.127,655,3.155,656,4.55,657,5.849,658,5.08,659,5.849,660,6.328,661,6.328,662,5.08,663,3.642,664,3.642,665,3.642,666,5.08,667,2.833,668,3.642,669,5.08,670,3.642,671,4.399]],["title/components/Home.html",[0,0.224,48,0.88]],["body/components/Home.html",[0,0.337,1,1.195,2,0.142,3,0.142,4,0.925,5,0.925,6,0.925,7,0.126,10,0.787,11,1.756,12,1.754,13,1.244,15,1.46,17,0.663,18,0.016,19,0.443,20,1.195,21,0.209,22,0.466,24,0.925,25,1.244,26,1.295,27,0.756,28,1.618,29,0.925,30,0.66,31,0.925,32,0.925,33,0.853,34,0.925,35,0.853,36,0.925,37,0.925,38,1.673,39,0.925,40,0.787,41,0.82,42,0.82,43,0.925,44,1.673,45,0.925,46,0.787,47,0.925,48,1.565,49,0.925,50,1.494,51,0.925,52,0.853,53,0.853,54,0.925,55,0.756,56,0.925,57,0.853,58,0.925,59,0.925,60,0.853,61,0.925,62,0.853,63,0.925,64,1.673,65,0.925,66,0.787,67,0.82,68,0.925,69,0.853,70,0.925,71,0.787,72,0.925,73,0.853,74,0.925,75,0.853,76,0.925,77,0.853,78,0.925,79,0.853,80,0.925,81,0.853,82,0.853,83,0.925,84,0.82,85,0.888,86,0.696,87,0.787,88,0.82,89,0.925,90,0.82,91,0.888,92,0.925,93,0.01,94,0.01,99,0.209,108,0.268,121,0.948,124,1.28,131,0.974,133,1.718,136,2.782,138,1.058,139,0.896,147,0.974,160,1.869,184,2.797,200,1.684,296,1.597,380,1.761,410,3.874,672,3.114,673,5.034,674,5.034,675,5.034,676,1.856,677,5.809,678,6.293,679,3.596,680,3.596,681,5.034,682,6.293,683,3.596,684,5.034,685,3.596,686,3.596,687,3.596,688,3.596,689,3.596,690,3.596]],["title/injectables/HttpBaseService.html",[149,1.165,217,2.231]],["body/injectables/HttpBaseService.html",[2,0.157,3,0.157,7,0.139,17,0.618,18,0.016,19,0.49,21,0.231,22,0.515,30,0.654,93,0.01,94,0.01,99,0.231,100,0.6,107,1.043,108,0.392,111,1.852,116,5.303,118,1.181,119,1.23,121,1.181,131,1.044,138,1.549,139,1.168,147,1.329,148,3.166,149,1.629,153,2.621,156,1.415,160,2.629,161,1.357,162,4.763,167,3.443,168,3.443,169,1.991,186,1.947,188,3.339,216,1.476,217,3.118,223,1.947,225,1.357,242,3.443,532,4.763,536,2.83,545,2.447,546,3.092,691,6.381,692,3.443,693,5.394,694,6.567,695,5.394,696,5.394,697,5.394,698,3.975,699,6.567,700,6.567,701,5.394,702,3.975,703,3.975,704,6.567,705,5.394,706,7.368,707,3.975,708,5.394,709,3.975,710,5.394,711,3.975,712,5.394,713,3.975,714,3.975,715,6.567,716,6.567,717,3.975,718,3.975,719,3.975]],["title/components/Landing.html",[0,0.224,50,0.916]],["body/components/Landing.html",[0,0.329,1,1.157,2,0.135,3,0.135,4,0.883,5,0.883,6,0.883,7,0.12,10,0.752,11,1.75,12,1.747,13,1.204,15,1.413,17,0.533,18,0.016,19,0.423,20,1.157,21,0.199,22,0.445,24,0.883,25,1.204,26,1.253,27,0.722,28,1.586,29,0.883,30,0.614,31,0.883,32,0.883,33,0.815,34,0.883,35,0.815,36,0.883,37,0.883,38,1.345,39,0.883,40,0.752,41,0.783,42,0.783,43,0.883,44,1.345,45,0.883,46,0.752,47,0.883,48,1.292,49,0.883,50,1.606,51,0.883,52,0.815,53,0.815,54,0.883,55,0.722,56,0.883,57,0.815,58,0.883,59,0.883,60,0.815,61,0.883,62,0.815,63,0.883,64,1.345,65,0.883,66,0.752,67,0.783,68,0.883,69,0.815,70,0.883,71,0.752,72,0.883,73,0.815,74,0.883,75,0.815,76,0.883,77,0.815,78,0.883,79,0.815,80,0.883,81,0.815,82,0.815,83,0.883,84,0.783,85,0.849,86,0.665,87,0.752,88,0.783,89,0.883,90,0.783,91,0.849,92,0.883,93,0.009,94,0.009,99,0.199,108,0.26,121,1.135,124,1.222,131,0.943,133,1.172,136,2.741,138,0.722,139,0.611,147,1.26,159,1.525,200,1.888,225,1.172,272,2.817,289,2.817,319,3.275,373,3.089,377,4.407,380,1.682,387,3.688,389,4.066,561,3,568,3.214,571,4.221,594,3.791,596,4.221,676,1.772,720,2.974,721,4.874,722,4.874,723,6.166,724,6.166,725,6.166,726,6.166,727,6.166,728,5.665,729,4.874,730,3.434,731,3.434,732,3.434,733,3.434,734,3.434,735,3.434,736,3.434,737,3.434,738,3.434,739,3.434,740,4.221,741,4.874,742,3.791,743,4.874,744,4.874,745,4.874,746,3.47,747,3.791,748,3.791,749,3.47,750,4.221,751,4.874]],["title/components/LessonPage.html",[0,0.224,52,0.916]],["body/components/LessonPage.html",[0,0.139,1,0.419,2,0.039,3,0.039,4,0.253,5,0.253,6,0.253,7,0.034,10,0.216,11,1.459,12,1.448,13,0.436,15,0.511,17,0.485,18,0.016,19,0.121,20,0.419,21,0.057,22,0.128,24,0.253,25,0.436,26,0.454,27,0.207,28,0.75,29,0.253,30,0.456,31,0.253,32,0.253,33,0.692,34,0.253,35,0.234,36,0.253,37,0.253,38,0.234,39,0.253,40,0.216,41,0.225,42,0.225,43,0.253,44,0.234,45,0.253,46,0.638,47,0.253,48,0.225,49,0.253,50,0.234,51,0.253,52,0.692,53,0.961,54,0.253,55,0.207,56,0.253,57,0.234,58,0.253,59,0.253,60,0.234,61,0.253,62,0.884,63,0.253,64,0.234,65,0.253,66,0.216,67,0.764,68,0.253,69,0.692,70,0.253,71,0.216,72,0.253,73,0.419,74,0.253,75,0.234,76,0.253,77,1.501,78,0.253,79,0.234,80,0.253,81,0.234,82,1.183,83,0.253,84,0.225,85,0.243,86,0.191,87,0.216,88,0.225,89,0.253,90,0.225,91,0.243,92,0.253,93,0.003,94,0.003,99,0.057,100,0.196,107,0.588,108,0.32,117,3.673,118,0.947,119,0.986,121,0.995,123,0.65,126,0.537,131,0.341,133,0.336,138,0.851,139,0.663,143,1.64,147,0.927,156,0.351,158,0.91,159,0.438,161,2.135,169,1.446,183,1.256,185,1.562,200,1.255,216,0.366,224,0.766,225,0.336,238,0.537,241,2.524,247,1.578,250,0.91,251,1.372,252,1.372,259,1.922,263,0.483,270,2.524,271,1.938,275,2.456,284,1.256,285,0.853,292,2.075,296,1.489,305,1.527,314,2.881,323,1.527,324,0.853,325,0.853,326,0.766,328,0.537,333,1.949,334,0.853,345,0.537,350,0.766,353,0.366,354,0.766,356,1.527,363,0.65,403,1.474,410,1.794,436,2.24,437,2.668,438,2.21,453,1.256,456,1.794,457,0.483,458,0.57,459,1.163,466,1.384,467,1.019,481,3.525,486,1.019,491,3.003,499,0.702,502,1.256,505,0.702,506,0.702,516,0.702,519,0.702,545,1.794,567,3.015,576,3.764,586,2.073,591,1.794,599,0.65,611,0.853,631,1.163,654,0.91,746,0.702,749,0.702,750,0.853,752,5.352,753,4.807,754,0.853,755,1.764,756,1.764,757,2.394,758,1.704,759,1.794,760,3.352,761,1.764,762,1.764,763,1.764,764,2.915,765,2.915,766,2.915,767,1.764,768,1.764,769,2.915,770,0.985,771,1.764,772,1.256,773,1.764,774,0.985,775,0.985,776,1.764,777,0.985,778,1.764,779,0.985,780,1.862,781,0.985,782,0.985,783,0.985,784,0.985,785,1.764,786,0.985,787,0.985,788,1.764,789,0.985,790,0.985,791,0.985,792,0.985,793,0.985,794,3.725,795,1.764,796,1.764,797,0.985,798,1.372,799,0.985,800,0.985,801,0.985,802,0.985,803,0.985,804,0.985,805,0.985,806,0.985,807,0.766,808,0.853,809,1.527,810,1.764,811,4.985,812,2.394,813,2.915,814,0.985,815,3.557,816,4.047,817,1.764,818,0.985,819,0.985,820,0.985,821,0.985,822,0.985,823,0.985,824,3.365,825,1.764,826,2.394,827,0.985,828,1.764,829,1.764,830,0.985,831,0.985,832,0.985,833,0.985,834,0.985,835,2.394,836,0.985,837,0.985,838,0.853,839,0.985,840,0.985,841,1.764,842,2.915,843,3.505,844,2.394,845,4.047,846,0.985,847,4.047,848,1.685,849,1.019,850,5.709,851,3.764,852,5.709,853,0.985,854,5.709,855,3.113,856,2.456,857,0.985,858,2.387,859,0.985,860,2.608,861,0.985,862,2.394,863,0.985,864,1.764,865,0.985,866,1.764,867,0.985,868,0.985,869,1.764,870,0.985,871,0.985,872,1.764,873,0.985,874,0.985,875,2.394,876,0.985,877,0.985,878,1.384,879,2.394,880,2.915,881,2.394,882,1.764,883,0.985,884,0.985,885,0.985,886,0.985,887,2.915,888,0.985,889,0.985,890,0.985,891,0.985,892,0.985,893,2.394,894,0.985,895,0.985,896,0.985,897,0.985,898,0.985,899,0.985,900,1.764,901,1.764,902,2.524,903,0.853,904,0.985,905,0.985,906,0.985,907,0.985,908,0.985,909,0.985,910,0.985,911,0.985,912,2.394,913,0.985,914,0.985,915,0.985,916,0.985,917,0.985,918,0.985,919,0.985,920,0.985,921,0.985,922,0.985,923,0.985,924,0.985,925,0.985,926,0.985,927,0.985,928,0.985,929,0.985,930,0.985,931,0.985,932,0.985,933,1.372,934,0.985,935,2.903,936,0.985,937,0.985,938,2.394,939,0.766,940,0.985,941,2.394,942,0.985,943,2.394,944,0.985,945,0.985,946,0.985,947,1.764,948,0.985,949,2.075,950,0.985,951,0.985,952,1.372,953,0.985,954,0.853,955,0.985,956,0.985,957,0.985,958,0.985,959,0.985,960,0.985,961,1.372,962,0.766,963,2.394,964,3.352,965,1.372,966,0.985,967,0.985,968,0.985,969,1.764,970,0.985,971,0.985,972,0.985,973,2.073,974,0.985,975,3.226,976,0.985,977,0.985,978,0.985,979,0.985,980,0.985,981,2.915,982,1.764,983,0.702,984,0.985,985,0.985,986,0.985,987,1.527,988,1.764,989,0.985,990,1.764,991,3.352,992,0.985,993,1.764,994,2.915,995,1.764,996,0.985,997,0.985,998,0.985,999,4.327,1000,0.985,1001,1.764,1002,0.985,1003,0.985,1004,0.985,1005,0.766,1006,0.853,1007,0.985,1008,3.352,1009,1.764,1010,1.764,1011,2.073,1012,3.352,1013,0.985,1014,0.985,1015,0.985,1016,0.853,1017,0.985,1018,1.764,1019,0.985,1020,0.985,1021,0.985,1022,0.985,1023,0.985,1024,0.985,1025,0.985,1026,1.764,1027,2.915,1028,0.985,1029,0.985,1030,3.725,1031,0.985,1032,0.985,1033,0.985,1034,2.394,1035,0.985,1036,0.985,1037,0.985,1038,0.985,1039,0.985,1040,0.853,1041,1.527,1042,0.853,1043,1.764,1044,0.985,1045,2.394,1046,0.985,1047,0.985,1048,0.985,1049,0.985,1050,0.985,1051,0.985,1052,0.766,1053,0.985,1054,0.985,1055,2.915,1056,1.764,1057,0.985,1058,1.764,1059,1.764,1060,1.764,1061,1.527,1062,1.764,1063,0.985,1064,0.985,1065,1.764,1066,0.985,1067,0.766,1068,1.372,1069,0.985,1070,2.073,1071,0.985,1072,2.073,1073,1.764,1074,0.853,1075,0.985,1076,2.394,1077,0.985,1078,2.394,1079,1.764,1080,2.394,1081,1.764,1082,2.394,1083,2.394,1084,0.985,1085,2.394,1086,2.394,1087,2.394,1088,0.985,1089,1.764,1090,0.985,1091,0.985,1092,0.985,1093,0.985,1094,5.16,1095,1.764,1096,1.764,1097,1.764,1098,2.915,1099,1.764,1100,1.764,1101,1.764,1102,1.527,1103,1.527,1104,2.915,1105,1.764]],["title/injectables/LessonService.html",[149,1.165,759,2.376]],["body/injectables/LessonService.html",[2,0.134,3,0.134,7,0.119,17,0.577,18,0.016,19,0.418,21,0.197,22,0.439,30,0.706,67,0.773,93,0.009,94,0.009,99,0.197,100,0.537,105,5.308,107,1.098,108,0.377,111,1.579,118,0.742,119,0.773,121,1.176,131,0.934,138,1.489,139,1.26,147,1.371,148,3.273,149,1.457,156,1.206,169,2.054,186,1.66,188,3.341,212,3.437,216,1.258,217,1.958,218,2.412,223,1.66,241,2.611,362,4.612,363,4.878,438,4.821,440,3.475,481,2.79,491,2.491,576,2.234,759,2.971,824,2.636,843,2.934,902,5.308,1106,2.934,1107,4.827,1108,4.827,1109,4.827,1110,4.827,1111,4.827,1112,4.827,1113,4.827,1114,4.827,1115,4.827,1116,3.388,1117,5.308,1118,4.827,1119,3.388,1120,4.827,1121,3.388,1122,4.827,1123,3.388,1124,4.827,1125,6.129,1126,3.388,1127,4.827,1128,6.129,1129,6.135,1130,4.005,1131,3.388,1132,4.827,1133,6.129,1134,3.388,1135,4.827,1136,3.388,1137,3.388,1138,3.388,1139,3.388,1140,4.827,1141,3.388,1142,3.388,1143,3.388,1144,3.388,1145,3.388,1146,3.388,1147,3.388,1148,4.827,1149,3.388,1150,3.388]],["title/components/Login.html",[0,0.224,55,0.811]],["body/components/Login.html",[0,0.267,1,1.093,2,0.125,3,0.125,4,0.816,5,0.816,6,0.816,7,0.111,10,0.694,11,1.735,12,1.732,13,0.784,17,0.594,18,0.016,19,0.391,20,0.753,24,0.816,25,1.137,26,1.184,27,0.667,28,1.529,29,0.816,30,0.592,31,0.816,32,0.816,33,0.753,34,0.816,35,0.753,36,0.816,37,0.816,38,0.753,39,0.816,40,0.694,41,0.723,42,0.723,43,0.816,44,0.753,45,0.816,46,0.694,47,0.816,48,0.723,49,0.816,50,0.753,51,0.816,52,0.753,53,0.753,54,0.816,55,1.25,56,0.816,57,0.753,58,0.816,59,0.816,60,0.753,61,0.816,62,0.753,63,0.816,64,0.753,65,0.816,66,0.694,67,0.723,68,0.816,69,0.753,70,0.816,71,0.694,72,0.816,73,0.753,74,0.816,75,0.753,76,0.816,77,0.753,78,0.816,79,0.753,80,0.816,81,0.753,82,0.753,83,0.816,84,0.723,85,0.784,86,1.395,87,0.694,88,0.723,89,0.816,90,0.723,91,0.784,92,0.816,93,0.009,94,0.009,99,0.184,100,0.512,107,0.736,108,0.351,118,1.442,119,1.501,121,1.191,124,1.129,131,0.891,133,1.082,135,3.132,136,2.409,138,0.667,139,0.564,143,1.865,147,0.891,161,1.082,200,1.335,216,1.177,225,1.571,230,4.023,232,3.58,238,1.729,243,2.746,245,2.746,254,2.375,263,2.254,308,3.035,314,1.951,321,2.258,322,1.478,341,1.636,345,2.954,353,2.012,387,3.59,388,3.035,416,3.92,460,1.553,461,1.833,468,2.375,469,1.833,477,3.132,568,3.035,650,3.58,667,2.467,676,1.636,742,3.58,1151,2.746,1152,3.171,1153,3.986,1154,3.986,1155,3.986,1156,4.692,1157,4.603,1158,3.171,1159,3.171,1160,2.746,1161,3.171,1162,4.215,1163,2.746,1164,3.171,1165,3.171,1166,3.171,1167,3.171,1168,2.746,1169,3.171,1170,3.171,1171,3.171,1172,2.746,1173,3.171,1174,3.171,1175,3.171,1176,3.171,1177,3.171,1178,3.171,1179,2.467,1180,3.171,1181,4.603,1182,3.58,1183,3.986,1184,3.986,1185,3.986,1186,3.986,1187,2.746,1188,2.746,1189,3.986,1190,3.986,1191,3.986,1192,4.603,1193,2.746,1194,2.746]],["title/interfaces/LoginPayload.html",[95,0.716,1195,2.376]],["body/interfaces/LoginPayload.html",[2,0.213,3,0.213,7,0.189,17,0.507,18,0.016,21,0.427,30,0.537,86,1.462,93,0.013,94,0.013,95,1.367,97,1.919,99,0.313,100,0.73,107,1.093,108,0.35,109,2.002,191,3.556,194,3.556,207,3.117,219,3.388,230,4.365,250,2.783,345,2.94,1195,4.042,1196,3.556,1197,3.556,1198,3.84,1199,3.32,1200,3.84,1201,3.32,1202,3.117]],["title/interfaces/LoginResponse.html",[95,0.716,207,2.231]],["body/interfaces/LoginResponse.html",[2,0.21,3,0.21,7,0.186,17,0.5,18,0.016,21,0.425,30,0.529,86,1.259,93,0.013,94,0.013,95,1.361,97,1.891,99,0.308,100,0.723,107,1.091,108,0.375,109,1.973,191,4.833,194,4.833,207,3.761,219,3.782,230,3.761,250,2.742,345,3.996,1195,3.271,1196,3.503,1197,3.503,1198,3.783,1199,3.271,1200,3.783,1201,3.271,1202,3.071]],["title/pipes/MarkdownPipe.html",[255,2.376,328,2.104]],["body/pipes/MarkdownPipe.html",[2,0.191,3,0.191,7,0.17,10,1.061,17,0.667,18,0.016,19,0.597,21,0.281,22,0.627,25,1.667,30,0.672,93,0.012,94,0.012,100,0.539,107,0.916,108,0.258,118,1.061,119,1.538,121,1.002,131,0.938,138,1.018,139,0.862,147,0.938,158,2.5,159,2.151,160,2.281,161,1.653,169,1.781,225,2.096,241,2.615,255,3.781,328,3.349,333,2.624,405,3.781,1041,5.842,1203,4.196,1204,5.842,1205,4.196,1206,5.05,1207,4.845,1208,6.143,1209,4.845,1210,6.745,1211,6.143,1212,6.745,1213,6.143,1214,6.143,1215,6.143,1216,4.845,1217,6.143,1218,6.143,1219,4.196,1220,3.768,1221,4.845,1222,4.196,1223,4.845,1224,4.845,1225,4.845]],["title/components/NamingUpload.html",[0,0.224,57,0.916]],["body/components/NamingUpload.html",[0,0.195,1,0.798,2,0.083,3,0.083,4,0.541,5,0.541,6,0.541,7,0.25,10,0.46,11,1.66,12,1.654,13,0.519,15,0.61,17,0.553,18,0.016,19,0.259,20,0.499,24,0.541,25,0.831,26,0.865,27,0.442,28,1.234,29,0.541,30,0.711,31,0.541,32,0.541,33,0.499,34,0.541,35,0.499,36,0.541,37,0.541,38,0.499,39,0.541,40,0.92,41,0.766,42,0.958,43,0.541,44,0.499,45,0.541,46,0.92,47,0.541,48,0.479,49,0.541,50,0.499,51,0.541,52,0.499,53,0.499,54,0.541,55,0.442,56,0.541,57,0.997,58,1.234,59,0.541,60,0.499,61,0.541,62,0.499,63,0.541,64,0.499,65,0.541,66,0.46,67,0.479,68,0.541,69,0.499,70,0.541,71,0.46,72,0.541,73,0.499,74,0.541,75,0.499,76,0.541,77,0.499,78,0.541,79,0.499,80,0.541,81,0.499,82,0.499,83,0.541,84,0.479,85,0.519,86,0.407,87,0.46,88,0.479,89,0.541,90,0.479,91,0.519,92,0.541,93,0.007,94,0.007,99,0.244,100,0.374,107,0.457,108,0.344,118,1.226,119,1.277,121,1.141,124,0.748,126,1.146,131,0.651,133,0.717,136,1.945,138,1.284,139,1.086,143,1.702,147,1.182,160,1.248,161,0.717,169,1.218,185,2.609,200,1.705,205,1.496,216,0.78,225,1.638,238,1.146,241,0.815,254,1.735,263,1.647,286,2.069,289,2.428,296,2.132,314,2.589,322,0.979,330,3.692,333,0.717,341,3.404,352,1.496,353,1.56,357,1.635,362,1.496,388,2.217,399,3.854,401,1.215,404,1.294,416,1.386,457,1.03,458,1.215,460,1.03,461,1.215,466,1.943,467,1.215,468,1.735,469,1.215,477,2.775,486,1.215,490,2.393,561,2.955,562,2.912,563,2.912,564,4.027,567,1.386,568,2.217,615,1.215,620,2.912,621,5.594,631,3.692,642,1.82,676,1.085,851,1.386,855,1.833,856,1.386,858,1.496,949,4.922,1179,3.268,1226,5.033,1227,5.499,1228,1.82,1229,2.102,1230,2.102,1231,3.362,1232,3.362,1233,3.362,1234,3.362,1235,3.362,1236,3.362,1237,3.362,1238,3.362,1239,3.362,1240,3.362,1241,2.102,1242,4.201,1243,2.102,1244,4.8,1245,2.102,1246,2.102,1247,5.599,1248,2.102,1249,2.102,1250,2.102,1251,2.102,1252,2.102,1253,2.102,1254,2.102,1255,2.102,1256,3.362,1257,2.102,1258,2.102,1259,2.102,1260,2.102,1261,2.102,1262,2.102,1263,2.102,1264,2.102,1265,2.102,1266,2.102,1267,4.8,1268,2.102,1269,2.102,1270,2.102,1271,4.8,1272,2.102,1273,2.102,1274,2.102,1275,2.102,1276,2.102,1277,2.102,1278,4.546,1279,3.362,1280,3.362,1281,2.102,1282,3.362,1283,2.102,1284,2.102,1285,2.102,1286,2.102,1287,2.102,1288,2.102,1289,2.102,1290,3.638,1291,1.82,1292,1.635,1293,2.102,1294,2.102,1295,2.102,1296,4.8,1297,2.102,1298,2.102,1299,2.102,1300,4.849,1301,2.102,1302,2.102,1303,2.102,1304,2.102,1305,3.362,1306,2.102,1307,2.102,1308,2.102,1309,2.102,1310,2.102,1311,1.496,1312,3.268,1313,2.102,1314,2.991,1315,2.991,1316,2.77,1317,2.102,1318,2.102,1319,3.362,1320,3.362,1321,2.102,1322,2.393,1323,2.912,1324,3.362,1325,3.362,1326,3.362,1327,3.362,1328,3.362,1329,3.362,1330,2.912,1331,2.102]],["title/components/NotFound.html",[0,0.224,60,0.916]],["body/components/NotFound.html",[0,0.356,1,1.285,2,0.158,3,0.158,4,1.027,5,1.027,6,1.027,7,0.14,10,0.874,11,1.77,12,1.768,13,1.337,15,1.569,17,0.577,18,0.015,19,0.492,20,1.285,21,0.232,22,0.517,24,1.027,25,1.337,26,1.392,27,0.84,28,1.692,29,1.027,30,0.656,31,1.027,32,1.027,33,0.948,34,1.027,35,0.948,36,1.027,37,1.027,38,0.948,39,1.027,40,0.874,41,0.911,42,0.911,43,1.027,44,0.948,45,1.027,46,0.874,47,1.027,48,1.4,49,1.027,50,0.948,51,1.027,52,0.948,53,0.948,54,1.027,55,0.84,56,1.027,57,0.948,58,1.027,59,1.027,60,1.562,61,1.027,62,0.948,63,1.027,64,0.948,65,1.027,66,0.874,67,0.911,68,1.027,69,0.948,70,1.027,71,0.874,72,1.027,73,0.948,74,1.027,75,0.948,76,1.027,77,0.948,78,1.027,79,0.948,80,1.027,81,0.948,82,0.948,83,1.027,84,0.911,85,0.987,86,0.773,87,0.874,88,0.911,89,1.027,90,0.911,91,0.987,92,1.027,93,0.01,94,0.01,99,0.232,108,0.213,121,0.883,124,1.421,131,1.048,133,1.363,136,2.873,138,0.84,139,0.711,147,0.773,159,1.774,183,3.853,200,1.158,373,3.347,380,1.956,676,2.061,952,5.118,1182,4.21,1332,5.316,1333,4.775,1334,3.459,1335,5.412,1336,5.412,1337,6.58,1338,3.994,1339,3.994,1340,3.994,1341,5.412]],["title/injectables/NotificationService.html",[149,1.165,460,1.891]],["body/injectables/NotificationService.html",[2,0.223,3,0.168,7,0.149,17,0.4,18,0.016,19,0.524,21,0.327,22,0.55,30,0.631,93,0.011,94,0.011,99,0.247,100,0.627,107,1.029,108,0.403,111,1.98,118,1.538,119,1.601,121,1.202,123,2.802,131,1.092,138,1.331,139,1.249,147,1.306,149,1.703,160,2.352,178,5.843,186,2.081,200,1.956,223,2.081,250,3.268,353,1.578,440,3.86,460,2.763,1202,2.456,1342,3.305,1343,6.333,1344,5.642,1345,5.642,1346,5.642,1347,4.249,1348,5.642,1349,5.248,1350,5.729,1351,7.761,1352,4.249,1353,5.642,1354,5.642,1355,4.249,1356,5.642,1357,5.642,1358,4.249,1359,5.642,1360,4.249,1361,5.843,1362,4.249,1363,4.249,1364,3.305,1365,4.249,1366,4.249,1367,4.249,1368,4.249,1369,4.249,1370,4.249,1371,4.249,1372,4.249,1373,4.249,1374,4.249]],["title/directives/PasswordValidator.html",[27,0.811,90,0.88]],["body/directives/PasswordValidator.html",[2,0.194,3,0.194,7,0.172,10,1.075,11,1.357,17,0.583,18,0.016,19,0.605,21,0.285,22,0.636,27,1.302,30,0.489,87,1.075,90,1.625,91,1.531,93,0.012,94,0.012,99,0.285,108,0.262,121,0.801,131,1.199,138,1.032,139,0.874,147,0.95,158,3.197,161,2.317,169,1.968,241,2.849,322,2.288,333,2.317,480,4.411,1375,5.366,1376,4.253,1377,5.878,1378,4.819,1379,6.195,1380,7.128,1381,4.91,1382,4.91,1383,6.787,1384,6.195,1385,4.253,1386,4.91,1387,4.253,1388,4.91,1389,4.91,1390,6.195,1391,4.91,1392,4.91,1393,3.82,1394,4.91,1395,4.91,1396,6.195,1397,4.91,1398,6.195,1399,4.91,1400,4.91]],["title/interfaces/Plan.html",[95,0.716,1401,2.376]],["body/interfaces/Plan.html",[2,0.212,3,0.212,7,0.188,18,0.015,21,0.38,30,0.734,93,0.013,94,0.013,95,1.217,97,1.915,99,0.312,100,0.729,107,1.066,108,0.402,109,1.998,436,2.513,440,4.077,1401,4.531,1402,4.186,1403,6.376,1404,6.376,1405,6.376,1406,3.313,1407,4.661,1408,4.661,1409,4.661]],["title/components/Practice.html",[0,0.224,62,0.916]],["body/components/Practice.html",[0,0.246,1,0.808,2,0.084,3,0.084,4,0.549,5,0.549,6,0.549,7,0.075,10,0.468,11,1.669,12,1.663,13,0.841,15,0.987,17,0.53,18,0.016,19,0.263,20,0.808,21,0.124,22,0.277,24,0.549,25,0.841,26,0.876,27,0.449,28,1.246,29,0.549,30,0.562,31,0.549,32,0.549,33,0.507,34,0.549,35,0.507,36,0.549,37,0.549,38,0.507,39,0.549,40,0.468,41,0.487,42,0.487,43,0.549,44,0.507,45,0.549,46,0.468,47,0.549,48,0.487,49,0.549,50,0.507,51,0.549,52,0.507,53,0.507,54,0.549,55,0.449,56,0.549,57,0.507,58,0.549,59,0.549,60,0.507,61,0.549,62,1.338,63,0.549,64,0.507,65,0.549,66,0.468,67,1.443,68,0.549,69,0.507,70,0.549,71,0.468,72,0.549,73,0.507,74,0.549,75,0.507,76,0.549,77,0.507,78,0.549,79,0.507,80,0.549,81,0.507,82,0.507,83,0.549,84,0.487,85,0.528,86,0.413,87,0.468,88,0.487,89,0.549,90,0.487,91,0.528,92,0.549,93,0.007,94,0.007,99,0.124,100,0.379,103,2.949,107,0.658,108,0.353,118,0.93,119,0.968,121,1.145,131,0.659,138,0.893,139,0.755,143,2.144,147,1.024,148,2.053,154,1.85,156,0.76,160,1.576,161,1.924,169,1.405,185,1.978,200,1.405,216,0.793,241,2.051,254,2.191,255,2.613,263,2.08,269,2.096,271,2.454,272,1.968,283,3.677,286,2.096,287,1.85,292,2.424,296,1.512,314,2.053,317,2.982,319,2.8,322,0.995,327,1.661,328,1.164,333,0.729,341,2.191,353,0.793,354,1.661,381,1.85,382,1.315,403,1.315,436,1.806,438,2.799,439,1.856,459,1.408,468,1.102,481,1.235,491,1.102,498,2.245,534,4.195,591,1.315,599,1.408,631,2.799,654,1.757,749,1.521,758,3.767,759,2.982,798,2.648,807,1.661,809,2.949,848,2.8,849,1.968,851,3.194,855,1.164,878,3.259,933,1.661,983,1.521,1006,1.85,1016,2.949,1067,2.648,1068,2.648,1070,1.85,1072,3.677,1074,1.85,1102,1.85,1103,1.85,1117,3.677,1129,2.949,1130,2.454,1410,1.85,1411,3.405,1412,3.405,1413,4.246,1414,3.405,1415,3.405,1416,5.639,1417,3.405,1418,4.246,1419,4.246,1420,4.246,1421,2.136,1422,2.136,1423,2.136,1424,2.136,1425,2.136,1426,2.136,1427,2.136,1428,2.136,1429,2.136,1430,2.136,1431,2.136,1432,2.136,1433,3.405,1434,2.136,1435,2.136,1436,2.136,1437,2.136,1438,2.136,1439,2.136,1440,2.136,1441,3.405,1442,4.246,1443,4.246,1444,3.405,1445,2.136,1446,2.136,1447,2.136,1448,2.136,1449,2.136,1450,3.405,1451,2.136,1452,4.246,1453,4.246,1454,4.844,1455,2.136,1456,2.136,1457,2.136,1458,2.136,1459,3.405,1460,2.136,1461,4.844,1462,5.639,1463,3.405,1464,2.136,1465,2.136,1466,3.405,1467,5.639,1468,1.521,1469,1.521,1470,2.136,1471,3.405,1472,2.136,1473,2.136,1474,2.136,1475,2.136,1476,4.246,1477,2.136,1478,2.136,1479,2.136,1480,2.136,1481,2.136,1482,2.136,1483,2.136,1484,2.136,1485,2.136,1486,2.136,1487,2.136,1488,4.844,1489,3.405,1490,2.136,1491,2.136,1492,2.136,1493,2.136,1494,3.405,1495,2.136,1496,2.136,1497,2.136,1498,1.85,1499,2.136,1500,2.136,1501,2.136,1502,3.677,1503,5.291,1504,3.405,1505,3.405,1506,2.136,1507,3.405,1508,2.136,1509,2.136,1510,2.136,1511,2.136,1512,2.136,1513,2.136,1514,2.136,1515,2.136,1516,2.136,1517,1.85,1518,2.136,1519,2.136,1520,4.844,1521,3.405,1522,3.405]],["title/components/Pricing.html",[0,0.224,64,0.916]],["body/components/Pricing.html",[0,0.325,1,1.141,2,0.133,3,0.133,4,0.867,5,0.867,6,0.867,7,0.118,10,0.738,11,1.747,12,1.744,13,1.188,15,1.394,17,0.317,18,0.015,19,0.415,20,0.8,21,0.196,22,0.436,24,0.867,25,1.188,26,1.237,27,0.708,28,1.572,29,0.867,30,0.559,31,0.867,32,0.867,33,0.8,34,0.867,35,0.8,36,0.867,37,0.867,38,0.8,39,0.867,40,0.738,41,0.768,42,0.768,43,0.867,44,1.642,45,0.867,46,0.738,47,0.867,48,0.768,49,0.867,50,0.8,51,0.867,52,0.8,53,0.8,54,0.867,55,0.708,56,0.867,57,0.8,58,0.867,59,0.867,60,0.8,61,0.867,62,0.8,63,0.867,64,1.596,65,0.867,66,0.738,67,0.768,68,0.867,69,0.8,70,0.867,71,0.738,72,0.867,73,0.8,74,0.867,75,0.8,76,0.867,77,0.8,78,0.867,79,0.8,80,0.867,81,0.8,82,0.8,83,0.867,84,0.768,85,0.833,86,0.652,87,0.738,88,0.768,89,0.867,90,0.768,91,0.833,92,0.867,93,0.009,94,0.009,232,5.681,289,2.78,330,3.171,382,3.763,387,2.622,388,3.171,525,2.96,558,3.741,561,4.138,564,4.031,568,4.921,623,4.165,740,4.165,746,3.424,747,3.741,748,4.756,856,3.171,965,4.756,1042,4.165,1052,3.741,1183,4.165,1300,4.165,1322,3.424,1393,3.741,1502,4.165,1523,2.919,1524,4.809,1525,4.809,1526,4.809,1527,4.809,1528,4.809,1529,6.114,1530,4.809,1531,4.809,1532,6.114,1533,4.809,1534,4.809,1535,7.464,1536,4.809,1537,6.722,1538,4.165,1539,4.165,1540,4.809,1541,6.114,1542,4.809,1543,4.809,1544,4.809,1545,4.809,1546,4.809,1547,4.809,1548,4.165,1549,4.809,1550,4.165,1551,4.809,1552,6.114,1553,4.809,1554,4.809,1555,4.165,1556,4.809,1557,4.809,1558,4.809]],["title/interfaces/QuestionModel.html",[95,0.716,439,2.104]],["body/interfaces/QuestionModel.html",[2,0.182,3,0.182,7,0.162,18,0.016,21,0.404,93,0.012,94,0.012,95,1.224,97,1.642,99,0.268,100,0.662,107,1.093,108,0.418,109,2.448,139,1.314,241,3.045,413,4.168,436,2.564,439,3.246,591,4.438,615,3.442,654,2.381,848,3.442,849,3.811,855,3.246,878,2.667,1130,2.667,1468,5.134,1469,5.134,1559,3.042,1560,4.593,1561,4.754,1562,3.589,1563,3.589]],["title/interfaces/QuestionOption.html",[95,0.716,1560,2.545]],["body/interfaces/QuestionOption.html",[2,0.191,3,0.191,7,0.169,18,0.016,21,0.411,93,0.012,94,0.012,95,1.251,97,1.721,99,0.281,100,0.682,107,1.093,108,0.409,109,2.819,241,2.898,413,4.228,436,2.592,439,2.636,591,3.776,615,3.546,654,2.495,848,3.546,849,3.895,855,3.988,878,2.795,1130,2.795,1468,4.368,1469,4.368,1559,3.188,1560,4.443,1561,4.443,1562,5.513,1563,5.513]],["title/components/QuestionSettings.html",[0,0.224,66,0.845]],["body/components/QuestionSettings.html",[0,0.252,1,0.829,2,0.087,3,0.087,4,0.567,5,0.567,6,0.567,7,0.077,10,0.483,11,1.675,12,1.67,13,0.863,15,1.013,17,0.584,18,0.016,19,0.272,20,0.829,21,0.128,22,0.452,24,0.567,25,0.863,26,0.898,27,0.463,28,1.268,29,0.567,30,0.57,31,0.567,32,0.567,33,0.523,34,0.567,35,0.523,36,0.567,37,0.567,38,0.523,39,0.567,40,1.08,41,0.796,42,0.989,43,0.567,44,0.523,45,0.567,46,1.08,47,0.567,48,0.503,49,0.567,50,0.523,51,0.567,52,0.523,53,1.276,54,0.567,55,0.463,56,0.567,57,0.523,58,0.567,59,0.567,60,0.523,61,0.567,62,1.276,63,0.567,64,0.523,65,0.567,66,1.08,67,1.574,68,0.567,69,0.523,70,0.567,71,0.483,72,0.567,73,0.523,74,0.567,75,0.523,76,0.567,77,0.523,78,0.567,79,0.523,80,0.567,81,0.523,82,1.029,83,0.567,84,0.503,85,0.545,86,0.427,87,0.483,88,0.503,89,0.567,90,0.503,91,0.545,92,0.567,93,0.007,94,0.007,99,0.128,100,0.388,107,0.589,108,0.304,109,0.819,118,1.252,119,1.304,121,1.069,124,0.785,126,1.202,131,0.676,133,0.752,136,1.998,138,0.911,139,0.771,143,2.178,147,0.839,148,1.48,156,0.785,161,0.752,169,1.43,185,2.664,200,1.257,216,0.819,225,1.683,241,0.855,254,2.237,263,2.124,271,2.506,291,1.57,296,1.925,314,2.883,322,1.027,333,1.48,341,3.206,353,1.61,363,3.252,382,3.824,399,3.645,401,1.274,404,1.357,437,2.302,442,3.77,444,4.408,445,4.408,446,1.57,447,3.827,448,3.836,449,1.57,450,1.57,453,1.57,456,2.669,457,1.08,458,1.274,459,1.454,460,1.08,461,1.274,462,2.149,463,2.716,464,2.716,465,3.544,466,2.506,467,2.018,468,2.237,469,2.018,470,2.716,471,2.716,472,2.716,473,1.715,474,1.715,475,2.716,476,1.715,477,2.851,478,3.373,479,3.373,480,2.486,481,2.506,482,2.716,483,2.716,484,1.715,485,2.716,486,2.018,487,4.554,488,2.716,489,1.715,490,2.486,491,3.509,492,2.716,493,1.715,494,2.716,495,1.715,496,1.715,497,3.836,498,1.454,499,1.57,500,2.716,501,1.715,502,2.486,503,1.715,504,1.715,505,1.57,506,1.57,507,1.715,508,3.519,509,1.715,510,1.715,511,3.373,512,1.715,513,2.716,514,2.716,515,2.716,516,2.486,517,3.836,518,2.716,519,3.087,520,2.716,521,2.486,522,1.715,523,1.715,524,2.486,525,2.669,526,1.715,527,1.715,615,2.851,631,2.302,654,2.545,676,1.138,772,2.486,848,3.591,849,2.851,878,2.851,965,2.716,987,3.024,1564,3.492,1565,3.492,1566,3.492,1567,2.205,1568,2.205,1569,2.205,1570,2.205,1571,2.205,1572,2.205,1573,2.205,1574,2.205,1575,2.205,1576,3.024,1577,3.492,1578,3.492]],["title/interfaces/SaveQuestionData.html",[95,0.716,1130,2.231]],["body/interfaces/SaveQuestionData.html",[2,0.184,3,0.184,7,0.163,18,0.016,21,0.406,93,0.012,94,0.012,95,1.229,97,1.657,99,0.27,100,0.666,107,1.089,108,0.421,109,2.458,139,1.317,196,4.659,241,3.049,413,3.462,436,2.569,439,2.539,591,4.451,615,3.462,654,2.403,848,3.462,849,3.827,855,3.266,878,2.692,1130,3.462,1468,5.148,1469,5.148,1559,3.07,1560,3.949,1561,4.768,1562,3.622,1563,3.622]],["title/components/Sidebar.html",[0,0.224,69,0.916]],["body/components/Sidebar.html",[0,0.323,1,1.131,2,0.131,3,0.131,4,0.855,5,0.855,6,0.855,7,0.116,10,0.728,11,1.746,12,1.742,13,1.177,15,1.381,17,0.448,18,0.016,19,0.41,20,1.131,21,0.193,22,0.431,24,0.855,25,1.177,26,1.225,27,0.699,28,1.563,29,0.855,30,0.641,31,0.855,32,0.855,33,0.789,34,0.855,35,0.789,36,0.855,37,0.855,38,0.789,39,0.855,40,0.728,41,0.758,42,0.758,43,0.855,44,0.789,45,0.855,46,0.728,47,0.855,48,0.758,49,0.855,50,0.789,51,0.855,52,0.789,53,0.789,54,0.855,55,0.699,56,0.855,57,0.789,58,0.855,59,0.855,60,0.789,61,0.855,62,0.789,63,0.855,64,0.789,65,0.855,66,0.728,67,0.758,68,0.855,69,1.588,70,0.855,71,0.728,72,0.855,73,1.321,74,0.855,75,0.789,76,0.855,77,1.321,78,0.855,79,0.789,80,0.855,81,0.789,82,1.527,83,0.855,84,0.758,85,0.822,86,0.644,87,0.728,88,0.758,89,0.855,90,0.758,91,0.822,92,0.855,93,0.009,94,0.009,99,0.193,107,0.975,108,0.388,121,1.092,124,1.184,131,0.922,138,1.001,139,0.847,147,1.077,161,1.135,200,1.614,269,2.932,272,2.753,286,3.741,292,2.368,317,3.426,319,2.753,436,2.074,481,2.753,491,2.458,576,3.67,656,4.329,758,3.962,780,3.705,961,3.705,962,3.705,973,4.125,975,4.125,1011,4.125,1061,2.88,1182,3.705,1579,2.88,1580,4.763,1581,4.763,1582,6.077,1583,4.763,1584,4.763,1585,5.565,1586,3.326,1587,3.326,1588,3.326,1589,3.326,1590,4.763,1591,3.326,1592,4.763,1593,3.326,1594,3.326,1595,3.326,1596,6.077,1597,3.326,1598,3.326,1599,4.763,1600,4.763,1601,4.763]],["title/components/Signup.html",[0,0.224,71,0.845]],["body/components/Signup.html",[0,0.275,1,0.923,2,0.1,3,0.1,4,0.65,5,0.65,6,0.65,7,0.089,10,0.554,11,1.701,12,1.697,13,0.96,17,0.539,18,0.016,19,0.312,20,0.923,21,0.147,22,0.327,24,0.65,25,0.96,26,1,27,0.532,28,1.366,29,0.65,30,0.717,31,0.65,32,0.65,33,0.6,34,0.65,35,0.6,36,0.65,37,0.65,38,0.6,39,0.65,40,0.554,41,0.577,42,0.577,43,0.65,44,0.6,45,0.65,46,0.554,47,0.65,48,0.577,49,0.65,50,0.6,51,0.65,52,0.6,53,0.6,54,0.65,55,0.532,56,0.65,57,0.6,58,0.65,59,0.65,60,0.6,61,0.65,62,0.6,63,0.65,64,0.6,65,0.65,66,0.554,67,0.577,68,0.65,69,0.6,70,0.65,71,1.325,72,0.65,73,1.124,74,0.65,75,0.6,76,0.65,77,0.6,78,0.65,79,0.6,80,0.65,81,0.6,82,0.6,83,0.65,84,0.577,85,0.625,86,1.361,87,0.554,88,0.577,89,0.65,90,1.211,91,0.625,92,0.65,93,0.008,94,0.008,99,0.147,100,0.432,107,0.779,108,0.363,118,1.38,119,1.437,121,1.174,124,0.9,131,0.752,133,0.863,135,3.071,136,2.453,138,0.532,139,0.45,143,1.918,147,0.752,159,1.123,184,1.968,200,1.127,216,0.939,228,1.968,229,1.968,230,4.201,238,2.119,254,2.443,263,2.319,289,1.462,308,3.503,314,2.007,321,1.801,322,1.179,333,0.863,341,2.006,350,3.024,353,1.758,383,4.1,387,3.547,413,1.462,416,4.4,447,2.767,477,3.071,566,3.366,594,3.024,650,3.024,667,1.968,676,1.305,749,3.783,933,4.46,983,1.801,1153,4.1,1154,4.1,1155,4.1,1156,4.601,1160,3.366,1162,5.19,1163,3.366,1168,3.366,1172,3.366,1179,3.024,1184,3.366,1185,3.366,1186,3.366,1187,2.191,1188,2.191,1189,3.366,1190,3.366,1191,3.366,1193,2.191,1194,2.191,1314,2.767,1315,1.801,1316,1.668,1377,2.191,1393,3.024,1602,2.191,1603,3.887,1604,4.734,1605,4.734,1606,4.734,1607,4.734,1608,3.887,1609,2.529,1610,2.529,1611,2.529,1612,2.529,1613,2.529,1614,2.529,1615,3.887,1616,2.529,1617,2.529,1618,3.887,1619,2.529,1620,2.529,1621,2.529,1622,2.529,1623,2.529,1624,4.734,1625,2.529,1626,2.529,1627,2.191,1628,2.529,1629,2.529,1630,2.529,1631,2.529,1632,2.529,1633,2.529,1634,3.887,1635,2.529,1636,2.529,1637,2.529,1638,2.529,1639,2.529,1640,2.529,1641,3.887,1642,2.529,1643,3.887,1644,3.887,1645,3.887,1646,3.887,1647,3.887,1648,3.887,1649,3.887,1650,3.887,1651,2.529,1652,2.529,1653,3.887,1654,3.887,1655,3.887,1656,3.887,1657,2.529,1658,2.529]],["title/interfaces/SignupPayload.html",[95,0.716,1199,2.376]],["body/interfaces/SignupPayload.html",[2,0.207,3,0.207,7,0.183,17,0.493,18,0.016,21,0.423,30,0.727,86,1.45,93,0.012,94,0.012,95,1.354,97,1.863,99,0.304,100,0.717,107,1.101,108,0.388,109,1.944,191,3.453,194,3.453,207,3.027,219,3.328,230,4.329,250,2.702,345,2.855,1195,3.223,1196,3.453,1197,3.453,1198,3.728,1199,3.969,1200,5.192,1201,3.223,1202,3.027]],["title/components/Subjects.html",[0,0.224,73,0.916]],["body/components/Subjects.html",[0,0.275,1,0.926,2,0.1,3,0.1,4,0.653,5,0.653,6,0.653,7,0.089,10,0.556,11,1.702,12,1.698,13,0.963,15,1.131,17,0.57,18,0.016,19,0.313,20,0.926,21,0.147,22,0.329,24,0.653,25,0.963,26,1.003,27,0.534,28,1.369,29,0.653,30,0.71,31,0.653,32,0.653,33,0.603,34,0.653,35,0.603,36,0.653,37,0.653,38,0.603,39,0.653,40,0.556,41,0.579,42,0.579,43,0.653,44,0.603,45,0.653,46,1.166,47,0.653,48,0.579,49,0.653,50,0.603,51,0.653,52,0.603,53,0.926,54,0.653,55,0.534,56,0.653,57,0.603,58,0.653,59,0.653,60,0.603,61,0.653,62,0.926,63,0.653,64,0.603,65,0.653,66,0.556,67,0.889,68,0.653,69,0.603,70,0.653,71,0.556,72,0.653,73,1.754,74,0.653,75,0.603,76,0.653,77,0.603,78,0.653,79,0.603,80,0.653,81,0.603,82,1.127,83,0.653,84,0.579,85,0.627,86,0.492,87,0.556,88,0.579,89,0.653,90,0.579,91,0.627,92,0.653,93,0.008,94,0.008,99,0.147,100,0.433,108,0.284,118,1.039,119,1.082,121,0.989,124,0.904,126,1.385,131,0.755,133,0.867,136,2.456,138,0.82,139,0.694,143,1.029,147,0.755,158,2.012,159,1.128,160,0.943,185,1.817,200,1.376,216,0.943,225,2.403,238,1.385,284,2.776,286,2.4,289,1.468,296,2.364,330,3.997,352,1.808,353,0.943,373,2.588,380,1.244,389,2.571,403,2.921,410,3.277,436,2.223,456,3.277,457,1.244,458,1.468,462,1.563,466,2.743,467,2.254,508,4.01,524,2.776,558,3.033,561,2.4,599,3.51,617,5.642,654,1.311,656,3.692,676,1.311,742,3.033,746,2.776,748,3.033,772,3.379,815,3.033,939,1.975,949,4.495,954,3.377,1005,1.975,1052,3.033,1226,1.808,1311,1.808,1312,1.975,1314,1.808,1315,1.808,1316,1.674,1322,2.776,1538,3.377,1659,2.199,1660,3.899,1661,3.899,1662,4.746,1663,3.899,1664,3.899,1665,3.899,1666,5.067,1667,2.54,1668,2.54,1669,6.515,1670,6.515,1671,6.515,1672,3.899,1673,6.515,1674,6.515,1675,6.515,1676,6.515,1677,3.899,1678,3.899,1679,3.899,1680,3.377,1681,2.54,1682,2.54,1683,2.54,1684,2.54,1685,2.54,1686,2.54,1687,2.54,1688,2.54,1689,2.199,1690,6.313,1691,5.744,1692,2.199,1693,2.54,1694,2.54,1695,3.377,1696,2.54,1697,2.54,1698,2.54,1699,3.899,1700,3.899,1701,3.899,1702,3.899,1703,3.899,1704,3.899,1705,3.899]],["title/injectables/SubjectsService.html",[149,1.165,457,1.891]],["body/injectables/SubjectsService.html",[2,0.128,3,0.128,7,0.223,17,0.516,18,0.016,19,0.399,21,0.188,22,0.419,30,0.73,53,0.768,93,0.009,94,0.009,99,0.188,100,0.519,107,1.103,108,0.38,109,2.035,111,1.508,118,1.023,119,1.065,121,1.196,131,0.904,138,1.499,139,1.268,147,1.401,148,3.306,149,1.41,156,1.152,161,1.105,169,2.099,186,1.585,188,3.272,212,3.326,216,1.202,217,1.871,218,2.304,223,1.585,225,1.105,314,1.98,362,4.982,440,2.828,449,4.982,450,4.273,457,2.288,487,2.304,491,1.67,508,3.917,564,3.614,567,3.08,599,4.196,1706,2.803,1707,4.671,1708,4.671,1709,4.671,1710,4.671,1711,6.001,1712,4.671,1713,4.671,1714,4.671,1715,4.671,1716,4.671,1717,4.671,1718,3.236,1719,4.671,1720,7.408,1721,3.236,1722,4.671,1723,3.236,1724,4.671,1725,3.236,1726,3.236,1727,4.671,1728,3.236,1729,4.671,1730,3.236,1731,4.671,1732,6.001,1733,3.236,1734,4.671,1735,3.236,1736,4.671,1737,3.236,1738,3.236,1739,3.236,1740,3.236,1741,5.481,1742,3.236,1743,3.236,1744,3.236,1745,3.236,1746,3.236,1747,5.481,1748,3.236,1749,3.236,1750,4.671,1751,3.236,1752,3.236,1753,4.671,1754,3.236]],["title/components/Subscription.html",[0,0.224,75,0.916]],["body/components/Subscription.html",[0,0.337,1,1.193,2,0.141,3,0.141,4,0.922,5,0.922,6,0.922,7,0.126,10,0.785,11,1.756,12,1.753,17,0.591,18,0.016,19,0.442,20,1.193,21,0.208,22,0.464,24,0.922,25,1.241,26,1.292,27,0.754,28,1.616,29,0.922,30,0.659,31,0.922,32,0.922,33,0.851,34,0.922,35,0.851,36,0.922,37,0.922,38,0.851,39,0.922,40,0.785,41,0.817,42,0.817,43,0.922,44,0.851,45,0.922,46,0.785,47,0.922,48,0.817,49,0.922,50,0.851,51,0.922,52,0.851,53,0.851,54,0.922,55,0.754,56,0.922,57,0.851,58,0.922,59,0.922,60,0.851,61,0.922,62,0.851,63,0.922,64,0.851,65,0.922,66,0.785,67,0.817,68,0.922,69,0.851,70,0.922,71,0.785,72,0.922,73,0.851,74,0.922,75,1.628,76,0.922,77,0.851,78,0.922,79,0.851,80,0.922,81,0.851,82,0.851,83,0.922,84,0.817,85,0.886,86,0.694,87,0.785,88,0.817,89,0.922,90,0.817,91,0.886,92,0.922,93,0.01,94,0.01,99,0.208,100,0.559,107,0.788,108,0.268,118,1.1,119,1.146,121,1.149,123,3.824,131,0.973,133,1.224,138,1.056,139,0.894,147,1.217,158,2.593,159,1.592,160,2.153,200,1.823,333,1.715,373,3.162,380,1.756,403,3.57,405,3.093,410,3.869,436,1.224,508,3.57,747,4.511,1361,4.351,1401,2.207,1406,2.207,1517,5.443,1755,3.105,1756,6.285,1757,5.024,1758,3.105,1759,4.144,1760,5.024,1761,4.351,1762,3.586,1763,3.586,1764,5.024,1765,3.586,1766,3.586,1767,3.586,1768,3.586,1769,3.586,1770,3.586,1771,3.586,1772,5.8,1773,3.586,1774,3.586,1775,3.586,1776,3.586]],["title/guards/SubscriptionGuard.html",[1777,3.002,1778,3.002]],["body/guards/SubscriptionGuard.html",[2,0.204,3,0.204,7,0.181,17,0.683,18,0.016,19,0.637,21,0.3,22,0.67,30,0.515,93,0.012,94,0.012,99,0.3,108,0.275,111,2.41,121,1.044,124,1.841,131,1.239,133,2.184,136,3.122,138,1.087,139,0.92,147,1.001,149,1.932,156,1.841,158,2.669,160,2.376,169,2.015,223,2.533,314,2.192,333,1.765,808,4.479,1758,4.479,1759,4.788,1761,5.542,1778,4.978,1779,5.172,1780,4.479,1781,7.602,1782,5.172,1783,5.172,1784,5.172,1785,5.172,1786,5.172,1787,5.172,1788,5.172]],["title/injectables/SubscriptionService.html",[149,1.165,1759,2.545]],["body/injectables/SubscriptionService.html",[2,0.182,3,0.182,7,0.162,17,0.679,18,0.016,19,0.57,21,0.268,22,0.599,30,0.594,93,0.012,94,0.012,99,0.268,100,0.663,107,0.947,108,0.351,111,2.154,118,1.012,119,1.054,121,1.205,131,1.154,133,1.578,138,1.253,139,1.061,147,1.349,148,3.262,149,1.8,153,3.048,156,1.645,159,2.053,160,2.45,169,2.021,186,2.264,188,3.25,223,2.264,376,6.037,535,3.596,536,4.963,545,2.846,546,3.596,983,4.244,1401,2.846,1406,2.846,1759,3.931,1789,4.004,1790,5.714,1791,6.97,1792,6.97,1793,5.961,1794,4.623,1795,4.623,1796,4.623,1797,5.961,1798,4.623,1799,5.961,1800,5.961,1801,4.623,1802,4.623,1803,4.623,1804,4.623,1805,4.623]],["title/interfaces/SubscriptionStatus.html",[95,0.716,1406,2.376]],["body/interfaces/SubscriptionStatus.html",[2,0.216,3,0.216,7,0.191,18,0.015,21,0.384,30,0.544,93,0.013,94,0.013,95,1.228,97,1.944,99,0.317,100,0.736,107,1.068,108,0.394,109,2.643,436,1.865,440,3.674,1401,4.841,1402,4.249,1403,4.731,1404,4.731,1405,4.731,1406,4.073,1407,6.408,1408,6.408,1409,6.408]],["title/components/Subtopic.html",[0,0.224,77,0.916]],["body/components/Subtopic.html",[0,0.343,1,1.222,2,0.146,3,0.146,4,0.955,5,0.955,6,0.955,7,0.13,10,0.813,11,1.761,12,1.758,13,1.272,15,1.493,17,0.556,18,0.016,19,0.457,20,1.222,21,0.215,22,0.481,24,0.955,25,1.272,26,1.324,27,0.78,28,1.641,29,0.955,30,0.589,31,0.955,32,0.955,33,0.881,34,0.955,35,0.881,36,0.955,37,0.955,38,0.881,39,0.955,40,0.813,41,0.846,42,0.846,43,0.955,44,0.881,45,0.955,46,0.813,47,0.955,48,0.846,49,0.955,50,0.881,51,0.955,52,0.881,53,0.881,54,0.955,55,0.78,56,0.955,57,0.881,58,0.955,59,0.955,60,0.881,61,0.955,62,0.881,63,0.955,64,0.881,65,0.955,66,0.813,67,0.846,68,0.955,69,0.881,70,0.955,71,0.813,72,0.955,73,0.881,74,0.955,75,0.881,76,0.955,77,1.646,78,0.955,79,0.881,80,0.955,81,0.881,82,0.881,83,0.955,84,0.846,85,0.917,86,0.719,87,0.813,88,0.846,89,0.955,90,0.846,91,0.917,92,0.955,93,0.01,94,0.01,99,0.215,108,0.315,121,1.093,131,0.996,143,2.394,147,0.996,200,1.493,255,3.637,269,3.168,272,2.975,317,3.637,319,2.975,327,2.887,328,2.024,436,1.757,758,4.207,1067,4.004,1068,4.004,1206,2.643,1806,3.215,1807,5.147,1808,5.147,1809,6.38,1810,6.38,1811,5.908,1812,5.908,1813,3.712,1814,3.712,1815,3.712,1816,3.712,1817,3.712,1818,3.712,1819,3.215,1820,5.147,1821,5.147,1822,3.712,1823,5.147,1824,6.38]],["title/interfaces/SubtopicModel.html",[95,0.716,1825,3.002]],["body/interfaces/SubtopicModel.html",[2,0.217,3,0.217,7,0.193,18,0.015,21,0.319,93,0.013,94,0.013,95,1.021,97,1.957,99,0.319,100,0.739,107,1.092,108,0.404,109,2.651,117,5.28,413,3.178,436,2.531,576,4.89,824,5.768,1206,3.915,1825,5.168,1826,4.762,1827,6.423]],["title/components/Toast.html",[0,0.224,79,0.916]],["body/components/Toast.html",[0,0.32,1,1.117,2,0.218,3,0.129,4,0.841,5,0.841,6,0.841,7,0.114,10,0.716,11,1.743,12,1.74,13,1.163,17,0.519,18,0.016,19,0.403,20,1.117,21,0.19,22,0.423,24,0.841,25,1.163,26,1.21,27,0.687,28,1.551,29,0.841,30,0.601,31,0.841,32,0.841,33,0.776,34,0.841,35,0.776,36,0.841,37,0.841,38,0.776,39,0.841,40,0.716,41,0.746,42,0.746,43,0.841,44,0.776,45,0.841,46,0.716,47,0.841,48,0.746,49,0.841,50,0.776,51,0.841,52,0.776,53,0.776,54,0.841,55,0.687,56,0.841,57,0.776,58,0.841,59,0.841,60,0.776,61,0.841,62,0.776,63,0.841,64,0.776,65,0.841,66,0.716,67,0.746,68,0.841,69,0.776,70,0.841,71,0.716,72,0.841,73,0.776,74,0.841,75,0.776,76,0.841,77,0.776,78,0.841,79,1.579,80,0.841,81,0.776,82,0.776,83,0.841,84,0.746,85,0.808,86,0.633,87,0.716,88,0.746,89,0.841,90,0.746,91,0.808,92,0.841,93,0.009,94,0.009,99,0.19,100,0.523,108,0.365,118,0.716,119,0.746,121,1.085,131,0.911,133,1.116,138,0.687,139,0.582,147,0.633,200,0.948,333,2.058,353,1.747,373,3.006,380,1.602,405,2.897,413,2.72,426,6.077,428,4.076,433,6.077,443,3.925,460,3.358,461,1.89,468,3.112,858,3.35,860,5.176,1202,2.72,1330,4.076,1350,4.97,1364,3.66,1378,3.66,1680,4.076,1828,2.832,1829,4.706,1830,4.706,1831,6.03,1832,3.27,1833,3.27,1834,3.27,1835,5.513,1836,4.706,1837,4.706,1838,4.706,1839,4.706,1840,4.706,1841,4.706,1842,4.706,1843,4.706,1844,4.706,1845,4.706,1846,4.706,1847,4.706,1848,4.706,1849,4.706,1850,7.147,1851,4.706,1852,4.706,1853,3.27,1854,3.27,1855,3.27,1856,3.27,1857,3.27,1858,3.27,1859,3.27,1860,3.27,1861,3.27,1862,4.706]],["title/interfaces/TopicModel.html",[95,0.716,1863,2.748]],["body/interfaces/TopicModel.html",[2,0.218,3,0.218,7,0.194,18,0.015,21,0.321,93,0.013,94,0.013,95,1.027,97,1.97,99,0.321,100,0.742,107,1.078,108,0.405,109,2.869,117,5.291,436,2.537,815,5.781,855,4.052,1827,6.437,1863,4.749,1864,4.794]],["title/components/TopicPreferences.html",[0,0.224,81,0.916]],["body/components/TopicPreferences.html",[0,0.207,1,0.848,2,0.089,3,0.089,4,0.583,5,0.583,6,0.583,7,0.079,10,0.497,11,1.676,12,1.67,13,0.56,15,0.658,17,0.607,18,0.016,19,0.279,20,0.538,24,0.583,25,0.882,26,0.918,27,0.477,28,1.288,29,0.583,30,0.683,31,0.583,32,0.583,33,0.538,34,0.583,35,0.538,36,0.583,37,0.583,38,0.538,39,0.583,40,0.967,41,0.814,42,1.007,43,0.583,44,0.848,45,0.583,46,0.967,47,0.583,48,0.517,49,0.583,50,0.538,51,0.583,52,0.538,53,1.568,54,0.583,55,0.477,56,0.583,57,0.538,58,0.583,59,0.583,60,0.538,61,0.583,62,0.538,63,0.583,64,0.538,65,0.583,66,0.497,67,0.517,68,0.583,69,0.538,70,0.583,71,0.497,72,0.583,73,0.538,74,0.583,75,0.538,76,0.583,77,0.538,78,0.583,79,0.538,80,0.583,81,1.048,82,1.437,83,0.583,84,0.517,85,0.56,86,0.439,87,0.497,88,0.517,89,0.583,90,0.517,91,0.56,92,0.583,93,0.007,94,0.007,99,0.132,100,0.397,107,0.485,108,0.323,118,1.374,119,1.43,121,1.133,124,0.807,126,1.237,131,0.855,133,0.774,136,2.03,138,0.751,139,0.635,143,2.208,147,0.855,158,1.17,161,0.774,169,1.036,185,2.697,200,1.453,205,1.615,216,0.842,238,2.971,254,1.843,263,1.749,271,2.064,286,2.198,289,2.553,296,1.007,308,1.495,314,2.945,321,1.615,322,1.057,330,2.354,333,0.774,341,2.986,352,1.615,353,1.64,357,1.764,382,2.198,387,1.947,388,2.354,389,3.593,399,3.835,401,1.311,403,2.198,404,1.396,410,3.084,416,2.912,436,2.067,437,1.495,456,2.719,457,1.111,458,1.311,460,1.111,461,1.311,462,1.396,466,2.064,467,1.311,468,1.843,469,1.311,477,2.896,486,1.311,525,2.198,567,4.516,570,4.719,588,1.964,676,1.17,759,2.719,772,2.542,780,2.778,798,1.764,807,1.764,851,1.495,855,3.519,856,1.495,858,1.615,860,1.764,935,1.964,939,1.764,961,3.435,962,2.778,1005,1.764,1162,2.778,1290,1.964,1291,1.964,1292,2.778,1311,1.615,1312,3.435,1314,3.144,1315,3.144,1316,2.912,1323,1.964,1498,1.964,1539,1.964,1689,1.964,1692,3.093,1695,1.964,1863,2.542,1865,5.008,1866,5.008,1867,1.764,1868,2.268,1869,2.268,1870,3.571,1871,3.571,1872,3.571,1873,3.571,1874,3.571,1875,2.268,1876,2.268,1877,2.268,1878,2.268,1879,2.268,1880,2.268,1881,2.268,1882,2.268,1883,2.268,1884,6.056,1885,6.056,1886,6.056,1887,2.268,1888,4.417,1889,1.615,1890,2.268,1891,1.764,1892,2.268,1893,2.268,1894,2.268,1895,2.268,1896,2.268,1897,2.268,1898,2.268,1899,2.268,1900,2.268,1901,2.268,1902,5.449,1903,2.268,1904,2.268,1905,2.268,1906,2.268,1907,4.417,1908,2.268,1909,2.268,1910,2.268,1911,2.268,1912,2.268,1913,2.268,1914,2.268,1915,2.268,1916,5.01,1917,2.268,1918,2.268,1919,2.268,1920,2.268,1921,2.268,1922,2.268,1923,2.268,1924,1.964,1925,2.268,1926,2.268,1927,3.571,1928,3.571,1929,3.571,1930,3.571]],["title/interfaces/UserModel.html",[95,0.716,219,1.992]],["body/interfaces/UserModel.html",[2,0.223,3,0.223,7,0.198,18,0.015,21,0.328,86,1.448,93,0.013,94,0.013,95,1.048,97,2.009,99,0.328,100,0.75,107,1.096,108,0.398,219,3.483,228,5.82,229,5.82,436,2.554,1931,4.89]],["title/injectables/UserService.html",[149,1.165,1932,3.002]],["body/injectables/UserService.html",[2,0.178,3,0.178,7,0.158,17,0.649,18,0.016,19,0.554,21,0.261,22,0.583,30,0.649,93,0.011,94,0.011,99,0.261,100,0.651,107,0.611,108,0.367,111,2.096,118,1.283,119,1.336,121,1.218,131,1.134,133,1.536,138,1.369,139,1.159,147,1.335,148,3.166,149,1.768,153,2.967,156,1.601,159,1.998,160,2.723,169,1.889,186,2.204,188,3.194,200,1.699,205,4.17,219,3.56,220,3.897,223,2.204,225,1.999,345,2.453,535,3.5,536,4.912,1790,5.641,1932,4.556,1933,3.897,1934,6.513,1935,6.899,1936,6.899,1937,5.858,1938,5.858,1939,5.858,1940,4.499,1941,4.499,1942,5.858,1943,4.499,1944,5.858,1945,6.513,1946,4.499,1947,5.858,1948,4.499,1949,5.858,1950,4.499,1951,4.499,1952,4.499,1953,4.499,1954,4.499]],["title/components/VerifyEmail.html",[0,0.224,84,0.88]],["body/components/VerifyEmail.html",[0,0.37,1,1.353,2,0.17,3,0.17,4,1.11,5,1.11,6,1.11,7,0.151,10,0.945,11,1.779,12,1.777,13,1.408,15,1.653,17,0.406,18,0.015,19,0.532,20,1.024,21,0.25,22,0.559,23,4.936,24,1.11,25,1.408,26,1.466,27,0.907,28,1.746,29,1.11,30,0.636,31,1.11,32,1.11,33,1.024,34,1.11,35,1.024,36,1.11,37,1.11,38,1.024,39,1.11,40,0.945,41,0.984,42,0.984,43,1.11,44,1.024,45,1.11,46,0.945,47,1.11,48,0.984,49,1.11,50,1.024,51,1.11,52,1.024,53,1.024,54,1.11,55,0.907,56,1.11,57,1.024,58,1.11,59,1.11,60,1.024,61,1.11,62,1.024,63,1.11,64,1.024,65,1.11,66,0.945,67,0.984,68,1.11,69,1.024,70,1.11,71,0.945,72,1.11,73,1.024,74,1.11,75,1.024,76,1.11,77,1.024,78,1.11,79,1.024,80,1.11,81,1.024,82,1.024,83,1.11,84,1.548,85,1.876,86,1.366,87,0.945,88,0.984,89,1.11,90,0.984,91,1.066,92,1.11,93,0.011,94,0.011,1955,3.737,1956,3.356,1957,3.737,1958,5.699,1959,5.699]],["title/interfaces/VerifyEmailResponse.html",[95,0.716,1201,2.376]],["body/interfaces/VerifyEmailResponse.html",[2,0.213,3,0.213,7,0.189,17,0.507,18,0.016,21,0.427,30,0.537,86,1.271,93,0.013,94,0.013,95,1.367,97,1.919,99,0.313,100,0.73,107,1.085,108,0.35,109,2.628,191,3.556,194,3.556,207,3.117,219,3.388,230,3.795,250,3.802,345,2.94,1195,3.32,1196,3.556,1197,3.556,1198,3.84,1199,3.32,1200,3.84,1201,4.042,1202,4.258]],["title/coverage.html",[1960,4.579]],["body/coverage.html",[0,0.453,7,0.103,8,2.536,9,2.536,12,0.641,18,0.016,22,0.562,27,0.913,33,0.695,35,0.695,38,0.695,40,0.641,42,0.99,44,0.695,46,0.641,48,0.668,50,0.695,52,0.695,55,0.616,57,0.695,60,0.695,62,0.695,64,0.695,66,0.641,69,0.695,71,0.641,73,0.695,75,0.695,77,0.695,79,0.695,81,0.695,82,0.695,84,0.668,88,0.668,90,0.668,93,0.008,94,0.008,95,1.395,96,2.085,98,2.536,108,0.341,110,2.536,127,2.536,128,2.085,130,2.536,135,1.693,149,2.098,187,2.536,207,1.693,217,1.693,219,1.511,225,0.999,247,1.931,248,3.377,249,2.536,253,2.536,255,1.803,259,1.931,275,1.931,296,3.625,328,1.597,358,2.536,370,2.536,371,2.278,372,2.536,384,2.536,399,3.612,400,2.536,401,1.693,402,2.536,434,2.278,435,2.536,439,1.597,442,1.931,444,3.411,445,3.411,446,3.684,457,1.434,460,1.434,465,1.931,528,2.278,529,2.536,530,2.278,531,2.536,545,2.672,552,2.536,603,2.536,604,2.536,637,2.278,655,2.536,672,2.536,691,2.536,692,2.536,720,2.536,752,2.536,753,2.278,754,2.536,759,1.803,1106,2.536,1130,1.693,1151,2.536,1195,1.803,1196,3.773,1197,3.773,1199,1.803,1201,1.803,1204,2.536,1205,2.536,1226,2.085,1227,2.278,1228,2.536,1332,2.536,1333,2.278,1334,2.536,1342,3.377,1349,2.278,1375,2.536,1376,2.536,1401,1.803,1402,3.377,1406,1.803,1410,2.536,1523,2.536,1559,3.773,1560,1.931,1561,1.931,1579,2.536,1602,2.536,1659,2.536,1666,2.278,1706,2.536,1755,2.536,1759,1.931,1777,2.278,1778,2.278,1780,2.536,1789,2.536,1806,2.536,1825,2.278,1826,2.536,1828,2.536,1863,2.085,1864,2.536,1865,3.091,1866,3.091,1867,3.377,1931,2.536,1932,2.278,1933,2.536,1955,2.536,1956,2.278,1957,2.536,1960,2.536,1961,2.928,1962,2.928,1963,2.928,1964,2.536,1965,6.111,1966,2.536,1967,7.561,1968,2.536,1969,2.085,1970,4.342,1971,6.401,1972,2.536,1973,2.536,1974,2.536,1975,6.625,1976,6.625,1977,6.111,1978,2.536,1979,6.111,1980,6.625,1981,2.536,1982,2.928,1983,6.111,1984,2.928,1985,4.342,1986,2.928,1987,2.928,1988,2.928,1989,4.342,1990,2.928,1991,2.928,1992,2.928,1993,2.928,1994,2.536,1995,2.536,1996,2.928,1997,2.536,1998,2.536,1999,2.928,2000,2.928]],["title/dependencies.html",[2001,2.783,2002,4.025]],["body/dependencies.html",[18,0.016,19,0.705,93,0.013,94,0.013,124,2.037,156,2.037,322,2.667,380,2.803,1206,5.171,1219,4.957,1220,4.452,1222,5.893,1819,4.957,2002,4.957,2003,7.786,2004,5.723,2005,5.723,2006,5.723,2007,5.723,2008,5.723,2009,5.723,2010,5.723,2011,5.723,2012,5.723,2013,5.723,2014,5.723]],["title/miscellaneous/functions.html",[2015,1.978,2016,4.025]],["body/miscellaneous/functions.html",[7,0.259,18,0.014,30,0.597,93,0.014,94,0.014,99,0.348,108,0.319,138,1.26,139,1.067,440,3.609,607,6.057,615,4.042,637,5.44,1994,5.192,1995,6.057,2015,3.69,2016,5.192,2017,5.995,2018,5.995]],["title/index.html",[99,0.224,2019,3.86]],["body/index.html",[0,0.387,1,1.12,3,0.186,18,0.012,87,1.033,93,0.012,94,0.012,118,1.322,183,3.359,225,1.61,393,4.086,486,2.727,498,4.787,521,3.359,525,4.101,564,3.111,838,4.086,903,4.086,1203,4.086,1220,3.67,1278,6.432,1322,3.359,1548,4.086,1550,4.086,1576,4.086,1889,3.359,1924,4.086,2020,4.718,2021,6.662,2022,6.04,2023,7.024,2024,7.26,2025,4.086,2026,4.718,2027,6.04,2028,6.662,2029,4.086,2030,7.427,2031,7.427,2032,4.718,2033,6.04,2034,4.718,2035,4.718,2036,4.718,2037,6.04,2038,4.718,2039,4.718,2040,4.718,2041,4.718,2042,6.04,2043,6.04,2044,4.718,2045,4.718,2046,4.718,2047,4.718,2048,4.718,2049,4.718,2050,4.718,2051,4.718,2052,6.662,2053,4.718,2054,4.718,2055,4.718,2056,4.718,2057,4.718,2058,4.086,2059,4.718,2060,4.718,2061,4.718,2062,6.04,2063,6.662,2064,4.718,2065,4.718,2066,4.718,2067,4.718,2068,4.718,2069,4.718,2070,6.662,2071,4.718,2072,4.718,2073,6.04,2074,4.718,2075,4.718,2076,4.718,2077,4.718,2078,4.718,2079,4.718,2080,4.718,2081,4.718,2082,4.718,2083,4.718,2084,4.718]],["title/modules.html",[1891,4.113]],["body/modules.html",[18,0.014,93,0.014,94,0.014,1891,4.932]],["title/overview.html",[1889,3.764]],["body/overview.html",[1,1.451,18,0.014,87,1.338,93,0.014,94,0.014,97,2.175,186,2.993,296,2.714,328,3.332,443,4.351,851,4.663,856,4.663,1555,5.292,1777,4.753,1889,4.351,2085,6.111,2086,6.111]],["title/properties.html",[100,0.517,2001,2.783]],["body/properties.html",[18,0.015,93,0.014,94,0.014,100,0.7,2025,5.451,2087,6.294]],["title/routes.html",[1969,3.764]],["body/routes.html",[18,0.014,93,0.014,94,0.014,1969,4.515]],["title/miscellaneous/typealiases.html",[2015,1.978,2088,4.648]],["body/miscellaneous/typealiases.html",[2,0.223,18,0.015,82,1.602,93,0.013,94,0.013,99,0.328,108,0.398,196,5.617,248,4.392,275,4.451,353,2.096,399,3.078,654,2.914,848,3.902,849,3.264,878,3.264,1202,3.264,1342,4.392,1349,5.251,1364,4.392,1559,3.723,1561,4.451,1666,5.251,1865,4.02,1866,4.02,1867,5.251,1978,5.846,1981,4.89,2015,3.475,2089,5.646,2090,5.646,2091,5.646,2092,5.646,2093,5.646,2094,5.646]],["title/miscellaneous/variables.html",[2015,1.978,2095,4.025]],["body/miscellaneous/variables.html",[18,0.016,41,0.854,48,0.854,53,0.889,55,0.787,71,0.82,85,0.925,86,0.725,93,0.01,94,0.01,99,0.217,108,0.358,118,1.472,119,1.533,128,2.666,140,2.913,143,1.517,146,3.243,151,3.243,161,1.768,169,1.086,185,2.413,224,2.913,314,1.588,333,1.768,353,1.923,382,2.305,444,2.469,445,2.469,462,2.305,468,1.933,469,2.165,532,4.028,545,3.942,561,2.305,671,4.485,753,2.913,949,4.56,952,2.913,1040,4.485,1226,3.687,1227,2.913,1292,2.913,1311,2.666,1316,2.469,1333,2.913,1350,2.913,1378,2.913,1385,3.243,1387,3.243,1627,4.485,1865,2.666,1866,2.666,1956,2.913,1964,3.243,1966,4.485,1968,3.243,1969,4.226,1972,3.243,1973,4.485,1974,4.485,1997,3.243,1998,3.243,2015,2.305,2029,3.243,2058,4.485,2095,3.243,2096,3.745,2097,3.745,2098,3.745,2099,3.745,2100,3.745,2101,3.745,2102,3.745,2103,3.745,2104,3.745,2105,3.745,2106,3.745,2107,3.745,2108,3.745,2109,3.745,2110,3.745,2111,3.745,2112,3.745,2113,3.745,2114,3.745,2115,3.745,2116,3.745,2117,3.745,2118,3.745,2119,3.745,2120,3.745,2121,7.541,2122,7.541,2123,3.745,2124,3.745,2125,3.745,2126,3.745,2127,3.745,2128,3.745,2129,3.745,2130,3.745,2131,3.745,2132,3.745,2133,3.745,2134,3.745,2135,3.745,2136,3.745,2137,3.745,2138,3.745,2139,3.745,2140,5.936,2141,3.745,2142,3.745,2143,3.745,2144,3.745,2145,3.745,2146,3.745,2147,3.745,2148,3.745,2149,3.745,2150,3.745,2151,3.745,2152,3.745,2153,3.745,2154,3.745,2155,3.745]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"components/About.html":{},"interfaces/AnswerModel.html":{},"components/App.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/ChatMessage.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"interfaces/ExamModel.html":{},"classes/ExamSettings.html":{},"interfaces/ExerciseModel.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"directives/PasswordValidator.html":{},"interfaces/Plan.html":{},"components/Practice.html":{},"components/Pricing.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"interfaces/SignupPayload.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"interfaces/SubscriptionStatus.html":{},"components/Subtopic.html":{},"interfaces/SubtopicModel.html":{},"components/Toast.html":{},"interfaces/TopicModel.html":{},"components/TopicPreferences.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"components/VerifyEmail.html":{},"interfaces/VerifyEmailResponse.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":296,"title":{},"body":{"components/Chatbot.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Home.html":{},"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{},"coverage.html":{},"overview.html":{}}}],["0.0.0",{"_index":2087,"title":{},"body":{"properties.html":{}}}],["0.16.22",{"_index":2005,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1967,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1984,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1990,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1985,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1991,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1986,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1989,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1987,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1970,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":1988,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1971,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1976,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1977,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1980,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1975,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1983,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1982,"title":{},"body":{"coverage.html":{}}}],["0/per",{"_index":1534,"title":{},"body":{"components/Pricing.html":{}}}],["01t12:00:00z",{"_index":1675,"title":{},"body":{"components/Subjects.html":{}}}],["1",{"_index":851,"title":{},"body":{"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/TopicPreferences.html":{},"overview.html":{}}}],["1.3.1",{"_index":2012,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":617,"title":{},"body":{"directives/FileTypeDirective.html":{},"components/Subjects.html":{}}}],["100",{"_index":1052,"title":{},"body":{"components/LessonPage.html":{},"components/Pricing.html":{},"components/Subjects.html":{}}}],["1024",{"_index":618,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["10mb",{"_index":623,"title":{},"body":{"directives/FileTypeDirective.html":{},"components/Pricing.html":{}}}],["14.1.0",{"_index":2006,"title":{},"body":{"dependencies.html":{}}}],["15,000/per",{"_index":1553,"title":{},"body":{"components/Pricing.html":{}}}],["16",{"_index":2086,"title":{},"body":{"overview.html":{}}}],["1_000",{"_index":1282,"title":{},"body":{"components/NamingUpload.html":{}}}],["1_000_000",{"_index":1279,"title":{},"body":{"components/NamingUpload.html":{}}}],["2",{"_index":856,"title":{},"body":{"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/Pricing.html":{},"components/TopicPreferences.html":{},"overview.html":{}}}],["2.0.3",{"_index":2007,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":2014,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1551,"title":{},"body":{"components/Pricing.html":{}}}],["20.0.0",{"_index":2008,"title":{},"body":{"dependencies.html":{}}}],["20.1.0",{"_index":2003,"title":{},"body":{"dependencies.html":{}}}],["20.1.5",{"_index":2026,"title":{},"body":{"index.html":{}}}],["2025",{"_index":396,"title":{},"body":{"components/Contact.html":{}}}],["20mb",{"_index":1558,"title":{},"body":{"components/Pricing.html":{}}}],["25",{"_index":1555,"title":{},"body":{"components/Pricing.html":{},"overview.html":{}}}],["250",{"_index":432,"title":{},"body":{"components/CreationStepTab.html":{}}}],["2500",{"_index":1359,"title":{},"body":{"injectables/NotificationService.html":{}}}],["25mb",{"_index":1327,"title":{},"body":{"components/NamingUpload.html":{}}}],["2dkap",{"_index":1670,"title":{},"body":{"components/Subjects.html":{}}}],["3",{"_index":858,"title":{},"body":{"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{}}}],["30",{"_index":1677,"title":{},"body":{"components/Subjects.html":{}}}],["3mb",{"_index":1542,"title":{},"body":{"components/Pricing.html":{}}}],["4",{"_index":860,"title":{},"body":{"components/LessonPage.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{}}}],["4/7",{"_index":1993,"title":{},"body":{"coverage.html":{}}}],["4000",{"_index":1353,"title":{},"body":{"injectables/NotificationService.html":{}}}],["401",{"_index":173,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["404",{"_index":1341,"title":{},"body":{"components/NotFound.html":{}}}],["5",{"_index":1539,"title":{},"body":{"components/Pricing.html":{},"components/TopicPreferences.html":{}}}],["50",{"_index":1680,"title":{},"body":{"components/Subjects.html":{},"components/Toast.html":{}}}],["500",{"_index":433,"title":{},"body":{"components/CreationStepTab.html":{},"components/Toast.html":{}}}],["5000",{"_index":1356,"title":{},"body":{"injectables/NotificationService.html":{}}}],["57",{"_index":1992,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1892,"title":{},"body":{"components/TopicPreferences.html":{}}}],["6000/per",{"_index":1545,"title":{},"body":{"components/Pricing.html":{}}}],["7",{"_index":1894,"title":{},"body":{"components/TopicPreferences.html":{}}}],["7.8.0",{"_index":2009,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1393,"title":{},"body":{"directives/PasswordValidator.html":{},"components/Pricing.html":{},"components/Signup.html":{}}}],["800",{"_index":429,"title":{},"body":{"components/CreationStepTab.html":{}}}],["9",{"_index":2085,"title":{},"body":{"overview.html":{}}}],["900",{"_index":431,"title":{},"body":{"components/CreationStepTab.html":{}}}],["_timer",{"_index":1343,"title":{},"body":{"injectables/NotificationService.html":{}}}],["a2m90",{"_index":1886,"title":{},"body":{"components/TopicPreferences.html":{}}}],["about'},{'name",{"_index":31,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["about.css",{"_index":16,"title":{},"body":{"components/About.html":{}}}],["about.html",{"_index":14,"title":{},"body":{"components/About.html":{}}}],["abstractcontrol",{"_index":1380,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["access",{"_index":1183,"title":{},"body":{"components/Login.html":{},"components/Pricing.html":{}}}],["accessors",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesstoken",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"interfaces/SignupPayload.html":{},"interfaces/VerifyEmailResponse.html":{}}}],["account",{"_index":1656,"title":{},"body":{"components/Signup.html":{}}}],["active",{"_index":411,"title":{},"body":{"components/CreationStepTab.html":{}}}],["activities",{"_index":900,"title":{},"body":{"components/LessonPage.html":{}}}],["actual_component",{"_index":92,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["actually",{"_index":1493,"title":{},"body":{"components/Practice.html":{}}}],["adapt",{"_index":598,"title":{},"body":{"components/Features.html":{}}}],["added",{"_index":1275,"title":{},"body":{"components/NamingUpload.html":{}}}],["addfiles",{"_index":1233,"title":{},"body":{"components/NamingUpload.html":{}}}],["addfiles(filelist",{"_index":1241,"title":{},"body":{"components/NamingUpload.html":{}}}],["additional",{"_index":2079,"title":{},"body":{"index.html":{}}}],["address",{"_index":1184,"title":{},"body":{"components/Login.html":{},"components/Signup.html":{}}}],["africa",{"_index":916,"title":{},"body":{"components/LessonPage.html":{}}}],["afterviewinit",{"_index":320,"title":{},"body":{"components/Chatbot.html":{}}}],["again",{"_index":1315,"title":{},"body":{"components/NamingUpload.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["ai",{"_index":594,"title":{},"body":{"components/Features.html":{},"components/Landing.html":{},"components/Signup.html":{}}}],["alert(\"failed",{"_index":1688,"title":{},"body":{"components/Subjects.html":{}}}],["alert(\"first",{"_index":1633,"title":{},"body":{"components/Signup.html":{}}}],["alert('signup",{"_index":1641,"title":{},"body":{"components/Signup.html":{}}}],["alias",{"_index":1979,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":2089,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowed",{"_index":613,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["allowedtypes.includes(file.type",{"_index":1263,"title":{},"body":{"components/NamingUpload.html":{}}}],["allsubtopicsread",{"_index":1062,"title":{},"body":{"components/LessonPage.html":{}}}],["alongside",{"_index":1578,"title":{},"body":{"components/QuestionSettings.html":{}}}],["altering",{"_index":908,"title":{},"body":{"components/LessonPage.html":{}}}],["amazon",{"_index":868,"title":{},"body":{"components/LessonPage.html":{}}}],["america",{"_index":918,"title":{},"body":{"components/LessonPage.html":{}}}],["angular",{"_index":2023,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":380,"title":{},"body":{"components/ConfirmLogout.html":{},"components/CreationStepTab.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/NotFound.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Toast.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":153,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/ExerciseService.html":{},"injectables/HttpBaseService.html":{},"injectables/SubscriptionService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":2004,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":19,"title":{},"body":{"components/About.html":{},"components/App.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"injectables/UserService.html":{},"components/VerifyEmail.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":322,"title":{},"body":{"components/Chatbot.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{},"components/TopicPreferences.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1219,"title":{},"body":{"pipes/MarkdownPipe.html":{},"dependencies.html":{}}}],["angular/router",{"_index":124,"title":{},"body":{"components/App.html":{},"interceptors/AuthInterceptor.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"guards/SubscriptionGuard.html":{},"components/TopicPreferences.html":{},"dependencies.html":{}}}],["answer",{"_index":902,"title":{},"body":{"components/LessonPage.html":{},"injectables/LessonService.html":{}}}],["answermodel",{"_index":96,"title":{"interfaces/AnswerModel.html":{}},"body":{"interfaces/AnswerModel.html":{},"injectables/ExerciseService.html":{},"coverage.html":{}}}],["answers",{"_index":1519,"title":{},"body":{"components/Practice.html":{}}}],["api",{"_index":1627,"title":{},"body":{"components/Signup.html":{},"miscellaneous/variables.html":{}}}],["api/users",{"_index":1947,"title":{},"body":{"injectables/UserService.html":{}}}],["apiurl",{"_index":532,"title":{},"body":{"injectables/ExerciseService.html":{},"injectables/HttpBaseService.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":12,"title":{"components/App.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["app.css",{"_index":114,"title":{},"body":{"components/App.html":{}}}],["app.html",{"_index":113,"title":{},"body":{"components/App.html":{}}}],["appconfig",{"_index":1966,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appfiletype",{"_index":605,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["appfiletype]'},{'name",{"_index":89,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["application",{"_index":2037,"title":{},"body":{"index.html":{}}}],["application/pdf','image/png",{"_index":616,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["applicationconfig",{"_index":2101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apppasswordvalidator",{"_index":91,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["arctic",{"_index":896,"title":{},"body":{"components/LessonPage.html":{}}}],["areas",{"_index":601,"title":{},"body":{"components/Features.html":{}}}],["arguments",{"_index":630,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["array",{"_index":453,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/QuestionSettings.html":{}}}],["array.isarray(topic.subtopics",{"_index":1063,"title":{},"body":{"components/LessonPage.html":{}}}],["artifacts",{"_index":2055,"title":{},"body":{"index.html":{}}}],["asia",{"_index":915,"title":{},"body":{"components/LessonPage.html":{}}}],["asked",{"_index":1498,"title":{},"body":{"components/Practice.html":{},"components/TopicPreferences.html":{}}}],["assesment",{"_index":1893,"title":{},"body":{"components/TopicPreferences.html":{}}}],["assistant",{"_index":350,"title":{},"body":{"components/Chatbot.html":{},"components/LessonPage.html":{},"components/Signup.html":{}}}],["assuming",{"_index":932,"title":{},"body":{"components/LessonPage.html":{}}}],["async",{"_index":1495,"title":{},"body":{"components/Practice.html":{}}}],["atlantic",{"_index":865,"title":{},"body":{"components/LessonPage.html":{}}}],["auth",{"_index":140,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/Header.html":{},"miscellaneous/variables.html":{}}}],["authinterceptor",{"_index":128,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authorization",{"_index":167,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/HttpBaseService.html":{}}}],["authreq",{"_index":164,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authservice",{"_index":135,"title":{"injectables/AuthService.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/Header.html":{},"components/Login.html":{},"components/Signup.html":{},"coverage.html":{}}}],["automatically",{"_index":2038,"title":{},"body":{"index.html":{}}}],["autoresize",{"_index":1414,"title":{},"body":{"components/Practice.html":{}}}],["autoresize(event",{"_index":1427,"title":{},"body":{"components/Practice.html":{}}}],["autoscrolleffect",{"_index":258,"title":{},"body":{"components/Chatbot.html":{}}}],["available",{"_index":2049,"title":{},"body":{"index.html":{}}}],["b",{"_index":1284,"title":{},"body":{"components/NamingUpload.html":{}}}],["back",{"_index":1182,"title":{},"body":{"components/Login.html":{},"components/NotFound.html":{},"components/Sidebar.html":{}}}],["backend",{"_index":1292,"title":{},"body":{"components/NamingUpload.html":{},"components/TopicPreferences.html":{},"miscellaneous/variables.html":{}}}],["base.service",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatbotService.html":{},"injectables/LessonService.html":{},"injectables/SubjectsService.html":{}}}],["base.service.ts",{"_index":692,"title":{},"body":{"injectables/HttpBaseService.html":{},"coverage.html":{}}}],["base.service.ts:11",{"_index":711,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["base.service.ts:12",{"_index":713,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["base.service.ts:14",{"_index":703,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["base.service.ts:21",{"_index":702,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["base.service.ts:25",{"_index":707,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["base.service.ts:29",{"_index":709,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["base.service.ts:33",{"_index":698,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["based",{"_index":796,"title":{},"body":{"components/LessonPage.html":{}}}],["baseurl",{"_index":1790,"title":{},"body":{"injectables/SubscriptionService.html":{},"injectables/UserService.html":{}}}],["basics",{"_index":818,"title":{},"body":{"components/LessonPage.html":{}}}],["bearer",{"_index":168,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/HttpBaseService.html":{}}}],["before",{"_index":291,"title":{},"body":{"components/Chatbot.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["behaviorsubject",{"_index":1950,"title":{},"body":{"injectables/UserService.html":{}}}],["behaviorsubject(null",{"_index":1949,"title":{},"body":{"injectables/UserService.html":{}}}],["berlin",{"_index":859,"title":{},"body":{"components/LessonPage.html":{}}}],["between",{"_index":821,"title":{},"body":{"components/LessonPage.html":{}}}],["bg",{"_index":426,"title":{},"body":{"components/CreationStepTab.html":{},"components/Toast.html":{}}}],["bgcolour",{"_index":408,"title":{},"body":{"components/CreationStepTab.html":{}}}],["biodiversity",{"_index":911,"title":{},"body":{"components/LessonPage.html":{}}}],["blue",{"_index":428,"title":{},"body":{"components/CreationStepTab.html":{},"components/Toast.html":{}}}],["body",{"_index":706,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["boolean",{"_index":109,"title":{},"body":{"interfaces/AnswerModel.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"interfaces/Plan.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{},"interfaces/SignupPayload.html":{},"injectables/SubjectsService.html":{},"interfaces/SubscriptionStatus.html":{},"interfaces/SubtopicModel.html":{},"interfaces/TopicModel.html":{},"interfaces/VerifyEmailResponse.html":{}}}],["bottom",{"_index":1837,"title":{},"body":{"components/Toast.html":{}}}],["break",{"_index":993,"title":{},"body":{"components/LessonPage.html":{}}}],["brief_description",{"_index":1827,"title":{},"body":{"interfaces/SubtopicModel.html":{},"interfaces/TopicModel.html":{}}}],["bro",{"_index":1497,"title":{},"body":{"components/Practice.html":{}}}],["browser",{"_index":1220,"title":{},"body":{"pipes/MarkdownPipe.html":{},"dependencies.html":{},"index.html":{}}}],["build",{"_index":2052,"title":{},"body":{"index.html":{}}}],["buildthis",{"_index":2053,"title":{},"body":{"index.html":{}}}],["bytes",{"_index":622,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["calculate",{"_index":1044,"title":{},"body":{"components/LessonPage.html":{}}}],["call",{"_index":1628,"title":{},"body":{"components/Signup.html":{}}}],["canactivate",{"_index":1781,"title":{},"body":{"guards/SubscriptionGuard.html":{}}}],["cancel",{"_index":376,"title":{},"body":{"components/ConfirmLogout.html":{},"injectables/SubscriptionService.html":{}}}],["cancellogout",{"_index":660,"title":{},"body":{"components/Header.html":{}}}],["capital",{"_index":828,"title":{},"body":{"components/LessonPage.html":{}}}],["capitalizefirstletter",{"_index":761,"title":{},"body":{"components/LessonPage.html":{}}}],["capitalizefirstletter(currentview.type",{"_index":1095,"title":{},"body":{"components/LessonPage.html":{}}}],["capitalizefirstletter(str",{"_index":773,"title":{},"body":{"components/LessonPage.html":{}}}],["capitals",{"_index":827,"title":{},"body":{"components/LessonPage.html":{}}}],["caps",{"_index":1074,"title":{},"body":{"components/LessonPage.html":{},"components/Practice.html":{}}}],["catcherror",{"_index":154,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/Practice.html":{}}}],["catcherror((err",{"_index":171,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["catcherror(err",{"_index":1487,"title":{},"body":{"components/Practice.html":{}}}],["categorized",{"_index":1702,"title":{},"body":{"components/Subjects.html":{}}}],["cdr",{"_index":772,"title":{},"body":{"components/LessonPage.html":{},"components/QuestionSettings.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["center",{"_index":1842,"title":{},"body":{"components/Toast.html":{}}}],["challenge",{"_index":592,"title":{},"body":{"components/Features.html":{}}}],["change",{"_index":611,"title":{},"body":{"directives/FileTypeDirective.html":{},"components/LessonPage.html":{}}}],["changedetectorref",{"_index":456,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/QuestionSettings.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["changeprogress",{"_index":1418,"title":{},"body":{"components/Practice.html":{}}}],["changequestion",{"_index":1419,"title":{},"body":{"components/Practice.html":{}}}],["changes",{"_index":287,"title":{},"body":{"components/Chatbot.html":{},"components/Practice.html":{}}}],["changesubtopic",{"_index":762,"title":{},"body":{"components/LessonPage.html":{}}}],["changesubtopic(event",{"_index":776,"title":{},"body":{"components/LessonPage.html":{}}}],["characters",{"_index":1653,"title":{},"body":{"components/Signup.html":{}}}],["chat",{"_index":356,"title":{},"body":{"components/Chatbot.html":{},"components/LessonPage.html":{}}}],["chatbot",{"_index":33,"title":{"components/Chatbot.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["chatbot'},{'name",{"_index":34,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["chatbot.css",{"_index":257,"title":{},"body":{"components/Chatbot.html":{}}}],["chatbot.html",{"_index":256,"title":{},"body":{"components/Chatbot.html":{}}}],["chatbot/chatbot",{"_index":804,"title":{},"body":{"components/LessonPage.html":{}}}],["chatbotservice",{"_index":259,"title":{"injectables/ChatbotService.html":{}},"body":{"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/LessonPage.html":{},"coverage.html":{}}}],["chatcontainer",{"_index":260,"title":{},"body":{"components/Chatbot.html":{}}}],["chathistory",{"_index":270,"title":{},"body":{"components/Chatbot.html":{},"components/LessonPage.html":{}}}],["chatmessage",{"_index":247,"title":{"interfaces/ChatMessage.html":{}},"body":{"interfaces/ChatMessage.html":{},"components/Chatbot.html":{},"components/LessonPage.html":{},"coverage.html":{}}}],["chatmetadata",{"_index":275,"title":{},"body":{"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/LessonPage.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["chatopen",{"_index":757,"title":{},"body":{"components/LessonPage.html":{}}}],["check",{"_index":1013,"title":{},"body":{"components/LessonPage.html":{}}}],["checkfortopiccompleteness",{"_index":763,"title":{},"body":{"components/LessonPage.html":{}}}],["checkfortopiccompleteness(topic_id",{"_index":778,"title":{},"body":{"components/LessonPage.html":{}}}],["choice",{"_index":849,"title":{},"body":{"components/LessonPage.html":{},"components/Practice.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{},"miscellaneous/typealiases.html":{}}}],["choose",{"_index":1576,"title":{},"body":{"components/QuestionSettings.html":{},"index.html":{}}}],["city",{"_index":829,"title":{},"body":{"components/LessonPage.html":{}}}],["class",{"_index":22,"title":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{}},"body":{"components/About.html":{},"components/App.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"pipes/MarkdownPipe.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"injectables/UserService.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["classes",{"_index":443,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Toast.html":{},"overview.html":{}}}],["clear",{"_index":178,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/NotificationService.html":{}}}],["cleartimeout(this._timer",{"_index":1367,"title":{},"body":{"injectables/NotificationService.html":{}}}],["cli",{"_index":2024,"title":{},"body":{"index.html":{}}}],["climate",{"_index":880,"title":{},"body":{"components/LessonPage.html":{}}}],["climates",{"_index":840,"title":{},"body":{"components/LessonPage.html":{}}}],["close",{"_index":1831,"title":{},"body":{"components/Toast.html":{}}}],["closechat",{"_index":273,"title":{},"body":{"components/Chatbot.html":{}}}],["code",{"_index":2042,"title":{},"body":{"index.html":{}}}],["collect",{"_index":496,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["come",{"_index":2075,"title":{},"body":{"index.html":{}}}],["command",{"_index":2070,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":373,"title":{},"body":{"components/ConfirmLogout.html":{},"components/CreationStepTab.html":{},"components/Header.html":{},"components/Landing.html":{},"components/NotFound.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Toast.html":{}}}],["companion",{"_index":390,"title":{},"body":{"components/Contact.html":{}}}],["compile",{"_index":2054,"title":{},"body":{"index.html":{}}}],["complete",{"_index":521,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{},"index.html":{}}}],["completed",{"_index":815,"title":{},"body":{"components/LessonPage.html":{},"components/Subjects.html":{},"interfaces/TopicModel.html":{}}}],["completed}/${total",{"_index":1054,"title":{},"body":{"components/LessonPage.html":{}}}],["completion",{"_index":1676,"title":{},"body":{"components/Subjects.html":{}}}],["complex",{"_index":566,"title":{},"body":{"components/Features.html":{},"components/Signup.html":{}}}],["complexity",{"_index":575,"title":{},"body":{"components/Features.html":{}}}],["component",{"_index":0,"title":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":29,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["components",{"_index":1,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"index.html":{},"overview.html":{}}}],["comprehension",{"_index":560,"title":{},"body":{"components/Features.html":{}}}],["computed",{"_index":1835,"title":{},"body":{"components/Toast.html":{}}}],["concepts",{"_index":589,"title":{},"body":{"components/Features.html":{}}}],["confirm",{"_index":36,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["confirm(\"are",{"_index":1460,"title":{},"body":{"components/Practice.html":{}}}],["confirmlogout",{"_index":35,"title":{"components/ConfirmLogout.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["confirmpassword",{"_index":1200,"title":{},"body":{"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"interfaces/SignupPayload.html":{},"interfaces/VerifyEmailResponse.html":{}}}],["consistent",{"_index":1546,"title":{},"body":{"components/Pricing.html":{}}}],["console.error(\"error",{"_index":522,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["console.error(\"failed",{"_index":518,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["console.error('error",{"_index":1312,"title":{},"body":{"components/NamingUpload.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["console.error('failed",{"_index":1006,"title":{},"body":{"components/LessonPage.html":{},"components/Practice.html":{}}}],["console.error('login",{"_index":1178,"title":{},"body":{"components/Login.html":{}}}],["console.error('signup",{"_index":1642,"title":{},"body":{"components/Signup.html":{}}}],["console.error(`error",{"_index":354,"title":{},"body":{"components/Chatbot.html":{},"components/LessonPage.html":{},"components/Practice.html":{}}}],["console.error(`failed",{"_index":1026,"title":{},"body":{"components/LessonPage.html":{}}}],["console.log(\"chat",{"_index":1090,"title":{},"body":{"components/LessonPage.html":{}}}],["console.log(\"generation",{"_index":512,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["console.log(\"lesson",{"_index":1923,"title":{},"body":{"components/TopicPreferences.html":{}}}],["console.log(\"progress",{"_index":1049,"title":{},"body":{"components/LessonPage.html":{}}}],["console.log(\"session",{"_index":515,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["console.log(\"topics",{"_index":1920,"title":{},"body":{"components/TopicPreferences.html":{}}}],["console.log('files",{"_index":1295,"title":{},"body":{"components/NamingUpload.html":{}}}],["console.log('logged",{"_index":1176,"title":{},"body":{"components/Login.html":{}}}],["console.log('login",{"_index":1171,"title":{},"body":{"components/Login.html":{}}}],["console.log('signup",{"_index":1640,"title":{},"body":{"components/Signup.html":{}}}],["console.log('stage",{"_index":1296,"title":{},"body":{"components/NamingUpload.html":{}}}],["console.log('subject",{"_index":1293,"title":{},"body":{"components/NamingUpload.html":{}}}],["console.log('unauthorized",{"_index":174,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["console.log(`progress",{"_index":1053,"title":{},"body":{"components/LessonPage.html":{}}}],["console.log(`selected",{"_index":1597,"title":{},"body":{"components/Sidebar.html":{}}}],["console.log(ingestresponse",{"_index":1304,"title":{},"body":{"components/NamingUpload.html":{}}}],["console.log(labelresponse",{"_index":1308,"title":{},"body":{"components/NamingUpload.html":{}}}],["console.log(questiondata",{"_index":1505,"title":{},"body":{"components/Practice.html":{}}}],["console.log(response",{"_index":352,"title":{},"body":{"components/Chatbot.html":{},"components/NamingUpload.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["console.log(selectedtopics",{"_index":1914,"title":{},"body":{"components/TopicPreferences.html":{}}}],["console.log(this.content",{"_index":1594,"title":{},"body":{"components/Sidebar.html":{}}}],["console.log(this.currentmessage",{"_index":343,"title":{},"body":{"components/Chatbot.html":{}}}],["console.log(this.currentview",{"_index":1029,"title":{},"body":{"components/LessonPage.html":{}}}],["console.log(this.currentview()?.content?.questions.find((q",{"_index":1457,"title":{},"body":{"components/Practice.html":{}}}],["console.log(this.learningstyle",{"_index":1915,"title":{},"body":{"components/TopicPreferences.html":{}}}],["console.log(this.question",{"_index":1447,"title":{},"body":{"components/Practice.html":{}}}],["console.log(this.subjects",{"_index":1687,"title":{},"body":{"components/Subjects.html":{}}}],["console.log(this.topics",{"_index":1906,"title":{},"body":{"components/TopicPreferences.html":{}}}],["console.log(topic.exercise",{"_index":977,"title":{},"body":{"components/LessonPage.html":{}}}],["console.log(value",{"_index":1481,"title":{},"body":{"components/Practice.html":{}}}],["const",{"_index":161,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/Chatbot.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"directives/FileTypeDirective.html":{},"injectables/HttpBaseService.html":{},"components/LessonPage.html":{},"components/Login.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"injectables/SubjectsService.html":{},"components/TopicPreferences.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":133,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/ExerciseService.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"injectables/UserService.html":{}}}],["constructor(auth",{"_index":134,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/Header.html":{}}}],["constructor(cdr",{"_index":770,"title":{},"body":{"components/LessonPage.html":{}}}],["constructor(http",{"_index":535,"title":{},"body":{"injectables/ExerciseService.html":{},"injectables/SubscriptionService.html":{},"injectables/UserService.html":{}}}],["constructor(notify",{"_index":1832,"title":{},"body":{"components/Toast.html":{}}}],["constructor(private",{"_index":159,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/ExerciseService.html":{},"components/Header.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"pipes/MarkdownPipe.html":{},"components/NotFound.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"injectables/SubscriptionService.html":{},"injectables/UserService.html":{}}}],["constructor(public",{"_index":1857,"title":{},"body":{"components/Toast.html":{}}}],["constructor(router",{"_index":676,"title":{},"body":{"components/Home.html":{},"components/Landing.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["constructor(subsvc",{"_index":1758,"title":{},"body":{"components/Subscription.html":{},"guards/SubscriptionGuard.html":{}}}],["contact",{"_index":38,"title":{"components/Contact.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["contact'},{'name",{"_index":39,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["contact.css",{"_index":386,"title":{},"body":{"components/Contact.html":{}}}],["contact.html",{"_index":385,"title":{},"body":{"components/Contact.html":{}}}],["contact/contact",{"_index":688,"title":{},"body":{"components/Home.html":{}}}],["content",{"_index":576,"title":{},"body":{"components/Features.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Sidebar.html":{},"interfaces/SubtopicModel.html":{}}}],["content().exam",{"_index":1601,"title":{},"body":{"components/Sidebar.html":{}}}],["content().topics",{"_index":1599,"title":{},"body":{"components/Sidebar.html":{}}}],["context",{"_index":332,"title":{},"body":{"components/Chatbot.html":{}}}],["continent",{"_index":914,"title":{},"body":{"components/LessonPage.html":{}}}],["contributing",{"_index":909,"title":{},"body":{"components/LessonPage.html":{}}}],["control",{"_index":1382,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["control.get('confirmpassword')?.value",{"_index":1399,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["control.get('password')?.value",{"_index":1397,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["control.value",{"_index":1388,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["copy",{"_index":395,"title":{},"body":{"components/Contact.html":{}}}],["core/models/chat",{"_index":323,"title":{},"body":{"components/Chatbot.html":{},"components/LessonPage.html":{}}}],["core/models/question.model",{"_index":1440,"title":{},"body":{"components/Practice.html":{}}}],["core/models/subject.model",{"_index":1683,"title":{},"body":{"components/Subjects.html":{}}}],["core/models/subscription.model",{"_index":1769,"title":{},"body":{"components/Subscription.html":{}}}],["core/models/topic.model",{"_index":1901,"title":{},"body":{"components/TopicPreferences.html":{}}}],["core/services/auth.service",{"_index":667,"title":{},"body":{"components/Header.html":{},"components/Login.html":{},"components/Signup.html":{}}}],["core/services/chatbot.service",{"_index":325,"title":{},"body":{"components/Chatbot.html":{},"components/LessonPage.html":{}}}],["core/services/lesson.service",{"_index":807,"title":{},"body":{"components/LessonPage.html":{},"components/Practice.html":{},"components/TopicPreferences.html":{}}}],["core/services/notification.service",{"_index":461,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/QuestionSettings.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{}}}],["core/services/subjects.service",{"_index":458,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/QuestionSettings.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["core/services/subscription.service",{"_index":1768,"title":{},"body":{"components/Subscription.html":{}}}],["correct",{"_index":1562,"title":{},"body":{"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"interfaces/SaveQuestionData.html":{}}}],["correctcount",{"_index":1462,"title":{},"body":{"components/Practice.html":{}}}],["correctoptions",{"_index":101,"title":{},"body":{"interfaces/AnswerModel.html":{}}}],["count",{"_index":1034,"title":{},"body":{"components/LessonPage.html":{}}}],["counterintuitive",{"_index":1492,"title":{},"body":{"components/Practice.html":{}}}],["country",{"_index":831,"title":{},"body":{"components/LessonPage.html":{}}}],["course",{"_index":1888,"title":{},"body":{"components/TopicPreferences.html":{}}}],["coverage",{"_index":1960,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cpw",{"_index":1398,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["crafted",{"_index":745,"title":{},"body":{"components/Landing.html":{}}}],["create",{"_index":330,"title":{},"body":{"components/Chatbot.html":{},"components/NamingUpload.html":{},"components/Pricing.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["create/${sessionid}/topic",{"_index":1310,"title":{},"body":{"components/NamingUpload.html":{}}}],["create/${subject.id}/question",{"_index":1697,"title":{},"body":{"components/Subjects.html":{}}}],["create/${subject.id}/topic",{"_index":1696,"title":{},"body":{"components/Subjects.html":{}}}],["create/${this.subjectid}/question",{"_index":1925,"title":{},"body":{"components/TopicPreferences.html":{}}}],["create/:sessionid/question",{"_index":2146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["create/:sessionid/topic",{"_index":2143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["create/creation",{"_index":400,"title":{},"body":{"components/CreationStepTab.html":{},"coverage.html":{}}}],["create/naming",{"_index":1226,"title":{},"body":{"components/NamingUpload.html":{},"components/Subjects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["create/question",{"_index":444,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["create/topic",{"_index":1865,"title":{},"body":{"components/TopicPreferences.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["created_at",{"_index":1673,"title":{},"body":{"components/Subjects.html":{}}}],["creates",{"_index":584,"title":{},"body":{"components/Features.html":{}}}],["createsubject",{"_index":1707,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["createsubject(name",{"_index":1717,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["creating",{"_index":1318,"title":{},"body":{"components/NamingUpload.html":{}}}],["creation",{"_index":41,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"miscellaneous/variables.html":{}}}],["creationsteptab",{"_index":40,"title":{"components/CreationStepTab.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["credentials",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["cultures",{"_index":891,"title":{},"body":{"components/LessonPage.html":{}}}],["curious",{"_index":1536,"title":{},"body":{"components/Pricing.html":{}}}],["current",{"_index":794,"title":{},"body":{"components/LessonPage.html":{}}}],["currentindex",{"_index":1070,"title":{},"body":{"components/LessonPage.html":{},"components/Practice.html":{}}}],["currentmessage",{"_index":261,"title":{},"body":{"components/Chatbot.html":{}}}],["currenttopic",{"_index":1811,"title":{},"body":{"components/Subtopic.html":{}}}],["currenttopic().title",{"_index":1823,"title":{},"body":{"components/Subtopic.html":{}}}],["currentuser",{"_index":1934,"title":{},"body":{"injectables/UserService.html":{}}}],["currentview",{"_index":758,"title":{},"body":{"components/LessonPage.html":{},"components/Practice.html":{},"components/Sidebar.html":{},"components/Subtopic.html":{}}}],["currentview().content.score",{"_index":1520,"title":{},"body":{"components/Practice.html":{}}}],["currentview().content.title",{"_index":1824,"title":{},"body":{"components/Subtopic.html":{}}}],["currentview.content.questions.length",{"_index":1098,"title":{},"body":{"components/LessonPage.html":{}}}],["currentview.content.score",{"_index":1104,"title":{},"body":{"components/LessonPage.html":{}}}],["currentview.type",{"_index":1094,"title":{},"body":{"components/LessonPage.html":{}}}],["customize",{"_index":743,"title":{},"body":{"components/Landing.html":{}}}],["cycle",{"_index":921,"title":{},"body":{"components/LessonPage.html":{}}}],["cyclequestion",{"_index":1415,"title":{},"body":{"components/Practice.html":{}}}],["cyclequestion(direction",{"_index":1429,"title":{},"body":{"components/Practice.html":{}}}],["cyclesubtopic",{"_index":1812,"title":{},"body":{"components/Subtopic.html":{}}}],["daidj2d",{"_index":1885,"title":{},"body":{"components/TopicPreferences.html":{}}}],["dashboard",{"_index":671,"title":{},"body":{"components/Header.html":{},"miscellaneous/variables.html":{}}}],["dashboard/subscription",{"_index":2134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{},"components/NamingUpload.html":{},"components/TopicPreferences.html":{},"injectables/UserService.html":{}}}],["date(\"2023",{"_index":1674,"title":{},"body":{"components/Subjects.html":{}}}],["date().tolocalestring",{"_index":346,"title":{},"body":{"components/Chatbot.html":{}}}],["decorators",{"_index":308,"title":{},"body":{"components/Chatbot.html":{},"directives/FileTypeDirective.html":{},"components/Login.html":{},"components/Signup.html":{},"components/TopicPreferences.html":{}}}],["default",{"_index":118,"title":{},"body":{"components/App.html":{},"injectables/AuthService.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"injectables/HttpBaseService.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"injectables/NotificationService.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"injectables/SubscriptionService.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defer",{"_index":297,"title":{},"body":{"components/Chatbot.html":{}}}],["defined",{"_index":121,"title":{},"body":{"components/App.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/ConfirmLogout.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"injectables/UserService.html":{}}}],["definition",{"_index":1887,"title":{},"body":{"components/TopicPreferences.html":{}}}],["deforestation",{"_index":904,"title":{},"body":{"components/LessonPage.html":{}}}],["delete",{"_index":693,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["delete(endpoint",{"_index":697,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["dependencies",{"_index":2002,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deployed",{"_index":2111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["describe",{"_index":872,"title":{},"body":{"components/LessonPage.html":{}}}],["desert",{"_index":897,"title":{},"body":{"components/LessonPage.html":{}}}],["designed",{"_index":557,"title":{},"body":{"components/Features.html":{}}}],["detailed",{"_index":2081,"title":{},"body":{"index.html":{}}}],["dev",{"_index":2113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":2027,"title":{},"body":{"index.html":{}}}],["direction",{"_index":1068,"title":{},"body":{"components/LessonPage.html":{},"components/Practice.html":{},"components/Subtopic.html":{}}}],["directive",{"_index":27,"title":{"directives/FileTypeDirective.html":{},"directives/PasswordValidator.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["directives",{"_index":87,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"index.html":{},"overview.html":{}}}],["directly",{"_index":526,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["directory",{"_index":2057,"title":{},"body":{"index.html":{}}}],["display",{"_index":795,"title":{},"body":{"components/LessonPage.html":{}}}],["dist",{"_index":2056,"title":{},"body":{"index.html":{}}}],["distinct",{"_index":883,"title":{},"body":{"components/LessonPage.html":{}}}],["dksda",{"_index":1884,"title":{},"body":{"components/TopicPreferences.html":{}}}],["document",{"_index":1692,"title":{},"body":{"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["documentation",{"_index":1961,"title":{},"body":{"coverage.html":{}}}],["documents",{"_index":1300,"title":{},"body":{"components/NamingUpload.html":{},"components/Pricing.html":{}}}],["docx",{"_index":563,"title":{},"body":{"components/Features.html":{},"components/NamingUpload.html":{}}}],["doesn't",{"_index":1501,"title":{},"body":{"components/Practice.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["domsanitizer",{"_index":1218,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["don’t",{"_index":288,"title":{},"body":{"components/Chatbot.html":{}}}],["dragevent",{"_index":1247,"title":{},"body":{"components/NamingUpload.html":{}}}],["driven",{"_index":595,"title":{},"body":{"components/Features.html":{}}}],["durationdays",{"_index":1403,"title":{},"body":{"interfaces/Plan.html":{},"interfaces/SubscriptionStatus.html":{}}}],["during",{"_index":523,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["e.g",{"_index":335,"title":{},"body":{"components/Chatbot.html":{},"directives/FileTypeDirective.html":{}}}],["e1",{"_index":912,"title":{},"body":{"components/LessonPage.html":{}}}],["e2e",{"_index":2072,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":2074,"title":{},"body":{"index.html":{}}}],["each",{"_index":965,"title":{},"body":{"components/LessonPage.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{}}}],["earth",{"_index":864,"title":{},"body":{"components/LessonPage.html":{}}}],["easy",{"_index":558,"title":{},"body":{"components/Features.html":{},"components/Pricing.html":{},"components/Subjects.html":{}}}],["ecosystems",{"_index":841,"title":{},"body":{"components/LessonPage.html":{}}}],["effect",{"_index":283,"title":{},"body":{"components/Chatbot.html":{},"components/Practice.html":{}}}],["el",{"_index":337,"title":{},"body":{"components/Chatbot.html":{}}}],["el.scrollheight",{"_index":340,"title":{},"body":{"components/Chatbot.html":{}}}],["el.scrolltop",{"_index":339,"title":{},"body":{"components/Chatbot.html":{}}}],["element",{"_index":26,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["elementref",{"_index":307,"title":{},"body":{"components/Chatbot.html":{}}}],["email",{"_index":86,"title":{},"body":{"components/About.html":{},"components/App.html":{},"injectables/AuthService.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"interfaces/SignupPayload.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"interfaces/UserModel.html":{},"components/VerifyEmail.html":{},"interfaces/VerifyEmailResponse.html":{},"miscellaneous/variables.html":{}}}],["email').then(m",{"_index":2130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["email.css",{"_index":1959,"title":{},"body":{"components/VerifyEmail.html":{}}}],["email.html",{"_index":1958,"title":{},"body":{"components/VerifyEmail.html":{}}}],["email.ts",{"_index":1957,"title":{},"body":{"components/VerifyEmail.html":{},"coverage.html":{}}}],["email/verify",{"_index":1956,"title":{},"body":{"components/VerifyEmail.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emailctrl",{"_index":1153,"title":{},"body":{"components/Login.html":{},"components/Signup.html":{}}}],["emailctrl.errors?.['email",{"_index":1188,"title":{},"body":{"components/Login.html":{},"components/Signup.html":{}}}],["emailctrl.errors?.['required",{"_index":1187,"title":{},"body":{"components/Login.html":{},"components/Signup.html":{}}}],["emailctrl.errors?.[\\'email",{"_index":1194,"title":{},"body":{"components/Login.html":{},"components/Signup.html":{}}}],["emailctrl.errors?.[\\'required",{"_index":1193,"title":{},"body":{"components/Login.html":{},"components/Signup.html":{}}}],["emailctrl.invalid",{"_index":1185,"title":{},"body":{"components/Login.html":{},"components/Signup.html":{}}}],["emailctrl.touched",{"_index":1186,"title":{},"body":{"components/Login.html":{},"components/Signup.html":{}}}],["emits",{"_index":625,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["empty",{"_index":490,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/NamingUpload.html":{},"components/QuestionSettings.html":{}}}],["end",{"_index":1278,"title":{},"body":{"components/NamingUpload.html":{},"index.html":{}}}],["endless",{"_index":582,"title":{},"body":{"components/Features.html":{}}}],["endpoint",{"_index":700,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["engaging",{"_index":578,"title":{},"body":{"components/Features.html":{}}}],["environment",{"_index":545,"title":{},"body":{"injectables/ExerciseService.html":{},"injectables/HttpBaseService.html":{},"components/LessonPage.html":{},"injectables/SubscriptionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":710,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["environment.apiurl}/exercises",{"_index":543,"title":{},"body":{"injectables/ExerciseService.html":{}}}],["environment.apiurl}/subscriptions",{"_index":1800,"title":{},"body":{"injectables/SubscriptionService.html":{}}}],["environments",{"_index":823,"title":{},"body":{"components/LessonPage.html":{}}}],["environments/environment",{"_index":546,"title":{},"body":{"injectables/ExerciseService.html":{},"injectables/HttpBaseService.html":{},"injectables/SubscriptionService.html":{}}}],["err",{"_index":185,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/Chatbot.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{},"miscellaneous/variables.html":{}}}],["err.error?.message",{"_index":2116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err.status",{"_index":172,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["err.statustext",{"_index":2117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":353,"title":{},"body":{"components/Chatbot.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"directives/FileTypeDirective.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"injectables/NotificationService.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["error('method",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["error('subject",{"_index":951,"title":{},"body":{"components/LessonPage.html":{}}}],["error(err",{"_index":938,"title":{},"body":{"components/LessonPage.html":{}}}],["error.interceptor.ts",{"_index":1973,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["essay",{"_index":878,"title":{},"body":{"components/LessonPage.html":{},"components/Practice.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{},"miscellaneous/typealiases.html":{}}}],["essay_answer",{"_index":1468,"title":{},"body":{"components/Practice.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"interfaces/SaveQuestionData.html":{}}}],["essay_feedback",{"_index":1469,"title":{},"body":{"components/Practice.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"interfaces/SaveQuestionData.html":{}}}],["essaycalls",{"_index":1463,"title":{},"body":{"components/Practice.html":{}}}],["essaycalls.push",{"_index":1477,"title":{},"body":{"components/Practice.html":{}}}],["et1",{"_index":842,"title":{},"body":{"components/LessonPage.html":{}}}],["et2",{"_index":893,"title":{},"body":{"components/LessonPage.html":{}}}],["europe",{"_index":919,"title":{},"body":{"components/LessonPage.html":{}}}],["ev",{"_index":635,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["ev.target",{"_index":640,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["event",{"_index":631,"title":{},"body":{"directives/FileTypeDirective.html":{},"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{}}}],["event.direction",{"_index":1069,"title":{},"body":{"components/LessonPage.html":{}}}],["event.id",{"_index":1012,"title":{},"body":{"components/LessonPage.html":{}}}],["event.id).subscribe",{"_index":1021,"title":{},"body":{"components/LessonPage.html":{}}}],["event.target.checked",{"_index":473,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["event.target.value",{"_index":471,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["event.type",{"_index":1008,"title":{},"body":{"components/LessonPage.html":{}}}],["eventemitter",{"_index":377,"title":{},"body":{"components/ConfirmLogout.html":{},"directives/FileTypeDirective.html":{},"components/Landing.html":{}}}],["everything",{"_index":984,"title":{},"body":{"components/LessonPage.html":{}}}],["exactly",{"_index":1039,"title":{},"body":{"components/LessonPage.html":{}}}],["exam",{"_index":491,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"injectables/SubjectsService.html":{}}}],["exam_id",{"_index":1150,"title":{},"body":{"injectables/LessonService.html":{}}}],["exam_preference",{"_index":1751,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["examid",{"_index":1128,"title":{},"body":{"injectables/LessonService.html":{}}}],["exammodel",{"_index":434,"title":{"interfaces/ExamModel.html":{}},"body":{"interfaces/ExamModel.html":{},"coverage.html":{}}}],["example",{"_index":2030,"title":{},"body":{"index.html":{}}}],["exams",{"_index":597,"title":{},"body":{"components/Features.html":{}}}],["examsettings",{"_index":442,"title":{"classes/ExamSettings.html":{}},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{},"coverage.html":{}}}],["examvalidated",{"_index":479,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["execute",{"_index":2064,"title":{},"body":{"index.html":{}}}],["exercise",{"_index":481,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{}}}],["exercise.id",{"_index":1015,"title":{},"body":{"components/LessonPage.html":{}}}],["exercise_id",{"_index":1147,"title":{},"body":{"injectables/LessonService.html":{}}}],["exercise_preference",{"_index":1749,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["exercisecompleted",{"_index":1420,"title":{},"body":{"components/Practice.html":{}}}],["exerciseid",{"_index":1133,"title":{},"body":{"injectables/LessonService.html":{}}}],["exercisemodel",{"_index":528,"title":{"interfaces/ExerciseModel.html":{}},"body":{"interfaces/ExerciseModel.html":{},"coverage.html":{}}}],["exercises",{"_index":487,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{},"injectables/SubjectsService.html":{}}}],["exerciseservice",{"_index":530,"title":{"injectables/ExerciseService.html":{}},"body":{"injectables/ExerciseService.html":{},"coverage.html":{}}}],["exercisesettings",{"_index":465,"title":{"classes/ExerciseSettings.html":{}},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{},"coverage.html":{}}}],["exercisevalidated",{"_index":478,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["exists",{"_index":293,"title":{},"body":{"components/Chatbot.html":{}}}],["expanded",{"_index":812,"title":{},"body":{"components/LessonPage.html":{}}}],["experience",{"_index":555,"title":{},"body":{"components/Features.html":{}}}],["expiresat",{"_index":1408,"title":{},"body":{"interfaces/Plan.html":{},"interfaces/SubscriptionStatus.html":{}}}],["explain",{"_index":899,"title":{},"body":{"components/LessonPage.html":{}}}],["explanation",{"_index":1563,"title":{},"body":{"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"interfaces/SaveQuestionData.html":{}}}],["export",{"_index":21,"title":{},"body":{"components/About.html":{},"interfaces/AnswerModel.html":{},"components/App.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/ChatMessage.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"interfaces/ExamModel.html":{},"classes/ExamSettings.html":{},"interfaces/ExerciseModel.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"pipes/MarkdownPipe.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"directives/PasswordValidator.html":{},"interfaces/Plan.html":{},"components/Practice.html":{},"components/Pricing.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"interfaces/SignupPayload.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"interfaces/SubscriptionStatus.html":{},"components/Subtopic.html":{},"interfaces/SubtopicModel.html":{},"components/Toast.html":{},"interfaces/TopicModel.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"components/VerifyEmail.html":{},"interfaces/VerifyEmailResponse.html":{}}}],["extract",{"_index":925,"title":{},"body":{"components/LessonPage.html":{}}}],["f",{"_index":642,"title":{},"body":{"directives/FileTypeDirective.html":{},"components/NamingUpload.html":{}}}],["failed",{"_index":1179,"title":{},"body":{"components/Login.html":{},"components/NamingUpload.html":{},"components/Signup.html":{}}}],["fallback",{"_index":998,"title":{},"body":{"components/LessonPage.html":{}}}],["false",{"_index":314,"title":{},"body":{"components/Chatbot.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{},"injectables/SubjectsService.html":{},"guards/SubscriptionGuard.html":{},"components/TopicPreferences.html":{},"miscellaneous/variables.html":{}}}],["faqs",{"_index":1896,"title":{},"body":{"components/TopicPreferences.html":{}}}],["features",{"_index":44,"title":{"components/Features.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["features'},{'name",{"_index":45,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["features.css",{"_index":554,"title":{},"body":{"components/Features.html":{}}}],["features.html",{"_index":553,"title":{},"body":{"components/Features.html":{}}}],["features/features",{"_index":686,"title":{},"body":{"components/Home.html":{}}}],["feeback",{"_index":102,"title":{},"body":{"interfaces/AnswerModel.html":{}}}],["feedback",{"_index":1521,"title":{},"body":{"components/Practice.html":{}}}],["fetch",{"_index":935,"title":{},"body":{"components/LessonPage.html":{},"components/TopicPreferences.html":{}}}],["fetching",{"_index":939,"title":{},"body":{"components/LessonPage.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["fetchprofile",{"_index":1935,"title":{},"body":{"injectables/UserService.html":{}}}],["fields",{"_index":482,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/About.html":{},"interfaces/AnswerModel.html":{},"components/App.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/ChatMessage.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"interfaces/ExamModel.html":{},"classes/ExamSettings.html":{},"interfaces/ExerciseModel.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"directives/PasswordValidator.html":{},"interfaces/Plan.html":{},"components/Practice.html":{},"components/Pricing.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"interfaces/SignupPayload.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"interfaces/SubscriptionStatus.html":{},"components/Subtopic.html":{},"interfaces/SubtopicModel.html":{},"components/Toast.html":{},"interfaces/TopicModel.html":{},"components/TopicPreferences.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"components/VerifyEmail.html":{},"interfaces/VerifyEmailResponse.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["file(s",{"_index":1274,"title":{},"body":{"components/NamingUpload.html":{}}}],["file.name",{"_index":1329,"title":{},"body":{"components/NamingUpload.html":{}}}],["file.size",{"_index":1277,"title":{},"body":{"components/NamingUpload.html":{}}}],["fileerror",{"_index":608,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["filelist",{"_index":1242,"title":{},"body":{"components/NamingUpload.html":{}}}],["fileok",{"_index":609,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["files",{"_index":564,"title":{},"body":{"components/Features.html":{},"components/NamingUpload.html":{},"components/Pricing.html":{},"injectables/SubjectsService.html":{},"index.html":{}}}],["files.foreach((file",{"_index":1742,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["files.length",{"_index":1328,"title":{},"body":{"components/NamingUpload.html":{}}}],["filetypedirective",{"_index":88,"title":{"directives/FileTypeDirective.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["final",{"_index":1513,"title":{},"body":{"components/Practice.html":{}}}],["finally",{"_index":979,"title":{},"body":{"components/LessonPage.html":{}}}],["find",{"_index":1703,"title":{},"body":{"components/Subjects.html":{}}}],["find((exercise",{"_index":1014,"title":{},"body":{"components/LessonPage.html":{}}}],["find((subtopic",{"_index":1010,"title":{},"body":{"components/LessonPage.html":{}}}],["find((topic",{"_index":1022,"title":{},"body":{"components/LessonPage.html":{}}}],["finish",{"_index":506,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/QuestionSettings.html":{}}}],["first",{"_index":749,"title":{},"body":{"components/Landing.html":{},"components/LessonPage.html":{},"components/Practice.html":{},"components/Signup.html":{}}}],["first_name",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{},"components/Signup.html":{},"interfaces/UserModel.html":{}}}],["firstname",{"_index":1604,"title":{},"body":{"components/Signup.html":{}}}],["firstnamectrl",{"_index":1605,"title":{},"body":{"components/Signup.html":{}}}],["firstnamectrl.invalid",{"_index":1647,"title":{},"body":{"components/Signup.html":{}}}],["firstnamectrl.touched",{"_index":1648,"title":{},"body":{"components/Signup.html":{}}}],["firsttopic",{"_index":1001,"title":{},"body":{"components/LessonPage.html":{}}}],["firsttopic.subtopics.length",{"_index":1003,"title":{},"body":{"components/LessonPage.html":{}}}],["firsttopic.subtopics[0].id",{"_index":1004,"title":{},"body":{"components/LessonPage.html":{}}}],["fixed",{"_index":1836,"title":{},"body":{"components/Toast.html":{}}}],["flatmap((topic",{"_index":1009,"title":{},"body":{"components/LessonPage.html":{}}}],["flex",{"_index":1840,"title":{},"body":{"components/Toast.html":{}}}],["flexibility",{"_index":1549,"title":{},"body":{"components/Pricing.html":{}}}],["flexible",{"_index":1527,"title":{},"body":{"components/Pricing.html":{}}}],["flow",{"_index":2138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["focus",{"_index":1928,"title":{},"body":{"components/TopicPreferences.html":{}}}],["focuses",{"_index":836,"title":{},"body":{"components/LessonPage.html":{}}}],["following",{"_index":2069,"title":{},"body":{"index.html":{}}}],["forget",{"_index":581,"title":{},"body":{"components/Features.html":{}}}],["forkjoin",{"_index":459,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{}}}],["forkjoin(essaycalls.length",{"_index":1511,"title":{},"body":{"components/Practice.html":{}}}],["forkjoin(requests).subscribe",{"_index":510,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["forkjoin(topicrequests",{"_index":978,"title":{},"body":{"components/LessonPage.html":{}}}],["format",{"_index":1189,"title":{},"body":{"components/Login.html":{},"components/Signup.html":{}}}],["formatfilesize",{"_index":1234,"title":{},"body":{"components/NamingUpload.html":{}}}],["formatfilesize(file",{"_index":1244,"title":{},"body":{"components/NamingUpload.html":{}}}],["formdata",{"_index":1741,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["formdata.append('files",{"_index":1743,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["formsmodule",{"_index":254,"title":{},"body":{"components/Chatbot.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{},"components/TopicPreferences.html":{}}}],["found",{"_index":952,"title":{},"body":{"components/LessonPage.html":{},"components/NotFound.html":{},"miscellaneous/variables.html":{}}}],["found').then(m",{"_index":2154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["found'},{'name",{"_index":61,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["found.css",{"_index":1336,"title":{},"body":{"components/NotFound.html":{}}}],["found.html",{"_index":1335,"title":{},"body":{"components/NotFound.html":{}}}],["found.ts",{"_index":1334,"title":{},"body":{"components/NotFound.html":{},"coverage.html":{}}}],["found.ts:11",{"_index":1338,"title":{},"body":{"components/NotFound.html":{}}}],["found.ts:13",{"_index":1339,"title":{},"body":{"components/NotFound.html":{}}}],["found/not",{"_index":1333,"title":{},"body":{"components/NotFound.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fraction",{"_index":1046,"title":{},"body":{"components/LessonPage.html":{}}}],["fraction).subscribe",{"_index":1048,"title":{},"body":{"components/LessonPage.html":{}}}],["framework",{"_index":2076,"title":{},"body":{"index.html":{}}}],["france",{"_index":846,"title":{},"body":{"components/LessonPage.html":{}}}],["free",{"_index":1529,"title":{},"body":{"components/Pricing.html":{}}}],["frequently",{"_index":1895,"title":{},"body":{"components/TopicPreferences.html":{}}}],["function",{"_index":1996,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":2016,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["future",{"_index":751,"title":{},"body":{"components/Landing.html":{}}}],["generate",{"_index":525,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/TopicPreferences.html":{},"index.html":{}}}],["generated",{"_index":1924,"title":{},"body":{"components/TopicPreferences.html":{},"index.html":{}}}],["generateexam",{"_index":1708,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["generateexam(sessionid",{"_index":1719,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["generateexercise",{"_index":1709,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["generateexercise(sessionid",{"_index":1722,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["generatelesson",{"_index":1710,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["generatelesson(sessionid",{"_index":1724,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["generating",{"_index":1323,"title":{},"body":{"components/NamingUpload.html":{},"components/TopicPreferences.html":{}}}],["generation",{"_index":524,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{},"components/Subjects.html":{}}}],["geography",{"_index":811,"title":{},"body":{"components/LessonPage.html":{}}}],["get(endpoint",{"_index":701,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["getaccesstoken",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["getallsubjects",{"_index":1711,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["getallsubtopics",{"_index":1107,"title":{},"body":{"injectables/LessonService.html":{}}}],["getallsubtopics(topicid",{"_index":1115,"title":{},"body":{"injectables/LessonService.html":{}}}],["getalltopics",{"_index":1108,"title":{},"body":{"injectables/LessonService.html":{}}}],["getalltopics(sessionid",{"_index":1118,"title":{},"body":{"injectables/LessonService.html":{}}}],["getchathistory",{"_index":359,"title":{},"body":{"injectables/ChatbotService.html":{}}}],["getchathistory(sessionid",{"_index":360,"title":{},"body":{"injectables/ChatbotService.html":{}}}],["getcurrentuser",{"_index":1936,"title":{},"body":{"injectables/UserService.html":{}}}],["getexam",{"_index":1109,"title":{},"body":{"injectables/LessonService.html":{}}}],["getexam(sessionid",{"_index":1120,"title":{},"body":{"injectables/LessonService.html":{}}}],["getexercise",{"_index":1110,"title":{},"body":{"injectables/LessonService.html":{}}}],["getexercise(topicid",{"_index":1122,"title":{},"body":{"injectables/LessonService.html":{}}}],["getheaders",{"_index":694,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["getpastanswers",{"_index":533,"title":{},"body":{"injectables/ExerciseService.html":{}}}],["getpastanswers(id",{"_index":538,"title":{},"body":{"injectables/ExerciseService.html":{}}}],["getplans",{"_index":1791,"title":{},"body":{"injectables/SubscriptionService.html":{}}}],["getquestionnumber",{"_index":1416,"title":{},"body":{"components/Practice.html":{}}}],["getstatus",{"_index":1792,"title":{},"body":{"injectables/SubscriptionService.html":{}}}],["gettopicdatafromexercise",{"_index":764,"title":{},"body":{"components/LessonPage.html":{}}}],["gettopicdatafromexercise().title",{"_index":1096,"title":{},"body":{"components/LessonPage.html":{}}}],["gettopicdatafromsubtopic",{"_index":765,"title":{},"body":{"components/LessonPage.html":{}}}],["global",{"_index":876,"title":{},"body":{"components/LessonPage.html":{}}}],["go",{"_index":1532,"title":{},"body":{"components/Pricing.html":{}}}],["gohome",{"_index":1337,"title":{},"body":{"components/NotFound.html":{}}}],["government",{"_index":832,"title":{},"body":{"components/LessonPage.html":{}}}],["gpt",{"_index":1499,"title":{},"body":{"components/Practice.html":{}}}],["graded",{"_index":1105,"title":{},"body":{"components/LessonPage.html":{}}}],["grasp",{"_index":587,"title":{},"body":{"components/Features.html":{}}}],["green",{"_index":1849,"title":{},"body":{"components/Toast.html":{}}}],["grow",{"_index":1530,"title":{},"body":{"components/Pricing.html":{}}}],["guard",{"_index":1777,"title":{"guards/SubscriptionGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":1779,"title":{},"body":{"guards/SubscriptionGuard.html":{}}}],["hasexercisescore",{"_index":1065,"title":{},"body":{"components/LessonPage.html":{}}}],["header",{"_index":46,"title":{"components/Header.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["header'},{'name",{"_index":47,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["header.html",{"_index":658,"title":{},"body":{"components/Header.html":{}}}],["headers",{"_index":715,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["hello",{"_index":923,"title":{},"body":{"components/LessonPage.html":{}}}],["help",{"_index":586,"title":{},"body":{"components/Features.html":{},"components/LessonPage.html":{}}}],["helpbuilding",{"_index":2051,"title":{},"body":{"index.html":{}}}],["here",{"_index":1290,"title":{},"body":{"components/NamingUpload.html":{},"components/TopicPreferences.html":{}}}],["hi",{"_index":924,"title":{},"body":{"components/LessonPage.html":{}}}],["highlighting",{"_index":583,"title":{},"body":{"components/Features.html":{}}}],["history",{"_index":284,"title":{},"body":{"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/LessonPage.html":{},"components/Subjects.html":{}}}],["history.length",{"_index":295,"title":{},"body":{"components/Chatbot.html":{}}}],["home",{"_index":48,"title":{"components/Home.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["home'},{'name",{"_index":49,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["home.css",{"_index":674,"title":{},"body":{"components/Home.html":{}}}],["home.html",{"_index":673,"title":{},"body":{"components/Home.html":{}}}],["hostlistener",{"_index":636,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["hostlistener('change",{"_index":634,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["hostlisteners",{"_index":610,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["html",{"_index":25,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["htmlinputelement",{"_index":641,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["http",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatbotService.html":{},"injectables/ExerciseService.html":{},"injectables/HttpBaseService.html":{},"injectables/LessonService.html":{},"injectables/SubjectsService.html":{},"injectables/SubscriptionService.html":{},"injectables/UserService.html":{}}}],["http://localhost:4200",{"_index":2036,"title":{},"body":{"index.html":{}}}],["http://localhost:5000/api",{"_index":2112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":2106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpbaseservice",{"_index":217,"title":{"injectables/HttpBaseService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/ChatbotService.html":{},"injectables/HttpBaseService.html":{},"injectables/LessonService.html":{},"injectables/SubjectsService.html":{},"coverage.html":{}}}],["httpclient",{"_index":536,"title":{},"body":{"injectables/ExerciseService.html":{},"injectables/HttpBaseService.html":{},"injectables/SubscriptionService.html":{},"injectables/UserService.html":{}}}],["httperrorinterceptor",{"_index":1974,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["httperrorresponse",{"_index":151,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"miscellaneous/variables.html":{}}}],["httpevent",{"_index":152,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httphandler",{"_index":144,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpheaders",{"_index":704,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["httpinterceptor",{"_index":150,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpinterceptorfn",{"_index":2114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httprequest",{"_index":142,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["https://your",{"_index":2109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["human",{"_index":887,"title":{},"body":{"components/LessonPage.html":{}}}],["humans",{"_index":889,"title":{},"body":{"components/LessonPage.html":{}}}],["icon",{"_index":412,"title":{},"body":{"components/CreationStepTab.html":{}}}],["id",{"_index":436,"title":{},"body":{"interfaces/ExamModel.html":{},"interfaces/ExerciseModel.html":{},"injectables/ExerciseService.html":{},"components/LessonPage.html":{},"interfaces/Plan.html":{},"components/Practice.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"interfaces/SaveQuestionData.html":{},"components/Sidebar.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"interfaces/SubscriptionStatus.html":{},"components/Subtopic.html":{},"interfaces/SubtopicModel.html":{},"interfaces/TopicModel.html":{},"components/TopicPreferences.html":{},"interfaces/UserModel.html":{}}}],["identifier",{"_index":1962,"title":{},"body":{"coverage.html":{}}}],["if(msg",{"_index":1862,"title":{},"body":{"components/Toast.html":{}}}],["ignore/about.ts",{"_index":9,"title":{},"body":{"components/About.html":{},"coverage.html":{}}}],["impact",{"_index":901,"title":{},"body":{"components/LessonPage.html":{}}}],["implemented",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["implements",{"_index":158,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/CreationStepTab.html":{},"components/LessonPage.html":{},"pipes/MarkdownPipe.html":{},"directives/PasswordValidator.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"components/TopicPreferences.html":{}}}],["import",{"_index":17,"title":{},"body":{"components/About.html":{},"components/App.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"interfaces/ExamModel.html":{},"classes/ExamSettings.html":{},"interfaces/ExerciseModel.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"interfaces/SignupPayload.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"injectables/UserService.html":{},"components/VerifyEmail.html":{},"interfaces/VerifyEmailResponse.html":{}}}],["import('./pages/auth/login/login').then(m",{"_index":2127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./pages/auth/signup/signup').then(m",{"_index":2125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./pages/auth/verify",{"_index":2129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./pages/dashboard/subjects/subjects').then(m",{"_index":2132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./pages/dashboard/subscription/subscription').then(m",{"_index":2135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./pages/home/home/home').then(m",{"_index":2123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./pages/lesson/lesson",{"_index":2150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./pages/not",{"_index":2153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./pages/subject",{"_index":2140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["importance",{"_index":873,"title":{},"body":{"components/LessonPage.html":{}}}],["important",{"_index":830,"title":{},"body":{"components/LessonPage.html":{}}}],["imports",{"_index":20,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["improvement",{"_index":602,"title":{},"body":{"components/Features.html":{}}}],["include",{"_index":447,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{}}}],["includes",{"_index":2044,"title":{},"body":{"index.html":{}}}],["including",{"_index":838,"title":{},"body":{"components/LessonPage.html":{},"index.html":{}}}],["index",{"_index":99,"title":{"index.html":{}},"body":{"interfaces/AnswerModel.html":{},"components/App.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/ChatMessage.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/CreationStepTab.html":{},"interfaces/ExamModel.html":{},"classes/ExamSettings.html":{},"interfaces/ExerciseModel.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"directives/PasswordValidator.html":{},"interfaces/Plan.html":{},"components/Practice.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"interfaces/SignupPayload.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"interfaces/SubscriptionStatus.html":{},"components/Subtopic.html":{},"interfaces/SubtopicModel.html":{},"components/Toast.html":{},"interfaces/TopicModel.html":{},"components/TopicPreferences.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"interfaces/VerifyEmailResponse.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/About.html":{},"interfaces/AnswerModel.html":{},"components/App.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/ChatMessage.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"interfaces/ExamModel.html":{},"classes/ExamSettings.html":{},"interfaces/ExerciseModel.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"directives/PasswordValidator.html":{},"interfaces/Plan.html":{},"components/Practice.html":{},"components/Pricing.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"interfaces/SignupPayload.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"interfaces/SubscriptionStatus.html":{},"components/Subtopic.html":{},"interfaces/SubtopicModel.html":{},"components/Toast.html":{},"interfaces/TopicModel.html":{},"components/TopicPreferences.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"components/VerifyEmail.html":{},"interfaces/VerifyEmailResponse.html":{},"miscellaneous/typealiases.html":{}}}],["info@maestro.org",{"_index":394,"title":{},"body":{"components/Contact.html":{}}}],["information",{"_index":393,"title":{},"body":{"components/Contact.html":{},"index.html":{}}}],["ingest",{"_index":1299,"title":{},"body":{"components/NamingUpload.html":{}}}],["ingestdocuments",{"_index":1712,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["ingestdocuments(sessionid",{"_index":1727,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["ingesting",{"_index":1317,"title":{},"body":{"components/NamingUpload.html":{}}}],["ingestresponse",{"_index":1303,"title":{},"body":{"components/NamingUpload.html":{}}}],["initial",{"_index":334,"title":{},"body":{"components/Chatbot.html":{},"components/LessonPage.html":{}}}],["initialize",{"_index":1007,"title":{},"body":{"components/LessonPage.html":{}}}],["inject",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"injectables/HttpBaseService.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/TopicPreferences.html":{}}}],["inject(authservice",{"_index":1160,"title":{},"body":{"components/Login.html":{},"components/Signup.html":{}}}],["inject(chatbotservice",{"_index":305,"title":{},"body":{"components/Chatbot.html":{},"components/LessonPage.html":{}}}],["inject(httpbaseservice",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatbotService.html":{},"injectables/LessonService.html":{},"injectables/SubjectsService.html":{}}}],["inject(httpclient",{"_index":712,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["inject(injector",{"_index":312,"title":{},"body":{"components/Chatbot.html":{}}}],["inject(lessonservice",{"_index":798,"title":{},"body":{"components/LessonPage.html":{},"components/Practice.html":{},"components/TopicPreferences.html":{}}}],["inject(notificationservice",{"_index":469,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/QuestionSettings.html":{},"components/TopicPreferences.html":{},"miscellaneous/variables.html":{}}}],["inject(subjectsservice",{"_index":467,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/QuestionSettings.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["injectable",{"_index":149,"title":{"injectables/AuthService.html":{},"injectables/ChatbotService.html":{},"injectables/ExerciseService.html":{},"injectables/HttpBaseService.html":{},"injectables/LessonService.html":{},"injectables/NotificationService.html":{},"injectables/SubjectsService.html":{},"injectables/SubscriptionService.html":{},"injectables/UserService.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/ChatbotService.html":{},"injectables/ExerciseService.html":{},"injectables/HttpBaseService.html":{},"injectables/LessonService.html":{},"injectables/NotificationService.html":{},"injectables/SubjectsService.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatbotService.html":{},"injectables/ExerciseService.html":{},"injectables/HttpBaseService.html":{},"injectables/LessonService.html":{},"injectables/NotificationService.html":{},"injectables/SubjectsService.html":{},"injectables/SubscriptionService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injection",{"_index":331,"title":{},"body":{"components/Chatbot.html":{}}}],["injector",{"_index":262,"title":{},"body":{"components/Chatbot.html":{}}}],["input",{"_index":317,"title":{},"body":{"components/Chatbot.html":{},"components/CreationStepTab.html":{},"directives/FileTypeDirective.html":{},"components/Practice.html":{},"components/Sidebar.html":{},"components/Subtopic.html":{}}}],["input(null",{"_index":423,"title":{},"body":{"components/CreationStepTab.html":{}}}],["input.files?.[0",{"_index":643,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["input.required",{"_index":422,"title":{},"body":{"components/CreationStepTab.html":{}}}],["input.value",{"_index":652,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["inputs",{"_index":269,"title":{},"body":{"components/Chatbot.html":{},"components/CreationStepTab.html":{},"directives/FileTypeDirective.html":{},"components/Practice.html":{},"components/Sidebar.html":{},"components/Subtopic.html":{}}}],["interact",{"_index":890,"title":{},"body":{"components/LessonPage.html":{}}}],["interactive",{"_index":585,"title":{},"body":{"components/Features.html":{}}}],["intercept",{"_index":132,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercept(req",{"_index":141,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptor",{"_index":127,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":129,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interface",{"_index":95,"title":{"interfaces/AnswerModel.html":{},"interfaces/ChatMessage.html":{},"interfaces/ExamModel.html":{},"interfaces/ExerciseModel.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"interfaces/Plan.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"interfaces/SaveQuestionData.html":{},"interfaces/SignupPayload.html":{},"interfaces/SubscriptionStatus.html":{},"interfaces/SubtopicModel.html":{},"interfaces/TopicModel.html":{},"interfaces/UserModel.html":{},"interfaces/VerifyEmailResponse.html":{}},"body":{"interfaces/AnswerModel.html":{},"interfaces/ChatMessage.html":{},"interfaces/ExamModel.html":{},"interfaces/ExerciseModel.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"interfaces/Plan.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"interfaces/SaveQuestionData.html":{},"interfaces/SignupPayload.html":{},"interfaces/SubscriptionStatus.html":{},"interfaces/SubtopicModel.html":{},"interfaces/TopicModel.html":{},"interfaces/UserModel.html":{},"interfaces/VerifyEmailResponse.html":{},"coverage.html":{}}}],["interfaces",{"_index":97,"title":{},"body":{"interfaces/AnswerModel.html":{},"interfaces/ChatMessage.html":{},"interfaces/ExamModel.html":{},"interfaces/ExerciseModel.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"interfaces/Plan.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"interfaces/SaveQuestionData.html":{},"interfaces/SignupPayload.html":{},"interfaces/SubscriptionStatus.html":{},"interfaces/SubtopicModel.html":{},"interfaces/TopicModel.html":{},"interfaces/UserModel.html":{},"interfaces/VerifyEmailResponse.html":{},"overview.html":{}}}],["intro",{"_index":814,"title":{},"body":{"components/LessonPage.html":{}}}],["invalid",{"_index":650,"title":{},"body":{"directives/FileTypeDirective.html":{},"components/Login.html":{},"components/Signup.html":{}}}],["invalidfiles.join",{"_index":1269,"title":{},"body":{"components/NamingUpload.html":{}}}],["invalidfiles.length",{"_index":1266,"title":{},"body":{"components/NamingUpload.html":{}}}],["invalidfiles.push(file.name",{"_index":1265,"title":{},"body":{"components/NamingUpload.html":{}}}],["invalidpassword",{"_index":1395,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["is_correct",{"_index":854,"title":{},"body":{"components/LessonPage.html":{}}}],["isactive",{"_index":1409,"title":{},"body":{"interfaces/Plan.html":{},"interfaces/SubscriptionStatus.html":{}}}],["isallowedfile",{"_index":637,"title":{},"body":{"directives/FileTypeDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isallowedfile(f",{"_index":644,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["isallowedfile(file",{"_index":2018,"title":{},"body":{"miscellaneous/functions.html":{}}}],["iscorrect",{"_index":103,"title":{},"body":{"interfaces/AnswerModel.html":{},"components/Practice.html":{}}}],["isdragging",{"_index":1231,"title":{},"body":{"components/NamingUpload.html":{}}}],["issues",{"_index":877,"title":{},"body":{"components/LessonPage.html":{}}}],["item",{"_index":300,"title":{},"body":{"components/Chatbot.html":{}}}],["items",{"_index":1841,"title":{},"body":{"components/Toast.html":{}}}],["journey",{"_index":1700,"title":{},"body":{"components/Subjects.html":{}}}],["jpg",{"_index":1324,"title":{},"body":{"components/NamingUpload.html":{}}}],["karma",{"_index":2065,"title":{},"body":{"index.html":{}}}],["katex",{"_index":1222,"title":{},"body":{"pipes/MarkdownPipe.html":{},"dependencies.html":{}}}],["kb",{"_index":1283,"title":{},"body":{"components/NamingUpload.html":{}}}],["keep",{"_index":1538,"title":{},"body":{"components/Pricing.html":{},"components/Subjects.html":{}}}],["key",{"_index":588,"title":{},"body":{"components/Features.html":{},"components/TopicPreferences.html":{}}}],["label",{"_index":1305,"title":{},"body":{"components/NamingUpload.html":{}}}],["labeldocuments",{"_index":1713,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["labeldocuments(sessionid",{"_index":1729,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["labeling",{"_index":1313,"title":{},"body":{"components/NamingUpload.html":{}}}],["labelling",{"_index":1693,"title":{},"body":{"components/Subjects.html":{}}}],["labelresponse",{"_index":1307,"title":{},"body":{"components/NamingUpload.html":{}}}],["landforms",{"_index":839,"title":{},"body":{"components/LessonPage.html":{}}}],["landing",{"_index":50,"title":{"components/Landing.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["landing'},{'name",{"_index":51,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["landing.css",{"_index":722,"title":{},"body":{"components/Landing.html":{}}}],["landing.html",{"_index":721,"title":{},"body":{"components/Landing.html":{}}}],["landing/landing",{"_index":685,"title":{},"body":{"components/Home.html":{}}}],["large",{"_index":1557,"title":{},"body":{"components/Pricing.html":{}}}],["largest",{"_index":913,"title":{},"body":{"components/LessonPage.html":{}}}],["last",{"_index":933,"title":{},"body":{"components/LessonPage.html":{},"components/Practice.html":{},"components/Signup.html":{}}}],["last_name",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"components/Signup.html":{},"interfaces/UserModel.html":{}}}],["lastname",{"_index":1606,"title":{},"body":{"components/Signup.html":{}}}],["lastnamectrl",{"_index":1607,"title":{},"body":{"components/Signup.html":{}}}],["lastnamectrl.invalid",{"_index":1649,"title":{},"body":{"components/Signup.html":{}}}],["lastnamectrl.touched",{"_index":1650,"title":{},"body":{"components/Signup.html":{}}}],["later",{"_index":1316,"title":{},"body":{"components/NamingUpload.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{},"miscellaneous/variables.html":{}}}],["learn",{"_index":744,"title":{},"body":{"components/Landing.html":{}}}],["learner",{"_index":1528,"title":{},"body":{"components/Pricing.html":{}}}],["learners",{"_index":1537,"title":{},"body":{"components/Pricing.html":{}}}],["learning",{"_index":389,"title":{},"body":{"components/Contact.html":{},"components/Features.html":{},"components/Landing.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["learningstyle",{"_index":1870,"title":{},"body":{"components/TopicPreferences.html":{}}}],["learningstylectrl",{"_index":1871,"title":{},"body":{"components/TopicPreferences.html":{}}}],["learningstylectrl.invalid",{"_index":1929,"title":{},"body":{"components/TopicPreferences.html":{}}}],["learningstylectrl.touched",{"_index":1930,"title":{},"body":{"components/TopicPreferences.html":{}}}],["legend",{"_index":24,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["lesson",{"_index":53,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"miscellaneous/variables.html":{}}}],["lesson/:subjectid",{"_index":2149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lesson_preference",{"_index":1748,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["lessonpage",{"_index":52,"title":{"components/LessonPage.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["lessons",{"_index":568,"title":{},"body":{"components/Features.html":{},"components/Landing.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/Pricing.html":{}}}],["lessonservice",{"_index":759,"title":{"injectables/LessonService.html":{}},"body":{"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Practice.html":{},"components/TopicPreferences.html":{},"coverage.html":{}}}],["letters",{"_index":1654,"title":{},"body":{"components/Signup.html":{}}}],["lg",{"_index":1847,"title":{},"body":{"components/Toast.html":{}}}],["library",{"_index":1541,"title":{},"body":{"components/Pricing.html":{}}}],["lied",{"_index":1500,"title":{},"body":{"components/Practice.html":{}}}],["linkify",{"_index":1213,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["links",{"_index":392,"title":{},"body":{"components/Contact.html":{}}}],["list",{"_index":2048,"title":{},"body":{"index.html":{}}}],["literal",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SaveQuestionData.html":{},"miscellaneous/typealiases.html":{}}}],["literature",{"_index":1679,"title":{},"body":{"components/Subjects.html":{}}}],["load",{"_index":1689,"title":{},"body":{"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["loadcomponent",{"_index":2122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loaded",{"_index":985,"title":{},"body":{"components/LessonPage.html":{}}}],["loading",{"_index":263,"title":{},"body":{"components/Chatbot.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{},"components/TopicPreferences.html":{}}}],["local",{"_index":2029,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["localstorage.getitem('accesstoken",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpBaseService.html":{}}}],["localstorage.getitem('refreshtoken",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('accesstoken",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('refreshtoken",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('accesstoken",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"components/Login.html":{}}}],["localstorage.setitem('refreshtoken",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{},"components/Login.html":{}}}],["located",{"_index":833,"title":{},"body":{"components/LessonPage.html":{}}}],["log",{"_index":383,"title":{},"body":{"components/ConfirmLogout.html":{},"components/Signup.html":{}}}],["logcontent",{"_index":1582,"title":{},"body":{"components/Sidebar.html":{}}}],["logging",{"_index":176,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["login",{"_index":55,"title":{"components/Login.html":{}},"body":{"components/About.html":{},"components/App.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login'},{'name",{"_index":56,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["login(credentials",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.html",{"_index":1152,"title":{},"body":{"components/Login.html":{}}}],["loginpayload",{"_index":1195,"title":{"interfaces/LoginPayload.html":{}},"body":{"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"interfaces/SignupPayload.html":{},"interfaces/VerifyEmailResponse.html":{},"coverage.html":{}}}],["loginresponse",{"_index":207,"title":{"interfaces/LoginResponse.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"interfaces/SignupPayload.html":{},"interfaces/VerifyEmailResponse.html":{},"coverage.html":{}}}],["logout",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfirmLogout.html":{},"components/Header.html":{}}}],["logout'},{'name",{"_index":37,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["logout.css",{"_index":375,"title":{},"body":{"components/ConfirmLogout.html":{}}}],["logout.html",{"_index":374,"title":{},"body":{"components/ConfirmLogout.html":{}}}],["logout.ts",{"_index":372,"title":{},"body":{"components/ConfirmLogout.html":{},"coverage.html":{}}}],["logout.ts:11",{"_index":379,"title":{},"body":{"components/ConfirmLogout.html":{}}}],["logout.ts:12",{"_index":378,"title":{},"body":{"components/ConfirmLogout.html":{}}}],["logout/confirm",{"_index":371,"title":{},"body":{"components/ConfirmLogout.html":{},"components/Header.html":{},"coverage.html":{}}}],["london",{"_index":857,"title":{},"body":{"components/LessonPage.html":{}}}],["loop",{"_index":1031,"title":{},"body":{"components/LessonPage.html":{}}}],["m.home",{"_index":2124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m.lessonpage",{"_index":2152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m.login",{"_index":2128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m.namingupload",{"_index":2142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m.notfound",{"_index":2155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m.questionsettings",{"_index":2148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m.signup",{"_index":2126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m.subjects",{"_index":2133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m.subscription",{"_index":2136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m.topicpreferences",{"_index":2145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m.verifyemail",{"_index":2131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["madrid",{"_index":861,"title":{},"body":{"components/LessonPage.html":{}}}],["maestro",{"_index":387,"title":{},"body":{"components/Contact.html":{},"components/Features.html":{},"components/Header.html":{},"components/Landing.html":{},"components/Login.html":{},"components/Pricing.html":{},"components/Signup.html":{},"components/TopicPreferences.html":{}}}],["maestrofrontend",{"_index":2020,"title":{},"body":{"index.html":{}}}],["main",{"_index":894,"title":{},"body":{"components/LessonPage.html":{}}}],["map",{"_index":808,"title":{},"body":{"components/LessonPage.html":{},"guards/SubscriptionGuard.html":{}}}],["map((r",{"_index":969,"title":{},"body":{"components/LessonPage.html":{}}}],["map((res",{"_index":941,"title":{},"body":{"components/LessonPage.html":{}}}],["map((subjects",{"_index":945,"title":{},"body":{"components/LessonPage.html":{}}}],["map(st",{"_index":1786,"title":{},"body":{"guards/SubscriptionGuard.html":{}}}],["mark",{"_index":1018,"title":{},"body":{"components/LessonPage.html":{}}}],["markdown",{"_index":1206,"title":{},"body":{"pipes/MarkdownPipe.html":{},"components/Subtopic.html":{},"interfaces/SubtopicModel.html":{},"dependencies.html":{}}}],["markdownit",{"_index":1212,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["markdownitkatex",{"_index":1221,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["markdownmodule",{"_index":1818,"title":{},"body":{"components/Subtopic.html":{}}}],["markdownpipe",{"_index":255,"title":{"pipes/MarkdownPipe.html":{}},"body":{"components/Chatbot.html":{},"pipes/MarkdownPipe.html":{},"components/Practice.html":{},"components/Subtopic.html":{},"coverage.html":{}}}],["marksubtopicasread",{"_index":1111,"title":{},"body":{"injectables/LessonService.html":{}}}],["marksubtopicasread(topicid",{"_index":1124,"title":{},"body":{"injectables/LessonService.html":{}}}],["mastering",{"_index":1645,"title":{},"body":{"components/Signup.html":{}}}],["matching",{"_index":94,"title":{},"body":{"components/About.html":{},"interfaces/AnswerModel.html":{},"components/App.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/ChatMessage.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"interfaces/ExamModel.html":{},"classes/ExamSettings.html":{},"interfaces/ExerciseModel.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"directives/PasswordValidator.html":{},"interfaces/Plan.html":{},"components/Practice.html":{},"components/Pricing.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"interfaces/SignupPayload.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"interfaces/SubscriptionStatus.html":{},"components/Subtopic.html":{},"interfaces/SubtopicModel.html":{},"components/Toast.html":{},"interfaces/TopicModel.html":{},"components/TopicPreferences.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"components/VerifyEmail.html":{},"interfaces/VerifyEmailResponse.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":559,"title":{},"body":{"components/Features.html":{}}}],["materials",{"_index":742,"title":{},"body":{"components/Landing.html":{},"components/Login.html":{},"components/Subjects.html":{}}}],["math.round(fraction",{"_index":1051,"title":{},"body":{"components/LessonPage.html":{}}}],["mathematics",{"_index":1672,"title":{},"body":{"components/Subjects.html":{}}}],["max",{"_index":620,"title":{},"body":{"directives/FileTypeDirective.html":{},"components/NamingUpload.html":{}}}],["maxbytes",{"_index":607,"title":{},"body":{"directives/FileTypeDirective.html":{},"miscellaneous/functions.html":{}}}],["maxsubjects",{"_index":1404,"title":{},"body":{"interfaces/Plan.html":{},"interfaces/SubscriptionStatus.html":{}}}],["mb",{"_index":1281,"title":{},"body":{"components/NamingUpload.html":{}}}],["md",{"_index":1211,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["meet",{"_index":1643,"title":{},"body":{"components/Signup.html":{}}}],["message",{"_index":250,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/LessonPage.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"injectables/NotificationService.html":{},"interfaces/SignupPayload.html":{},"interfaces/VerifyEmailResponse.html":{}}}],["message.model",{"_index":324,"title":{},"body":{"components/Chatbot.html":{},"components/LessonPage.html":{}}}],["message.model.ts",{"_index":249,"title":{},"body":{"interfaces/ChatMessage.html":{},"coverage.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["metadata.model",{"_index":326,"title":{},"body":{"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/LessonPage.html":{}}}],["metadata.model.ts",{"_index":1978,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["methods",{"_index":131,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/CreationStepTab.html":{},"injectables/ExerciseService.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"injectables/UserService.html":{}}}],["mime",{"_index":614,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["miscellaneous",{"_index":2015,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":318,"title":{},"body":{"components/Chatbot.html":{}}}],["models/answer.model",{"_index":544,"title":{},"body":{"injectables/ExerciseService.html":{}}}],["models/auth",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["models/chat",{"_index":367,"title":{},"body":{"injectables/ChatbotService.html":{}}}],["models/question.model",{"_index":1138,"title":{},"body":{"injectables/LessonService.html":{}}}],["models/subscription.model",{"_index":1801,"title":{},"body":{"injectables/SubscriptionService.html":{}}}],["models/user.model",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["modify",{"_index":2041,"title":{},"body":{"index.html":{}}}],["modules",{"_index":1891,"title":{"modules.html":{}},"body":{"components/TopicPreferences.html":{},"modules.html":{}}}],["month",{"_index":1535,"title":{},"body":{"components/Pricing.html":{}}}],["more",{"_index":1548,"title":{},"body":{"components/Pricing.html":{},"index.html":{}}}],["mountainous",{"_index":898,"title":{},"body":{"components/LessonPage.html":{}}}],["ms",{"_index":1351,"title":{},"body":{"injectables/NotificationService.html":{}}}],["msg",{"_index":1350,"title":{},"body":{"injectables/NotificationService.html":{},"components/Toast.html":{},"miscellaneous/variables.html":{}}}],["multi",{"_index":1387,"title":{},"body":{"directives/PasswordValidator.html":{},"miscellaneous/variables.html":{}}}],["multiple",{"_index":848,"title":{},"body":{"components/LessonPage.html":{},"components/Practice.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{},"miscellaneous/typealiases.html":{}}}],["name",{"_index":30,"title":{},"body":{"components/About.html":{},"components/App.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"injectables/ExerciseService.html":{},"components/Features.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"directives/PasswordValidator.html":{},"interfaces/Plan.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"interfaces/SignupPayload.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"interfaces/SubscriptionStatus.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"injectables/UserService.html":{},"components/VerifyEmail.html":{},"interfaces/VerifyEmailResponse.html":{},"miscellaneous/functions.html":{}}}],["namectrl.errors?.['required",{"_index":1321,"title":{},"body":{"components/NamingUpload.html":{}}}],["namectrl.errors?.[\\'required",{"_index":1331,"title":{},"body":{"components/NamingUpload.html":{}}}],["namectrl.invalid",{"_index":1319,"title":{},"body":{"components/NamingUpload.html":{}}}],["namectrl.touched",{"_index":1320,"title":{},"body":{"components/NamingUpload.html":{}}}],["namefor",{"_index":2047,"title":{},"body":{"index.html":{}}}],["naming",{"_index":58,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["namingupload",{"_index":57,"title":{"components/NamingUpload.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["natural",{"_index":837,"title":{},"body":{"components/LessonPage.html":{}}}],["navigate",{"_index":2035,"title":{},"body":{"index.html":{}}}],["navigatesection",{"_index":728,"title":{},"body":{"components/Landing.html":{}}}],["navigatesubject",{"_index":1663,"title":{},"body":{"components/Subjects.html":{}}}],["navigatesubject(subject",{"_index":1665,"title":{},"body":{"components/Subjects.html":{}}}],["neatly",{"_index":1701,"title":{},"body":{"components/Subjects.html":{}}}],["need",{"_index":1547,"title":{},"body":{"components/Pricing.html":{}}}],["needed",{"_index":527,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["needs",{"_index":2078,"title":{},"body":{"index.html":{}}}],["nested",{"_index":2139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"directives/FileTypeDirective.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/QuestionSettings.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["newindex",{"_index":1072,"title":{},"body":{"components/LessonPage.html":{},"components/Practice.html":{}}}],["next",{"_index":143,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/Chatbot.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subtopic.html":{},"components/TopicPreferences.html":{},"miscellaneous/variables.html":{}}}],["next(req).pipe",{"_index":2115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next.handle(authreq).pipe",{"_index":170,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["nextsubtopic",{"_index":1809,"title":{},"body":{"components/Subtopic.html":{}}}],["ng",{"_index":2031,"title":{},"body":{"index.html":{}}}],["ng_validators",{"_index":1384,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["ngafterviewinit",{"_index":265,"title":{},"body":{"components/Chatbot.html":{}}}],["ngclass",{"_index":421,"title":{},"body":{"components/CreationStepTab.html":{}}}],["ngmodel",{"_index":1162,"title":{},"body":{"components/Login.html":{},"components/Signup.html":{},"components/TopicPreferences.html":{}}}],["ngoninit",{"_index":410,"title":{},"body":{"components/CreationStepTab.html":{},"components/Home.html":{},"components/LessonPage.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/TopicPreferences.html":{}}}],["ngx",{"_index":1819,"title":{},"body":{"components/Subtopic.html":{},"dependencies.html":{}}}],["nile",{"_index":870,"title":{},"body":{"components/LessonPage.html":{}}}],["north",{"_index":917,"title":{},"body":{"components/LessonPage.html":{}}}],["notes",{"_index":580,"title":{},"body":{"components/Features.html":{}}}],["notfound",{"_index":60,"title":{"components/NotFound.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["nothing",{"_index":997,"title":{},"body":{"components/LessonPage.html":{}}}],["noticetype",{"_index":1349,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["notificationservice",{"_index":460,"title":{"injectables/NotificationService.html":{}},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"injectables/NotificationService.html":{},"components/QuestionSettings.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"coverage.html":{}}}],["notify",{"_index":468,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"miscellaneous/variables.html":{}}}],["notify.showerror(msg",{"_index":2120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["now",{"_index":986,"title":{},"body":{"components/LessonPage.html":{}}}],["null",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"directives/FileTypeDirective.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{}}}],["number",{"_index":440,"title":{},"body":{"interfaces/ExamModel.html":{},"interfaces/ExerciseModel.html":{},"directives/FileTypeDirective.html":{},"injectables/LessonService.html":{},"injectables/NotificationService.html":{},"interfaces/Plan.html":{},"injectables/SubjectsService.html":{},"interfaces/SubscriptionStatus.html":{},"miscellaneous/functions.html":{}}}],["numbers",{"_index":1655,"title":{},"body":{"components/Signup.html":{}}}],["o.id",{"_index":1456,"title":{},"body":{"components/Practice.html":{}}}],["object",{"_index":1040,"title":{},"body":{"components/LessonPage.html":{},"miscellaneous/variables.html":{}}}],["objectives",{"_index":1890,"title":{},"body":{"components/TopicPreferences.html":{}}}],["observable",{"_index":148,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/ChatbotService.html":{},"classes/ExamSettings.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"injectables/HttpBaseService.html":{},"injectables/LessonService.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"injectables/SubjectsService.html":{},"injectables/SubscriptionService.html":{},"injectables/UserService.html":{}}}],["occurred",{"_index":2119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ocean",{"_index":866,"title":{},"body":{"components/LessonPage.html":{}}}],["oceans",{"_index":863,"title":{},"body":{"components/LessonPage.html":{}}}],["of(null",{"_index":1489,"title":{},"body":{"components/Practice.html":{}}}],["of(null)]).pipe",{"_index":1512,"title":{},"body":{"components/Practice.html":{}}}],["ok",{"_index":629,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["old_subjects",{"_index":1662,"title":{},"body":{"components/Subjects.html":{}}}],["old_topics",{"_index":1872,"title":{},"body":{"components/TopicPreferences.html":{}}}],["oncancel",{"_index":1756,"title":{},"body":{"components/Subscription.html":{}}}],["onchange",{"_index":606,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["onchange(ev",{"_index":633,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["onclosechat",{"_index":266,"title":{},"body":{"components/Chatbot.html":{}}}],["oncontactclick",{"_index":723,"title":{},"body":{"components/Landing.html":{}}}],["ondragleave",{"_index":1235,"title":{},"body":{"components/NamingUpload.html":{}}}],["ondragleave(event",{"_index":1246,"title":{},"body":{"components/NamingUpload.html":{}}}],["ondragover",{"_index":1236,"title":{},"body":{"components/NamingUpload.html":{}}}],["ondragover(event",{"_index":1249,"title":{},"body":{"components/NamingUpload.html":{}}}],["one",{"_index":486,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/QuestionSettings.html":{},"components/TopicPreferences.html":{},"index.html":{}}}],["onfeaturesclick",{"_index":724,"title":{},"body":{"components/Landing.html":{}}}],["onfiledrop",{"_index":1237,"title":{},"body":{"components/NamingUpload.html":{}}}],["onfiledrop(event",{"_index":1251,"title":{},"body":{"components/NamingUpload.html":{}}}],["onfileselect",{"_index":1238,"title":{},"body":{"components/NamingUpload.html":{}}}],["onfileselect(event",{"_index":1253,"title":{},"body":{"components/NamingUpload.html":{}}}],["ongetstartedclick",{"_index":725,"title":{},"body":{"components/Landing.html":{}}}],["onhomeclick",{"_index":726,"title":{},"body":{"components/Landing.html":{}}}],["oninit",{"_index":403,"title":{},"body":{"components/CreationStepTab.html":{},"components/LessonPage.html":{},"components/Practice.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/TopicPreferences.html":{}}}],["onpricingclick",{"_index":727,"title":{},"body":{"components/Landing.html":{}}}],["onsubmit",{"_index":477,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{},"components/TopicPreferences.html":{}}}],["onsubscribe",{"_index":1757,"title":{},"body":{"components/Subscription.html":{}}}],["onsubscribe(id",{"_index":1764,"title":{},"body":{"components/Subscription.html":{}}}],["open",{"_index":2034,"title":{},"body":{"index.html":{}}}],["openlogout",{"_index":661,"title":{},"body":{"components/Header.html":{}}}],["opt.correct",{"_index":1472,"title":{},"body":{"components/Practice.html":{}}}],["opt.id",{"_index":1475,"title":{},"body":{"components/Practice.html":{}}}],["opt.selected",{"_index":1471,"title":{},"body":{"components/Practice.html":{}}}],["optimizes",{"_index":2059,"title":{},"body":{"index.html":{}}}],["option",{"_index":1454,"title":{},"body":{"components/Practice.html":{}}}],["option.id",{"_index":1453,"title":{},"body":{"components/Practice.html":{}}}],["option.selected",{"_index":1452,"title":{},"body":{"components/Practice.html":{}}}],["option_id",{"_index":850,"title":{},"body":{"components/LessonPage.html":{}}}],["option_text",{"_index":852,"title":{},"body":{"components/LessonPage.html":{}}}],["optional",{"_index":139,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/ChatbotService.html":{},"interfaces/ExamModel.html":{},"interfaces/ExerciseModel.html":{},"injectables/ExerciseService.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"interfaces/QuestionModel.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":591,"title":{},"body":{"components/Features.html":{},"components/LessonPage.html":{},"components/Practice.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"interfaces/SaveQuestionData.html":{}}}],["out",{"_index":177,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/ConfirmLogout.html":{}}}],["output",{"_index":319,"title":{},"body":{"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"directives/FileTypeDirective.html":{},"components/Landing.html":{},"components/Practice.html":{},"components/Sidebar.html":{},"components/Subtopic.html":{}}}],["outputs",{"_index":272,"title":{},"body":{"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"directives/FileTypeDirective.html":{},"components/Landing.html":{},"components/Practice.html":{},"components/Sidebar.html":{},"components/Subtopic.html":{}}}],["overview",{"_index":1889,"title":{"overview.html":{}},"body":{"components/TopicPreferences.html":{},"index.html":{},"overview.html":{}}}],["p",{"_index":1844,"title":{},"body":{"components/Toast.html":{}}}],["pacific",{"_index":867,"title":{},"body":{"components/LessonPage.html":{}}}],["package",{"_index":2001,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":183,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/LessonPage.html":{},"components/NotFound.html":{},"index.html":{}}}],["page').then(m",{"_index":2151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["page'},{'name",{"_index":54,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["page.css",{"_index":756,"title":{},"body":{"components/LessonPage.html":{}}}],["page.html",{"_index":755,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts",{"_index":754,"title":{},"body":{"components/LessonPage.html":{},"coverage.html":{}}}],["page.ts:185",{"_index":783,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts:21",{"_index":801,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts:22",{"_index":792,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts:23",{"_index":800,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts:24",{"_index":797,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts:29",{"_index":791,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts:292",{"_index":789,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts:30",{"_index":793,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts:31",{"_index":802,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts:32",{"_index":799,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts:33",{"_index":771,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts:337",{"_index":790,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts:380",{"_index":782,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts:386",{"_index":781,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts:392",{"_index":779,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts:409",{"_index":777,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts:428",{"_index":786,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts:459",{"_index":784,"title":{},"body":{"components/LessonPage.html":{}}}],["page.ts:464",{"_index":774,"title":{},"body":{"components/LessonPage.html":{}}}],["page/lesson",{"_index":753,"title":{},"body":{"components/LessonPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["parallel",{"_index":499,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/QuestionSettings.html":{}}}],["parameters",{"_index":138,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/ChatbotService.html":{},"injectables/ExerciseService.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":1516,"title":{},"body":{"components/Practice.html":{}}}],["paris",{"_index":853,"title":{},"body":{"components/LessonPage.html":{}}}],["part",{"_index":934,"title":{},"body":{"components/LessonPage.html":{}}}],["partial",{"_index":1945,"title":{},"body":{"injectables/UserService.html":{}}}],["parts",{"_index":929,"title":{},"body":{"components/LessonPage.html":{}}}],["parts[parts.length",{"_index":931,"title":{},"body":{"components/LessonPage.html":{}}}],["password",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"components/Login.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"components/Signup.html":{},"interfaces/SignupPayload.html":{},"interfaces/VerifyEmailResponse.html":{}}}],["passwordctrl",{"_index":1154,"title":{},"body":{"components/Login.html":{},"components/Signup.html":{}}}],["passwordctrl.errors?.['invalidpassword",{"_index":1652,"title":{},"body":{"components/Signup.html":{}}}],["passwordctrl.errors?.['required",{"_index":1651,"title":{},"body":{"components/Signup.html":{}}}],["passwordctrl.errors?.[\\'invalidpassword",{"_index":1658,"title":{},"body":{"components/Signup.html":{}}}],["passwordctrl.errors?.[\\'required",{"_index":1657,"title":{},"body":{"components/Signup.html":{}}}],["passwordctrl.invalid",{"_index":1190,"title":{},"body":{"components/Login.html":{},"components/Signup.html":{}}}],["passwordctrl.touched",{"_index":1191,"title":{},"body":{"components/Login.html":{},"components/Signup.html":{}}}],["passwordmismatch",{"_index":1400,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["passwordvalidator",{"_index":90,"title":{"directives/PasswordValidator.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["passwordvisible",{"_index":1155,"title":{},"body":{"components/Login.html":{},"components/Signup.html":{}}}],["path",{"_index":2121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paths",{"_index":572,"title":{},"body":{"components/Features.html":{}}}],["patterns",{"_index":885,"title":{},"body":{"components/LessonPage.html":{}}}],["payload",{"_index":541,"title":{},"body":{"injectables/ExerciseService.html":{}}}],["payload.model",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.model.ts",{"_index":1197,"title":{},"body":{"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"interfaces/SignupPayload.html":{},"interfaces/VerifyEmailResponse.html":{},"coverage.html":{}}}],["pdf",{"_index":1326,"title":{},"body":{"components/NamingUpload.html":{}}}],["pdfs",{"_index":562,"title":{},"body":{"components/Features.html":{},"components/NamingUpload.html":{}}}],["pending",{"_index":1691,"title":{},"body":{"components/Subjects.html":{}}}],["people",{"_index":822,"title":{},"body":{"components/LessonPage.html":{}}}],["per",{"_index":1042,"title":{},"body":{"components/LessonPage.html":{},"components/Pricing.html":{}}}],["percentage",{"_index":1045,"title":{},"body":{"components/LessonPage.html":{}}}],["performance",{"_index":2060,"title":{},"body":{"index.html":{}}}],["personal",{"_index":1556,"title":{},"body":{"components/Pricing.html":{}}}],["personalized",{"_index":388,"title":{},"body":{"components/Contact.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/Pricing.html":{},"components/TopicPreferences.html":{}}}],["physical",{"_index":835,"title":{},"body":{"components/LessonPage.html":{}}}],["pick",{"_index":948,"title":{},"body":{"components/LessonPage.html":{}}}],["pinpointing",{"_index":600,"title":{},"body":{"components/Features.html":{}}}],["pipe",{"_index":328,"title":{"pipes/MarkdownPipe.html":{}},"body":{"components/Chatbot.html":{},"components/LessonPage.html":{},"pipes/MarkdownPipe.html":{},"components/Practice.html":{},"components/Subtopic.html":{},"coverage.html":{},"overview.html":{}}}],["pipe.ts",{"_index":1205,"title":{},"body":{"pipes/MarkdownPipe.html":{},"coverage.html":{}}}],["pipe.ts:11",{"_index":1216,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["pipe.ts:16",{"_index":1209,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["pipes",{"_index":1203,"title":{},"body":{"pipes/MarkdownPipe.html":{},"index.html":{}}}],["pipetransform",{"_index":1217,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["places",{"_index":819,"title":{},"body":{"components/LessonPage.html":{}}}],["plan",{"_index":1401,"title":{"interfaces/Plan.html":{}},"body":{"interfaces/Plan.html":{},"components/Subscription.html":{},"injectables/SubscriptionService.html":{},"interfaces/SubscriptionStatus.html":{},"coverage.html":{}}}],["planid",{"_index":1799,"title":{},"body":{"injectables/SubscriptionService.html":{}}}],["plans",{"_index":747,"title":{},"body":{"components/Landing.html":{},"components/Pricing.html":{},"components/Subscription.html":{}}}],["please",{"_index":1314,"title":{},"body":{"components/NamingUpload.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["png",{"_index":1325,"title":{},"body":{"components/NamingUpload.html":{}}}],["pollution",{"_index":905,"title":{},"body":{"components/LessonPage.html":{}}}],["popular",{"_index":1543,"title":{},"body":{"components/Pricing.html":{}}}],["post",{"_index":695,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["post(endpoint",{"_index":705,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["potential",{"_index":741,"title":{},"body":{"components/Landing.html":{}}}],["power",{"_index":1531,"title":{},"body":{"components/Pricing.html":{}}}],["powered",{"_index":1644,"title":{},"body":{"components/Signup.html":{}}}],["powerful",{"_index":2045,"title":{},"body":{"index.html":{}}}],["practice",{"_index":62,"title":{"components/Practice.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["practice'},{'name",{"_index":63,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["practice.css",{"_index":1412,"title":{},"body":{"components/Practice.html":{}}}],["practice.html",{"_index":1411,"title":{},"body":{"components/Practice.html":{}}}],["practice/practice",{"_index":806,"title":{},"body":{"components/LessonPage.html":{}}}],["preference",{"_index":448,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["preferences",{"_index":1311,"title":{},"body":{"components/NamingUpload.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{},"miscellaneous/variables.html":{}}}],["preferences').then(m",{"_index":2144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preferences'},{'name",{"_index":83,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["preferences.css",{"_index":1869,"title":{},"body":{"components/TopicPreferences.html":{}}}],["preferences.html",{"_index":1868,"title":{},"body":{"components/TopicPreferences.html":{}}}],["preferences.ts",{"_index":1867,"title":{},"body":{"components/TopicPreferences.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["preferences.ts:101",{"_index":1876,"title":{},"body":{"components/TopicPreferences.html":{}}}],["preferences.ts:24",{"_index":1879,"title":{},"body":{"components/TopicPreferences.html":{}}}],["preferences.ts:25",{"_index":1898,"title":{},"body":{"components/TopicPreferences.html":{}}}],["preferences.ts:26",{"_index":1881,"title":{},"body":{"components/TopicPreferences.html":{}}}],["preferences.ts:27",{"_index":1883,"title":{},"body":{"components/TopicPreferences.html":{}}}],["preferences.ts:28",{"_index":1897,"title":{},"body":{"components/TopicPreferences.html":{}}}],["preferences.ts:65",{"_index":1900,"title":{},"body":{"components/TopicPreferences.html":{}}}],["preferences.ts:66",{"_index":1899,"title":{},"body":{"components/TopicPreferences.html":{}}}],["preferences.ts:67",{"_index":1882,"title":{},"body":{"components/TopicPreferences.html":{}}}],["preferences.ts:68",{"_index":1874,"title":{},"body":{"components/TopicPreferences.html":{}}}],["preferences.ts:77",{"_index":1878,"title":{},"body":{"components/TopicPreferences.html":{}}}],["preferences.ts:85",{"_index":1875,"title":{},"body":{"components/TopicPreferences.html":{}}}],["preferences/topic",{"_index":1866,"title":{},"body":{"components/TopicPreferences.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["preferred",{"_index":574,"title":{},"body":{"components/Features.html":{}}}],["prefs",{"_index":1720,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["preloaded",{"_index":336,"title":{},"body":{"components/Chatbot.html":{}}}],["premium",{"_index":1552,"title":{},"body":{"components/Pricing.html":{}}}],["prev",{"_index":1822,"title":{},"body":{"components/Subtopic.html":{}}}],["previous",{"_index":1067,"title":{},"body":{"components/LessonPage.html":{},"components/Practice.html":{},"components/Subtopic.html":{}}}],["prevsubtopic",{"_index":1810,"title":{},"body":{"components/Subtopic.html":{}}}],["price",{"_index":1405,"title":{},"body":{"interfaces/Plan.html":{},"interfaces/SubscriptionStatus.html":{}}}],["pricing",{"_index":64,"title":{"components/Pricing.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["pricing'},{'name",{"_index":65,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["pricing.css",{"_index":1525,"title":{},"body":{"components/Pricing.html":{}}}],["pricing.html",{"_index":1524,"title":{},"body":{"components/Pricing.html":{}}}],["pricing/pricing",{"_index":687,"title":{},"body":{"components/Home.html":{}}}],["private",{"_index":160,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/Chatbot.html":{},"injectables/ExerciseService.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"injectables/NotificationService.html":{},"components/Practice.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"injectables/UserService.html":{}}}],["pro",{"_index":1544,"title":{},"body":{"components/Pricing.html":{}}}],["proceed",{"_index":1459,"title":{},"body":{"components/Practice.html":{}}}],["production",{"_index":2058,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":599,"title":{},"body":{"components/Features.html":{},"components/LessonPage.html":{},"components/Practice.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{}}}],["progress\").subscribe",{"_index":514,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["project",{"_index":2021,"title":{},"body":{"index.html":{}}}],["prompt",{"_index":104,"title":{},"body":{"interfaces/AnswerModel.html":{}}}],["properties",{"_index":100,"title":{"properties.html":{}},"body":{"interfaces/AnswerModel.html":{},"components/App.html":{},"injectables/AuthService.html":{},"interfaces/ChatMessage.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/CreationStepTab.html":{},"interfaces/ExamModel.html":{},"classes/ExamSettings.html":{},"interfaces/ExerciseModel.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"components/Header.html":{},"injectables/HttpBaseService.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"injectables/NotificationService.html":{},"interfaces/Plan.html":{},"components/Practice.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{},"components/Signup.html":{},"interfaces/SignupPayload.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"injectables/SubscriptionService.html":{},"interfaces/SubscriptionStatus.html":{},"interfaces/SubtopicModel.html":{},"components/Toast.html":{},"interfaces/TopicModel.html":{},"components/TopicPreferences.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"interfaces/VerifyEmailResponse.html":{},"properties.html":{}}}],["protected",{"_index":115,"title":{},"body":{"components/App.html":{}}}],["provide",{"_index":1385,"title":{},"body":{"directives/PasswordValidator.html":{},"miscellaneous/variables.html":{}}}],["providebrowserglobalerrorlisteners",{"_index":2102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatbotService.html":{},"injectables/ExerciseService.html":{},"injectables/HttpBaseService.html":{},"injectables/LessonService.html":{},"injectables/NotificationService.html":{},"injectables/SubjectsService.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"injectables/UserService.html":{}}}],["providehttpclient(withinterceptorsfromdi",{"_index":2105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providemarkdown",{"_index":2108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":2104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1378,"title":{},"body":{"directives/PasswordValidator.html":{},"components/Toast.html":{},"miscellaneous/variables.html":{}}}],["providezonelesschangedetection",{"_index":2103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prussian",{"_index":427,"title":{},"body":{"components/CreationStepTab.html":{}}}],["public",{"_index":1830,"title":{},"body":{"components/Toast.html":{}}}],["put",{"_index":696,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["put(endpoint",{"_index":708,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["pw",{"_index":1396,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["q",{"_index":1465,"title":{},"body":{"components/Practice.html":{}}}],["q.essay_answer",{"_index":1483,"title":{},"body":{"components/Practice.html":{}}}],["q.essay_feedback",{"_index":1484,"title":{},"body":{"components/Practice.html":{}}}],["q.id",{"_index":1442,"title":{},"body":{"components/Practice.html":{}}}],["q.options",{"_index":1473,"title":{},"body":{"components/Practice.html":{}}}],["q1",{"_index":844,"title":{},"body":{"components/LessonPage.html":{}}}],["q2",{"_index":862,"title":{},"body":{"components/LessonPage.html":{}}}],["q3",{"_index":871,"title":{},"body":{"components/LessonPage.html":{}}}],["qt",{"_index":470,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["question",{"_index":67,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["question.essay_answer",{"_index":1476,"title":{},"body":{"components/Practice.html":{}}}],["question.essay_answer).pipe",{"_index":1479,"title":{},"body":{"components/Practice.html":{}}}],["question.essay_feedback",{"_index":1485,"title":{},"body":{"components/Practice.html":{}}}],["question.id",{"_index":1466,"title":{},"body":{"components/Practice.html":{}}}],["question.model",{"_index":441,"title":{},"body":{"interfaces/ExamModel.html":{},"interfaces/ExerciseModel.html":{}}}],["question.options",{"_index":1522,"title":{},"body":{"components/Practice.html":{}}}],["question.options?.every(opt",{"_index":1470,"title":{},"body":{"components/Practice.html":{}}}],["question.options?.map(opt",{"_index":1474,"title":{},"body":{"components/Practice.html":{}}}],["question.type",{"_index":1467,"title":{},"body":{"components/Practice.html":{}}}],["question_data",{"_index":1148,"title":{},"body":{"injectables/LessonService.html":{}}}],["question_event",{"_index":787,"title":{},"body":{"components/LessonPage.html":{}}}],["question_event.id",{"_index":1089,"title":{},"body":{"components/LessonPage.html":{}}}],["question_id",{"_index":843,"title":{},"body":{"components/LessonPage.html":{},"injectables/LessonService.html":{}}}],["question_text",{"_index":845,"title":{},"body":{"components/LessonPage.html":{}}}],["question_type",{"_index":847,"title":{},"body":{"components/LessonPage.html":{}}}],["question_types",{"_index":1750,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["questiondata",{"_index":1129,"title":{},"body":{"injectables/LessonService.html":{},"components/Practice.html":{}}}],["questiondata).pipe",{"_index":1508,"title":{},"body":{"components/Practice.html":{}}}],["questiondata.push(q",{"_index":1490,"title":{},"body":{"components/Practice.html":{}}}],["questionid",{"_index":105,"title":{},"body":{"interfaces/AnswerModel.html":{},"injectables/LessonService.html":{}}}],["questionmodel",{"_index":439,"title":{"interfaces/QuestionModel.html":{}},"body":{"interfaces/ExamModel.html":{},"interfaces/ExerciseModel.html":{},"components/Practice.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"interfaces/SaveQuestionData.html":{},"coverage.html":{}}}],["questionoption",{"_index":1560,"title":{"interfaces/QuestionOption.html":{}},"body":{"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"interfaces/SaveQuestionData.html":{},"coverage.html":{}}}],["questions",{"_index":437,"title":{},"body":{"interfaces/ExamModel.html":{},"interfaces/ExerciseModel.html":{},"components/LessonPage.html":{},"components/QuestionSettings.html":{},"components/TopicPreferences.html":{}}}],["questionsettings",{"_index":66,"title":{"components/QuestionSettings.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["questiontype",{"_index":1561,"title":{},"body":{"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"interfaces/SaveQuestionData.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["questiontypes",{"_index":449,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{},"injectables/SubjectsService.html":{}}}],["question{{(currentview.content.questions.length",{"_index":1099,"title":{},"body":{"components/LessonPage.html":{}}}],["queuemicrotask",{"_index":301,"title":{},"body":{"components/Chatbot.html":{}}}],["quick",{"_index":391,"title":{},"body":{"components/Contact.html":{}}}],["quickly",{"_index":590,"title":{},"body":{"components/Features.html":{}}}],["quizzes",{"_index":596,"title":{},"body":{"components/Features.html":{},"components/Landing.html":{}}}],["r.exercise",{"_index":972,"title":{},"body":{"components/LessonPage.html":{}}}],["r.subtopics",{"_index":970,"title":{},"body":{"components/LessonPage.html":{}}}],["read",{"_index":824,"title":{},"body":{"components/LessonPage.html":{},"injectables/LessonService.html":{},"interfaces/SubtopicModel.html":{}}}],["readme",{"_index":2019,"title":{"index.html":{}},"body":{}}],["readonly",{"_index":116,"title":{},"body":{"components/App.html":{},"injectables/HttpBaseService.html":{}}}],["real",{"_index":1626,"title":{},"body":{"components/Signup.html":{}}}],["reason",{"_index":626,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["red",{"_index":1851,"title":{},"body":{"components/Toast.html":{}}}],["redirect",{"_index":182,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["reducing",{"_index":910,"title":{},"body":{"components/LessonPage.html":{}}}],["reference",{"_index":2084,"title":{},"body":{"index.html":{}}}],["references",{"_index":2082,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":1517,"title":{},"body":{"components/Practice.html":{},"components/Subscription.html":{}}}],["refreshaccesstoken",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"interfaces/SignupPayload.html":{},"interfaces/VerifyEmailResponse.html":{}}}],["regex",{"_index":1389,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["regex.test(control.value",{"_index":1394,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["regions",{"_index":882,"title":{},"body":{"components/LessonPage.html":{}}}],["reinforce",{"_index":1101,"title":{},"body":{"components/LessonPage.html":{}}}],["rejected",{"_index":627,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["relationships",{"_index":820,"title":{},"body":{"components/LessonPage.html":{}}}],["reload",{"_index":2039,"title":{},"body":{"index.html":{}}}],["removefile",{"_index":1239,"title":{},"body":{"components/NamingUpload.html":{}}}],["removefile(file",{"_index":1256,"title":{},"body":{"components/NamingUpload.html":{}}}],["rendered",{"_index":299,"title":{},"body":{"components/Chatbot.html":{}}}],["replace",{"_index":1625,"title":{},"body":{"components/Signup.html":{}}}],["req",{"_index":146,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"miscellaneous/variables.html":{}}}],["req.clone",{"_index":165,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["request",{"_index":175,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["requests",{"_index":497,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["requests.length",{"_index":509,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["requests.push",{"_index":500,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["required",{"_index":416,"title":{},"body":{"components/CreationStepTab.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/Signup.html":{},"components/TopicPreferences.html":{}}}],["res",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{},"directives/FileTypeDirective.html":{}}}],["res.accesstoken",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["res.exam",{"_index":982,"title":{},"body":{"components/LessonPage.html":{}}}],["res.exercise",{"_index":976,"title":{},"body":{"components/LessonPage.html":{}}}],["res.ok",{"_index":647,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["res.refreshtoken",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["res.sessions",{"_index":942,"title":{},"body":{"components/LessonPage.html":{}}}],["res.subtopics",{"_index":974,"title":{},"body":{"components/LessonPage.html":{}}}],["res.topics",{"_index":958,"title":{},"body":{"components/LessonPage.html":{}}}],["reserved",{"_index":398,"title":{},"body":{"components/Contact.html":{}}}],["reset",{"_index":653,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["resonates",{"_index":577,"title":{},"body":{"components/Features.html":{}}}],["resources",{"_index":2080,"title":{},"body":{"index.html":{}}}],["response",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{},"components/Chatbot.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["response.accesstoken",{"_index":1173,"title":{},"body":{"components/Login.html":{}}}],["response.history",{"_index":937,"title":{},"body":{"components/LessonPage.html":{}}}],["response.refreshtoken",{"_index":1174,"title":{},"body":{"components/Login.html":{}}}],["response.response",{"_index":351,"title":{},"body":{"components/Chatbot.html":{}}}],["response.session.id",{"_index":1298,"title":{},"body":{"components/NamingUpload.html":{}}}],["response.sessions",{"_index":1686,"title":{},"body":{"components/Subjects.html":{}}}],["response.topics",{"_index":1905,"title":{},"body":{"components/TopicPreferences.html":{}}}],["response.user",{"_index":1175,"title":{},"body":{"components/Login.html":{}}}],["responses",{"_index":511,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["results",{"_index":93,"title":{},"body":{"components/About.html":{},"interfaces/AnswerModel.html":{},"components/App.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/ChatMessage.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"interfaces/ExamModel.html":{},"classes/ExamSettings.html":{},"interfaces/ExerciseModel.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"directives/PasswordValidator.html":{},"interfaces/Plan.html":{},"components/Practice.html":{},"components/Pricing.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"interfaces/SignupPayload.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"interfaces/SubscriptionStatus.html":{},"components/Subtopic.html":{},"interfaces/SubtopicModel.html":{},"components/Toast.html":{},"interfaces/TopicModel.html":{},"components/TopicPreferences.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"components/VerifyEmail.html":{},"interfaces/VerifyEmailResponse.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":169,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"classes/ExamSettings.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"directives/FileTypeDirective.html":{},"injectables/HttpBaseService.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"injectables/SubjectsService.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"components/TopicPreferences.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":147,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/CreationStepTab.html":{},"injectables/ExerciseService.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"injectables/UserService.html":{}}}],["right",{"_index":1838,"title":{},"body":{"components/Toast.html":{}}}],["rights",{"_index":397,"title":{},"body":{"components/Contact.html":{}}}],["river",{"_index":869,"title":{},"body":{"components/LessonPage.html":{}}}],["root",{"_index":111,"title":{},"body":{"components/App.html":{},"injectables/AuthService.html":{},"injectables/ChatbotService.html":{},"injectables/ExerciseService.html":{},"injectables/HttpBaseService.html":{},"injectables/LessonService.html":{},"injectables/NotificationService.html":{},"injectables/SubjectsService.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":32,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["rounded",{"_index":1845,"title":{},"body":{"components/Toast.html":{}}}],["route",{"_index":926,"title":{},"body":{"components/LessonPage.html":{}}}],["router",{"_index":136,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{},"components/Subjects.html":{},"guards/SubscriptionGuard.html":{},"components/TopicPreferences.html":{}}}],["routerlink",{"_index":656,"title":{},"body":{"components/Header.html":{},"components/Sidebar.html":{},"components/Subjects.html":{}}}],["routerlinkactive",{"_index":657,"title":{},"body":{"components/Header.html":{}}}],["routeroutlet",{"_index":112,"title":{},"body":{"components/App.html":{}}}],["routes",{"_index":1969,"title":{"routes.html":{}},"body":{"coverage.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":498,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"index.html":{}}}],["runner",{"_index":2067,"title":{},"body":{"index.html":{}}}],["running",{"_index":2033,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":156,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"classes/ExamSettings.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"injectables/HttpBaseService.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"injectables/SubjectsService.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["s",{"_index":1100,"title":{},"body":{"components/LessonPage.html":{}}}],["s.id",{"_index":947,"title":{},"body":{"components/LessonPage.html":{}}}],["s1",{"_index":817,"title":{},"body":{"components/LessonPage.html":{}}}],["s2",{"_index":825,"title":{},"body":{"components/LessonPage.html":{}}}],["s3",{"_index":834,"title":{},"body":{"components/LessonPage.html":{}}}],["safehtml",{"_index":1210,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["sanitizer",{"_index":1223,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["save",{"_index":1502,"title":{},"body":{"components/Practice.html":{},"components/Pricing.html":{}}}],["savecall",{"_index":1503,"title":{},"body":{"components/Practice.html":{}}}],["saved",{"_index":1540,"title":{},"body":{"components/Pricing.html":{}}}],["saveexamscore",{"_index":1112,"title":{},"body":{"injectables/LessonService.html":{}}}],["saveexamscore(sessionid",{"_index":1127,"title":{},"body":{"injectables/LessonService.html":{}}}],["saveexercisescore",{"_index":1113,"title":{},"body":{"injectables/LessonService.html":{}}}],["saveexercisescore(topicid",{"_index":1132,"title":{},"body":{"injectables/LessonService.html":{}}}],["savequestiondata",{"_index":1130,"title":{"interfaces/SaveQuestionData.html":{}},"body":{"injectables/LessonService.html":{},"components/Practice.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"interfaces/SaveQuestionData.html":{},"coverage.html":{}}}],["saving",{"_index":1518,"title":{},"body":{"components/Practice.html":{}}}],["scaffolding",{"_index":2043,"title":{},"body":{"index.html":{}}}],["schematics",{"_index":2050,"title":{},"body":{"index.html":{}}}],["science",{"_index":1678,"title":{},"body":{"components/Subjects.html":{}}}],["score",{"_index":438,"title":{},"body":{"interfaces/ExamModel.html":{},"interfaces/ExerciseModel.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Practice.html":{}}}],["scoreessayquestion",{"_index":1114,"title":{},"body":{"injectables/LessonService.html":{}}}],["scoreessayquestion(sessionid",{"_index":1135,"title":{},"body":{"injectables/LessonService.html":{}}}],["scoring",{"_index":1488,"title":{},"body":{"components/Practice.html":{}}}],["scroll",{"_index":290,"title":{},"body":{"components/Chatbot.html":{}}}],["scrollbar",{"_index":2011,"title":{},"body":{"dependencies.html":{}}}],["scrollto",{"_index":675,"title":{},"body":{"components/Home.html":{}}}],["scrollto(section",{"_index":681,"title":{},"body":{"components/Home.html":{}}}],["scrolltobottom",{"_index":267,"title":{},"body":{"components/Chatbot.html":{}}}],["section",{"_index":684,"title":{},"body":{"components/Home.html":{}}}],["seem",{"_index":1491,"title":{},"body":{"components/Practice.html":{}}}],["select",{"_index":1916,"title":{},"body":{"components/TopicPreferences.html":{}}}],["selected",{"_index":855,"title":{},"body":{"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"interfaces/SaveQuestionData.html":{},"interfaces/TopicModel.html":{},"components/TopicPreferences.html":{}}}],["selectedoptions",{"_index":106,"title":{},"body":{"interfaces/AnswerModel.html":{}}}],["selectedtopics",{"_index":1908,"title":{},"body":{"components/TopicPreferences.html":{}}}],["selectedtopics.length",{"_index":1910,"title":{},"body":{"components/TopicPreferences.html":{}}}],["selectedtopics.map((topic",{"_index":1918,"title":{},"body":{"components/TopicPreferences.html":{}}}],["selecting",{"_index":1926,"title":{},"body":{"components/TopicPreferences.html":{}}}],["selection",{"_index":654,"title":{},"body":{"directives/FileTypeDirective.html":{},"components/LessonPage.html":{},"components/Practice.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{},"components/Subjects.html":{},"miscellaneous/typealiases.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["selecttopics",{"_index":1714,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["selecttopics(sessionid",{"_index":1731,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["selectview",{"_index":1583,"title":{},"body":{"components/Sidebar.html":{}}}],["selectview(id",{"_index":1590,"title":{},"body":{"components/Sidebar.html":{}}}],["send",{"_index":357,"title":{},"body":{"components/Chatbot.html":{},"components/NamingUpload.html":{},"components/TopicPreferences.html":{}}}],["sender",{"_index":251,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/Chatbot.html":{},"components/LessonPage.html":{}}}],["sending",{"_index":355,"title":{},"body":{"components/Chatbot.html":{}}}],["sendmessage",{"_index":268,"title":{},"body":{"components/Chatbot.html":{},"injectables/ChatbotService.html":{}}}],["sendmessage(sessionid",{"_index":364,"title":{},"body":{"injectables/ChatbotService.html":{}}}],["serious",{"_index":1554,"title":{},"body":{"components/Pricing.html":{}}}],["serveonce",{"_index":2032,"title":{},"body":{"index.html":{}}}],["server",{"_index":2028,"title":{},"body":{"index.html":{}}}],["services/auth.service",{"_index":157,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["services/subscription.service",{"_index":1784,"title":{},"body":{"guards/SubscriptionGuard.html":{}}}],["session",{"_index":520,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["session_id",{"_index":1143,"title":{},"body":{"injectables/LessonService.html":{}}}],["sessionid",{"_index":362,"title":{},"body":{"injectables/ChatbotService.html":{},"injectables/LessonService.html":{},"components/NamingUpload.html":{},"injectables/SubjectsService.html":{}}}],["sessions",{"_index":944,"title":{},"body":{"components/LessonPage.html":{}}}],["set",{"_index":987,"title":{},"body":{"components/LessonPage.html":{},"components/QuestionSettings.html":{}}}],["setcurrentuser",{"_index":1937,"title":{},"body":{"injectables/UserService.html":{}}}],["setcurrentuser(user",{"_index":1942,"title":{},"body":{"injectables/UserService.html":{}}}],["setheaders",{"_index":166,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["settings",{"_index":462,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{},"miscellaneous/variables.html":{}}}],["settings').then(m",{"_index":2147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings'},{'name",{"_index":68,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["settings.css",{"_index":464,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["settings.html",{"_index":463,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["settings.ts",{"_index":446,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{},"coverage.html":{}}}],["settings.ts:11",{"_index":549,"title":{},"body":{"classes/ExerciseSettings.html":{}}}],["settings.ts:12",{"_index":551,"title":{},"body":{"classes/ExerciseSettings.html":{}}}],["settings.ts:13",{"_index":550,"title":{},"body":{"classes/ExerciseSettings.html":{}}}],["settings.ts:16",{"_index":451,"title":{},"body":{"classes/ExamSettings.html":{}}}],["settings.ts:17",{"_index":454,"title":{},"body":{"classes/ExamSettings.html":{}}}],["settings.ts:18",{"_index":452,"title":{},"body":{"classes/ExamSettings.html":{}}}],["settings.ts:19",{"_index":455,"title":{},"body":{"classes/ExamSettings.html":{}}}],["settings.ts:29",{"_index":1572,"title":{},"body":{"components/QuestionSettings.html":{}}}],["settings.ts:30",{"_index":1571,"title":{},"body":{"components/QuestionSettings.html":{}}}],["settings.ts:31",{"_index":1573,"title":{},"body":{"components/QuestionSettings.html":{}}}],["settings.ts:32",{"_index":1574,"title":{},"body":{"components/QuestionSettings.html":{}}}],["settings.ts:33",{"_index":1575,"title":{},"body":{"components/QuestionSettings.html":{}}}],["settings.ts:34",{"_index":1566,"title":{},"body":{"components/QuestionSettings.html":{}}}],["settings.ts:43",{"_index":1570,"title":{},"body":{"components/QuestionSettings.html":{}}}],["settings.ts:51",{"_index":1568,"title":{},"body":{"components/QuestionSettings.html":{}}}],["settings.ts:59",{"_index":1567,"title":{},"body":{"components/QuestionSettings.html":{}}}],["settings/question",{"_index":445,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shadow",{"_index":1846,"title":{},"body":{"components/Toast.html":{}}}],["shape",{"_index":750,"title":{},"body":{"components/Landing.html":{},"components/LessonPage.html":{}}}],["shared/components/header/header",{"_index":126,"title":{},"body":{"components/App.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/QuestionSettings.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["shared/components/toast/toast",{"_index":125,"title":{},"body":{"components/App.html":{}}}],["shared/directives/password",{"_index":1623,"title":{},"body":{"components/Signup.html":{}}}],["shared/pipes/markdown",{"_index":327,"title":{},"body":{"components/Chatbot.html":{},"components/Practice.html":{},"components/Subtopic.html":{}}}],["show",{"_index":1344,"title":{},"body":{"injectables/NotificationService.html":{}}}],["show(type",{"_index":1348,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showerror",{"_index":1345,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showerror(msg",{"_index":1354,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showlogout",{"_index":659,"title":{},"body":{"components/Header.html":{}}}],["showsuccess",{"_index":1346,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showsuccess(msg",{"_index":1357,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sidebar",{"_index":69,"title":{"components/Sidebar.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["sidebar'},{'name",{"_index":70,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["sidebar.css",{"_index":1581,"title":{},"body":{"components/Sidebar.html":{}}}],["sidebar.html",{"_index":1580,"title":{},"body":{"components/Sidebar.html":{}}}],["sidebar/sidebar",{"_index":803,"title":{},"body":{"components/LessonPage.html":{}}}],["sign",{"_index":1192,"title":{},"body":{"components/Login.html":{}}}],["signal",{"_index":123,"title":{},"body":{"components/App.html":{},"components/Header.html":{},"components/LessonPage.html":{},"injectables/NotificationService.html":{},"components/Subscription.html":{}}}],["signal('maestro_frontend",{"_index":120,"title":{},"body":{"components/App.html":{}}}],["signal(false",{"_index":666,"title":{},"body":{"components/Header.html":{}}}],["signal(null",{"_index":1361,"title":{},"body":{"injectables/NotificationService.html":{},"components/Subscription.html":{}}}],["significance",{"_index":922,"title":{},"body":{"components/LessonPage.html":{}}}],["significantly",{"_index":907,"title":{},"body":{"components/LessonPage.html":{}}}],["signup",{"_index":71,"title":{"components/Signup.html":{}},"body":{"components/About.html":{},"components/App.html":{},"injectables/AuthService.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["signup'},{'name",{"_index":72,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["signup(data",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup.html",{"_index":1603,"title":{},"body":{"components/Signup.html":{}}}],["signuppayload",{"_index":1199,"title":{"interfaces/SignupPayload.html":{}},"body":{"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"interfaces/SignupPayload.html":{},"interfaces/VerifyEmailResponse.html":{},"coverage.html":{}}}],["simple",{"_index":1526,"title":{},"body":{"components/Pricing.html":{}}}],["simplechanges",{"_index":1439,"title":{},"body":{"components/Practice.html":{}}}],["simplified",{"_index":1646,"title":{},"body":{"components/Signup.html":{}}}],["size",{"_index":621,"title":{},"body":{"directives/FileTypeDirective.html":{},"components/NamingUpload.html":{}}}],["size.tofixed(3",{"_index":1280,"title":{},"body":{"components/NamingUpload.html":{}}}],["sj2nd",{"_index":1669,"title":{},"body":{"components/Subjects.html":{}}}],["smarter",{"_index":556,"title":{},"body":{"components/Features.html":{}}}],["source",{"_index":3,"title":{},"body":{"components/About.html":{},"interfaces/AnswerModel.html":{},"components/App.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/ChatMessage.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"interfaces/ExamModel.html":{},"classes/ExamSettings.html":{},"interfaces/ExerciseModel.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"directives/PasswordValidator.html":{},"interfaces/Plan.html":{},"components/Practice.html":{},"components/Pricing.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"interfaces/SignupPayload.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"interfaces/SubscriptionStatus.html":{},"components/Subtopic.html":{},"interfaces/SubtopicModel.html":{},"components/Toast.html":{},"interfaces/TopicModel.html":{},"components/TopicPreferences.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"components/VerifyEmail.html":{},"interfaces/VerifyEmailResponse.html":{},"index.html":{}}}],["space",{"_index":1843,"title":{},"body":{"components/Toast.html":{}}}],["specific",{"_index":1927,"title":{},"body":{"components/TopicPreferences.html":{}}}],["speed",{"_index":2061,"title":{},"body":{"index.html":{}}}],["src/.../app.config.ts",{"_index":2096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.ts",{"_index":2100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../chat",{"_index":2090,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../environment.prod.ts",{"_index":2097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../file",{"_index":2017,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../http",{"_index":2099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../notification.service.ts",{"_index":2091,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../question.model.ts",{"_index":2092,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../subject.model.ts",{"_index":2093,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../topic",{"_index":2094,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/app.config.ts",{"_index":1964,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.ts",{"_index":1968,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.ts",{"_index":110,"title":{},"body":{"components/App.html":{},"coverage.html":{}}}],["src/app/app.ts:13",{"_index":122,"title":{},"body":{"components/App.html":{}}}],["src/app/core/guards/subscription.guard.ts",{"_index":1780,"title":{},"body":{"guards/SubscriptionGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/subscription.guard.ts:10",{"_index":1782,"title":{},"body":{"guards/SubscriptionGuard.html":{}}}],["src/app/core/guards/subscription.guard.ts:16",{"_index":1783,"title":{},"body":{"guards/SubscriptionGuard.html":{}}}],["src/app/core/interceptors/auth.interceptor.ts",{"_index":130,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["src/app/core/interceptors/auth.interceptor.ts:14",{"_index":137,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/core/interceptors/auth.interceptor.ts:17",{"_index":145,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/core/interceptors/http",{"_index":1972,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/models/answer.model.ts",{"_index":98,"title":{},"body":{"interfaces/AnswerModel.html":{},"coverage.html":{}}}],["src/app/core/models/auth",{"_index":1196,"title":{},"body":{"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"interfaces/SignupPayload.html":{},"interfaces/VerifyEmailResponse.html":{},"coverage.html":{}}}],["src/app/core/models/chat",{"_index":248,"title":{},"body":{"interfaces/ChatMessage.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/models/exam.model.ts",{"_index":435,"title":{},"body":{"interfaces/ExamModel.html":{},"coverage.html":{}}}],["src/app/core/models/exercise.model.ts",{"_index":529,"title":{},"body":{"interfaces/ExerciseModel.html":{},"coverage.html":{}}}],["src/app/core/models/question.model.ts",{"_index":1559,"title":{},"body":{"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"interfaces/SaveQuestionData.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/models/subject.model.ts",{"_index":1981,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/models/subscription.model.ts",{"_index":1402,"title":{},"body":{"interfaces/Plan.html":{},"interfaces/SubscriptionStatus.html":{},"coverage.html":{}}}],["src/app/core/models/subtopic.model.ts",{"_index":1826,"title":{},"body":{"interfaces/SubtopicModel.html":{},"coverage.html":{}}}],["src/app/core/models/topic.model.ts",{"_index":1864,"title":{},"body":{"interfaces/TopicModel.html":{},"coverage.html":{}}}],["src/app/core/models/user.model.ts",{"_index":1931,"title":{},"body":{"interfaces/UserModel.html":{},"coverage.html":{}}}],["src/app/core/services/auth.service.ts",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/services/auth.service.ts:11",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:14",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:16",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:20",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:24",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:28",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:32",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:43",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:47",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/chatbot.service.ts",{"_index":358,"title":{},"body":{"injectables/ChatbotService.html":{},"coverage.html":{}}}],["src/app/core/services/chatbot.service.ts:10",{"_index":365,"title":{},"body":{"injectables/ChatbotService.html":{}}}],["src/app/core/services/chatbot.service.ts:14",{"_index":361,"title":{},"body":{"injectables/ChatbotService.html":{}}}],["src/app/core/services/chatbot.service.ts:8",{"_index":366,"title":{},"body":{"injectables/ChatbotService.html":{}}}],["src/app/core/services/exercise.service.ts",{"_index":531,"title":{},"body":{"injectables/ExerciseService.html":{},"coverage.html":{}}}],["src/app/core/services/exercise.service.ts:13",{"_index":539,"title":{},"body":{"injectables/ExerciseService.html":{}}}],["src/app/core/services/exercise.service.ts:17",{"_index":542,"title":{},"body":{"injectables/ExerciseService.html":{}}}],["src/app/core/services/exercise.service.ts:9",{"_index":537,"title":{},"body":{"injectables/ExerciseService.html":{}}}],["src/app/core/services/http",{"_index":691,"title":{},"body":{"injectables/HttpBaseService.html":{},"coverage.html":{}}}],["src/app/core/services/lesson.service.ts",{"_index":1106,"title":{},"body":{"injectables/LessonService.html":{},"coverage.html":{}}}],["src/app/core/services/lesson.service.ts:10",{"_index":1137,"title":{},"body":{"injectables/LessonService.html":{}}}],["src/app/core/services/lesson.service.ts:12",{"_index":1119,"title":{},"body":{"injectables/LessonService.html":{}}}],["src/app/core/services/lesson.service.ts:16",{"_index":1116,"title":{},"body":{"injectables/LessonService.html":{}}}],["src/app/core/services/lesson.service.ts:20",{"_index":1123,"title":{},"body":{"injectables/LessonService.html":{}}}],["src/app/core/services/lesson.service.ts:24",{"_index":1121,"title":{},"body":{"injectables/LessonService.html":{}}}],["src/app/core/services/lesson.service.ts:28",{"_index":1136,"title":{},"body":{"injectables/LessonService.html":{}}}],["src/app/core/services/lesson.service.ts:32",{"_index":1126,"title":{},"body":{"injectables/LessonService.html":{}}}],["src/app/core/services/lesson.service.ts:36",{"_index":1134,"title":{},"body":{"injectables/LessonService.html":{}}}],["src/app/core/services/lesson.service.ts:40",{"_index":1131,"title":{},"body":{"injectables/LessonService.html":{}}}],["src/app/core/services/notification.service.ts",{"_index":1342,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/services/notification.service.ts:11",{"_index":1352,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification.service.ts:18",{"_index":1355,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification.service.ts:19",{"_index":1358,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification.service.ts:20",{"_index":1347,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification.service.ts:7",{"_index":1362,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification.service.ts:8",{"_index":1363,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification.service.ts:9",{"_index":1360,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/subjects.service.ts",{"_index":1706,"title":{},"body":{"injectables/SubjectsService.html":{},"coverage.html":{}}}],["src/app/core/services/subjects.service.ts:11",{"_index":1726,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["src/app/core/services/subjects.service.ts:15",{"_index":1718,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["src/app/core/services/subjects.service.ts:19",{"_index":1728,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["src/app/core/services/subjects.service.ts:25",{"_index":1730,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["src/app/core/services/subjects.service.ts:29",{"_index":1733,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["src/app/core/services/subjects.service.ts:33",{"_index":1725,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["src/app/core/services/subjects.service.ts:37",{"_index":1723,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["src/app/core/services/subjects.service.ts:41",{"_index":1721,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["src/app/core/services/subjects.service.ts:45",{"_index":1737,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["src/app/core/services/subjects.service.ts:49",{"_index":1735,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["src/app/core/services/subjects.service.ts:9",{"_index":1738,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["src/app/core/services/subscription.service.ts",{"_index":1789,"title":{},"body":{"injectables/SubscriptionService.html":{},"coverage.html":{}}}],["src/app/core/services/subscription.service.ts:13",{"_index":1795,"title":{},"body":{"injectables/SubscriptionService.html":{}}}],["src/app/core/services/subscription.service.ts:17",{"_index":1798,"title":{},"body":{"injectables/SubscriptionService.html":{}}}],["src/app/core/services/subscription.service.ts:21",{"_index":1796,"title":{},"body":{"injectables/SubscriptionService.html":{}}}],["src/app/core/services/subscription.service.ts:25",{"_index":1794,"title":{},"body":{"injectables/SubscriptionService.html":{}}}],["src/app/core/services/subscription.service.ts:9",{"_index":1793,"title":{},"body":{"injectables/SubscriptionService.html":{}}}],["src/app/core/services/user.service.ts",{"_index":1933,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/services/user.service.ts:13",{"_index":1940,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:17",{"_index":1946,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:21",{"_index":1943,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:25",{"_index":1941,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:8",{"_index":1948,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:9",{"_index":1939,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/pages/auth/login/login.ts",{"_index":1151,"title":{},"body":{"components/Login.html":{},"coverage.html":{}}}],["src/app/pages/auth/login/login.ts:13",{"_index":1161,"title":{},"body":{"components/Login.html":{}}}],["src/app/pages/auth/login/login.ts:14",{"_index":1167,"title":{},"body":{"components/Login.html":{}}}],["src/app/pages/auth/login/login.ts:15",{"_index":1170,"title":{},"body":{"components/Login.html":{}}}],["src/app/pages/auth/login/login.ts:16",{"_index":1165,"title":{},"body":{"components/Login.html":{}}}],["src/app/pages/auth/login/login.ts:17",{"_index":1166,"title":{},"body":{"components/Login.html":{}}}],["src/app/pages/auth/login/login.ts:19",{"_index":1164,"title":{},"body":{"components/Login.html":{}}}],["src/app/pages/auth/login/login.ts:20",{"_index":1169,"title":{},"body":{"components/Login.html":{}}}],["src/app/pages/auth/login/login.ts:22",{"_index":1157,"title":{},"body":{"components/Login.html":{}}}],["src/app/pages/auth/login/login.ts:27",{"_index":1159,"title":{},"body":{"components/Login.html":{}}}],["src/app/pages/auth/login/login.ts:35",{"_index":1158,"title":{},"body":{"components/Login.html":{}}}],["src/app/pages/auth/signup/signup.ts",{"_index":1602,"title":{},"body":{"components/Signup.html":{},"coverage.html":{}}}],["src/app/pages/auth/signup/signup.ts:13",{"_index":1614,"title":{},"body":{"components/Signup.html":{}}}],["src/app/pages/auth/signup/signup.ts:14",{"_index":1617,"title":{},"body":{"components/Signup.html":{}}}],["src/app/pages/auth/signup/signup.ts:15",{"_index":1612,"title":{},"body":{"components/Signup.html":{}}}],["src/app/pages/auth/signup/signup.ts:16",{"_index":1621,"title":{},"body":{"components/Signup.html":{}}}],["src/app/pages/auth/signup/signup.ts:17",{"_index":1622,"title":{},"body":{"components/Signup.html":{}}}],["src/app/pages/auth/signup/signup.ts:18",{"_index":1620,"title":{},"body":{"components/Signup.html":{}}}],["src/app/pages/auth/signup/signup.ts:19",{"_index":1611,"title":{},"body":{"components/Signup.html":{}}}],["src/app/pages/auth/signup/signup.ts:21",{"_index":1616,"title":{},"body":{"components/Signup.html":{}}}],["src/app/pages/auth/signup/signup.ts:22",{"_index":1619,"title":{},"body":{"components/Signup.html":{}}}],["src/app/pages/auth/signup/signup.ts:23",{"_index":1613,"title":{},"body":{"components/Signup.html":{}}}],["src/app/pages/auth/signup/signup.ts:24",{"_index":1608,"title":{},"body":{"components/Signup.html":{}}}],["src/app/pages/auth/signup/signup.ts:28",{"_index":1610,"title":{},"body":{"components/Signup.html":{}}}],["src/app/pages/auth/signup/signup.ts:36",{"_index":1609,"title":{},"body":{"components/Signup.html":{}}}],["src/app/pages/auth/verify",{"_index":1955,"title":{},"body":{"components/VerifyEmail.html":{},"coverage.html":{}}}],["src/app/pages/dashboard/subjects/subjects.ts",{"_index":1659,"title":{},"body":{"components/Subjects.html":{},"coverage.html":{}}}],["src/app/pages/dashboard/subjects/subjects.ts:15",{"_index":1681,"title":{},"body":{"components/Subjects.html":{}}}],["src/app/pages/dashboard/subjects/subjects.ts:45",{"_index":1682,"title":{},"body":{"components/Subjects.html":{}}}],["src/app/pages/dashboard/subjects/subjects.ts:46",{"_index":1664,"title":{},"body":{"components/Subjects.html":{}}}],["src/app/pages/dashboard/subjects/subjects.ts:50",{"_index":1668,"title":{},"body":{"components/Subjects.html":{}}}],["src/app/pages/dashboard/subjects/subjects.ts:65",{"_index":1667,"title":{},"body":{"components/Subjects.html":{}}}],["src/app/pages/dashboard/subscription/subscription.ts",{"_index":1755,"title":{},"body":{"components/Subscription.html":{},"coverage.html":{}}}],["src/app/pages/dashboard/subscription/subscription.ts:13",{"_index":1767,"title":{},"body":{"components/Subscription.html":{}}}],["src/app/pages/dashboard/subscription/subscription.ts:14",{"_index":1760,"title":{},"body":{"components/Subscription.html":{}}}],["src/app/pages/dashboard/subscription/subscription.ts:18",{"_index":1762,"title":{},"body":{"components/Subscription.html":{}}}],["src/app/pages/dashboard/subscription/subscription.ts:23",{"_index":1765,"title":{},"body":{"components/Subscription.html":{}}}],["src/app/pages/dashboard/subscription/subscription.ts:27",{"_index":1763,"title":{},"body":{"components/Subscription.html":{}}}],["src/app/pages/dashboard/subscription/subscription.ts:31",{"_index":1766,"title":{},"body":{"components/Subscription.html":{}}}],["src/app/pages/home/about",{"_index":8,"title":{},"body":{"components/About.html":{},"coverage.html":{}}}],["src/app/pages/home/contact/contact.ts",{"_index":384,"title":{},"body":{"components/Contact.html":{},"coverage.html":{}}}],["src/app/pages/home/features/features.ts",{"_index":552,"title":{},"body":{"components/Features.html":{},"coverage.html":{}}}],["src/app/pages/home/home/home.ts",{"_index":672,"title":{},"body":{"components/Home.html":{},"coverage.html":{}}}],["src/app/pages/home/home/home.ts:15",{"_index":679,"title":{},"body":{"components/Home.html":{}}}],["src/app/pages/home/home/home.ts:21",{"_index":680,"title":{},"body":{"components/Home.html":{}}}],["src/app/pages/home/home/home.ts:25",{"_index":683,"title":{},"body":{"components/Home.html":{}}}],["src/app/pages/home/landing/landing.ts",{"_index":720,"title":{},"body":{"components/Landing.html":{},"coverage.html":{}}}],["src/app/pages/home/landing/landing.ts:12",{"_index":729,"title":{},"body":{"components/Landing.html":{}}}],["src/app/pages/home/landing/landing.ts:16",{"_index":733,"title":{},"body":{"components/Landing.html":{}}}],["src/app/pages/home/landing/landing.ts:20",{"_index":731,"title":{},"body":{"components/Landing.html":{}}}],["src/app/pages/home/landing/landing.ts:24",{"_index":734,"title":{},"body":{"components/Landing.html":{}}}],["src/app/pages/home/landing/landing.ts:28",{"_index":730,"title":{},"body":{"components/Landing.html":{}}}],["src/app/pages/home/landing/landing.ts:32",{"_index":732,"title":{},"body":{"components/Landing.html":{}}}],["src/app/pages/home/pricing/pricing.ts",{"_index":1523,"title":{},"body":{"components/Pricing.html":{},"coverage.html":{}}}],["src/app/pages/lesson/chatbot/chatbot.ts",{"_index":253,"title":{},"body":{"components/Chatbot.html":{},"coverage.html":{}}}],["src/app/pages/lesson/chatbot/chatbot.ts:16",{"_index":274,"title":{},"body":{"components/Chatbot.html":{}}}],["src/app/pages/lesson/chatbot/chatbot.ts:17",{"_index":277,"title":{},"body":{"components/Chatbot.html":{}}}],["src/app/pages/lesson/chatbot/chatbot.ts:18",{"_index":276,"title":{},"body":{"components/Chatbot.html":{}}}],["src/app/pages/lesson/chatbot/chatbot.ts:19",{"_index":278,"title":{},"body":{"components/Chatbot.html":{}}}],["src/app/pages/lesson/chatbot/chatbot.ts:20",{"_index":311,"title":{},"body":{"components/Chatbot.html":{}}}],["src/app/pages/lesson/chatbot/chatbot.ts:21",{"_index":315,"title":{},"body":{"components/Chatbot.html":{}}}],["src/app/pages/lesson/chatbot/chatbot.ts:22",{"_index":306,"title":{},"body":{"components/Chatbot.html":{}}}],["src/app/pages/lesson/chatbot/chatbot.ts:23",{"_index":310,"title":{},"body":{"components/Chatbot.html":{}}}],["src/app/pages/lesson/chatbot/chatbot.ts:25",{"_index":280,"title":{},"body":{"components/Chatbot.html":{}}}],["src/app/pages/lesson/chatbot/chatbot.ts:29",{"_index":313,"title":{},"body":{"components/Chatbot.html":{}}}],["src/app/pages/lesson/chatbot/chatbot.ts:30",{"_index":316,"title":{},"body":{"components/Chatbot.html":{}}}],["src/app/pages/lesson/chatbot/chatbot.ts:33",{"_index":304,"title":{},"body":{"components/Chatbot.html":{}}}],["src/app/pages/lesson/chatbot/chatbot.ts:45",{"_index":279,"title":{},"body":{"components/Chatbot.html":{}}}],["src/app/pages/lesson/chatbot/chatbot.ts:51",{"_index":281,"title":{},"body":{"components/Chatbot.html":{}}}],["src/app/pages/lesson/chatbot/chatbot.ts:57",{"_index":282,"title":{},"body":{"components/Chatbot.html":{}}}],["src/app/pages/lesson/lesson",{"_index":752,"title":{},"body":{"components/LessonPage.html":{},"coverage.html":{}}}],["src/app/pages/lesson/practice/practice.ts",{"_index":1410,"title":{},"body":{"components/Practice.html":{},"coverage.html":{}}}],["src/app/pages/lesson/practice/practice.ts:15",{"_index":1421,"title":{},"body":{"components/Practice.html":{}}}],["src/app/pages/lesson/practice/practice.ts:16",{"_index":1422,"title":{},"body":{"components/Practice.html":{}}}],["src/app/pages/lesson/practice/practice.ts:17",{"_index":1423,"title":{},"body":{"components/Practice.html":{}}}],["src/app/pages/lesson/practice/practice.ts:18",{"_index":1425,"title":{},"body":{"components/Practice.html":{}}}],["src/app/pages/lesson/practice/practice.ts:19",{"_index":1426,"title":{},"body":{"components/Practice.html":{}}}],["src/app/pages/lesson/practice/practice.ts:20",{"_index":1424,"title":{},"body":{"components/Practice.html":{}}}],["src/app/pages/lesson/practice/practice.ts:21",{"_index":1437,"title":{},"body":{"components/Practice.html":{}}}],["src/app/pages/lesson/practice/practice.ts:22",{"_index":1436,"title":{},"body":{"components/Practice.html":{}}}],["src/app/pages/lesson/practice/practice.ts:23",{"_index":1435,"title":{},"body":{"components/Practice.html":{}}}],["src/app/pages/lesson/practice/practice.ts:26",{"_index":1438,"title":{},"body":{"components/Practice.html":{}}}],["src/app/pages/lesson/practice/practice.ts:35",{"_index":1428,"title":{},"body":{"components/Practice.html":{}}}],["src/app/pages/lesson/practice/practice.ts:41",{"_index":1430,"title":{},"body":{"components/Practice.html":{}}}],["src/app/pages/lesson/practice/practice.ts:53",{"_index":1431,"title":{},"body":{"components/Practice.html":{}}}],["src/app/pages/lesson/practice/practice.ts:57",{"_index":1434,"title":{},"body":{"components/Practice.html":{}}}],["src/app/pages/lesson/practice/practice.ts:71",{"_index":1432,"title":{},"body":{"components/Practice.html":{}}}],["src/app/pages/lesson/sidebar/sidebar.ts",{"_index":1579,"title":{},"body":{"components/Sidebar.html":{},"coverage.html":{}}}],["src/app/pages/lesson/sidebar/sidebar.ts:11",{"_index":1586,"title":{},"body":{"components/Sidebar.html":{}}}],["src/app/pages/lesson/sidebar/sidebar.ts:12",{"_index":1587,"title":{},"body":{"components/Sidebar.html":{}}}],["src/app/pages/lesson/sidebar/sidebar.ts:13",{"_index":1588,"title":{},"body":{"components/Sidebar.html":{}}}],["src/app/pages/lesson/sidebar/sidebar.ts:15",{"_index":1589,"title":{},"body":{"components/Sidebar.html":{}}}],["src/app/pages/lesson/sidebar/sidebar.ts:19",{"_index":1593,"title":{},"body":{"components/Sidebar.html":{}}}],["src/app/pages/lesson/sidebar/sidebar.ts:26",{"_index":1591,"title":{},"body":{"components/Sidebar.html":{}}}],["src/app/pages/lesson/subtopic/subtopic.ts",{"_index":1806,"title":{},"body":{"components/Subtopic.html":{},"coverage.html":{}}}],["src/app/pages/lesson/subtopic/subtopic.ts:12",{"_index":1813,"title":{},"body":{"components/Subtopic.html":{}}}],["src/app/pages/lesson/subtopic/subtopic.ts:13",{"_index":1814,"title":{},"body":{"components/Subtopic.html":{}}}],["src/app/pages/lesson/subtopic/subtopic.ts:14",{"_index":1815,"title":{},"body":{"components/Subtopic.html":{}}}],["src/app/pages/lesson/subtopic/subtopic.ts:16",{"_index":1817,"title":{},"body":{"components/Subtopic.html":{}}}],["src/app/pages/lesson/subtopic/subtopic.ts:20",{"_index":1816,"title":{},"body":{"components/Subtopic.html":{}}}],["src/app/pages/not",{"_index":1332,"title":{},"body":{"components/NotFound.html":{},"coverage.html":{}}}],["src/app/pages/subject",{"_index":399,"title":{},"body":{"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/NamingUpload.html":{},"components/QuestionSettings.html":{},"components/TopicPreferences.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/components/confirm",{"_index":370,"title":{},"body":{"components/ConfirmLogout.html":{},"coverage.html":{}}}],["src/app/shared/components/header/header.ts",{"_index":655,"title":{},"body":{"components/Header.html":{},"coverage.html":{}}}],["src/app/shared/components/header/header.ts:14",{"_index":662,"title":{},"body":{"components/Header.html":{}}}],["src/app/shared/components/header/header.ts:18",{"_index":665,"title":{},"body":{"components/Header.html":{}}}],["src/app/shared/components/header/header.ts:19",{"_index":663,"title":{},"body":{"components/Header.html":{}}}],["src/app/shared/components/header/header.ts:20",{"_index":664,"title":{},"body":{"components/Header.html":{}}}],["src/app/shared/components/toast/toast.ts",{"_index":1828,"title":{},"body":{"components/Toast.html":{},"coverage.html":{}}}],["src/app/shared/components/toast/toast.ts:13",{"_index":1854,"title":{},"body":{"components/Toast.html":{}}}],["src/app/shared/components/toast/toast.ts:14",{"_index":1856,"title":{},"body":{"components/Toast.html":{}}}],["src/app/shared/components/toast/toast.ts:15",{"_index":1853,"title":{},"body":{"components/Toast.html":{}}}],["src/app/shared/components/toast/toast.ts:22",{"_index":1833,"title":{},"body":{"components/Toast.html":{}}}],["src/app/shared/components/toast/toast.ts:24",{"_index":1855,"title":{},"body":{"components/Toast.html":{}}}],["src/app/shared/components/toast/toast.ts:28",{"_index":1834,"title":{},"body":{"components/Toast.html":{}}}],["src/app/shared/directives/file",{"_index":603,"title":{},"body":{"directives/FileTypeDirective.html":{},"coverage.html":{}}}],["src/app/shared/directives/password",{"_index":1375,"title":{},"body":{"directives/PasswordValidator.html":{},"coverage.html":{}}}],["src/app/shared/pipes/markdown",{"_index":1204,"title":{},"body":{"pipes/MarkdownPipe.html":{},"coverage.html":{}}}],["src/app/shared/utils/file",{"_index":1994,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/environments/environment.prod.ts",{"_index":1997,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1998,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["st.isactive",{"_index":1787,"title":{},"body":{"guards/SubscriptionGuard.html":{}}}],["st.read",{"_index":990,"title":{},"body":{"components/LessonPage.html":{}}}],["st.read).length",{"_index":1038,"title":{},"body":{"components/LessonPage.html":{}}}],["standalone",{"_index":405,"title":{},"body":{"components/CreationStepTab.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"pipes/MarkdownPipe.html":{},"components/Subscription.html":{},"components/Toast.html":{}}}],["start",{"_index":1322,"title":{},"body":{"components/NamingUpload.html":{},"components/Pricing.html":{},"components/Subjects.html":{},"index.html":{}}}],["started",{"_index":748,"title":{},"body":{"components/Landing.html":{},"components/Pricing.html":{},"components/Subjects.html":{}}}],["startedat",{"_index":1407,"title":{},"body":{"interfaces/Plan.html":{},"interfaces/SubscriptionStatus.html":{}}}],["starter",{"_index":1533,"title":{},"body":{"components/Pricing.html":{}}}],["statements",{"_index":1963,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":508,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{}}}],["step",{"_index":42,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["stepper",{"_index":2137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["still",{"_index":996,"title":{},"body":{"components/LessonPage.html":{}}}],["store",{"_index":1550,"title":{},"body":{"components/Pricing.html":{},"index.html":{}}}],["stored",{"_index":179,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["storetokens",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["storetokens(res",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["str",{"_index":775,"title":{},"body":{"components/LessonPage.html":{}}}],["str.charat(0).touppercase",{"_index":1092,"title":{},"body":{"components/LessonPage.html":{}}}],["str.slice(1).tolowercase",{"_index":1093,"title":{},"body":{"components/LessonPage.html":{}}}],["string",{"_index":107,"title":{},"body":{"interfaces/AnswerModel.html":{},"injectables/AuthService.html":{},"interfaces/ChatMessage.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/CreationStepTab.html":{},"interfaces/ExamModel.html":{},"classes/ExamSettings.html":{},"interfaces/ExerciseModel.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"directives/FileTypeDirective.html":{},"injectables/HttpBaseService.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"injectables/NotificationService.html":{},"interfaces/Plan.html":{},"components/Practice.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"interfaces/SignupPayload.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"injectables/SubscriptionService.html":{},"interfaces/SubscriptionStatus.html":{},"interfaces/SubtopicModel.html":{},"interfaces/TopicModel.html":{},"components/TopicPreferences.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"interfaces/VerifyEmailResponse.html":{}}}],["studies",{"_index":888,"title":{},"body":{"components/LessonPage.html":{}}}],["study",{"_index":746,"title":{},"body":{"components/Landing.html":{},"components/LessonPage.html":{},"components/Pricing.html":{},"components/Subjects.html":{}}}],["studying",{"_index":874,"title":{},"body":{"components/LessonPage.html":{}}}],["style",{"_index":570,"title":{},"body":{"components/Features.html":{},"components/TopicPreferences.html":{}}}],["styleurl",{"_index":15,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Subjects.html":{},"components/Subtopic.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["subject",{"_index":949,"title":{},"body":{"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/Subjects.html":{},"miscellaneous/variables.html":{}}}],["subject.completion*100).tofixed(0",{"_index":1705,"title":{},"body":{"components/Subjects.html":{}}}],["subject.id",{"_index":1704,"title":{},"body":{"components/Subjects.html":{}}}],["subject.name",{"_index":954,"title":{},"body":{"components/LessonPage.html":{},"components/Subjects.html":{}}}],["subject.status",{"_index":1690,"title":{},"body":{"components/Subjects.html":{}}}],["subject_name",{"_index":810,"title":{},"body":{"components/LessonPage.html":{}}}],["subjectcontent",{"_index":760,"title":{},"body":{"components/LessonPage.html":{}}}],["subjectcontent.subject_name",{"_index":1097,"title":{},"body":{"components/LessonPage.html":{}}}],["subjectid",{"_index":271,"title":{},"body":{"components/Chatbot.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/TopicPreferences.html":{}}}],["subjectmodel",{"_index":1666,"title":{},"body":{"components/Subjects.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["subjectname",{"_index":1232,"title":{},"body":{"components/NamingUpload.html":{}}}],["subjects",{"_index":73,"title":{"components/Subjects.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["subjects'},{'name",{"_index":74,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["subjects.css",{"_index":1661,"title":{},"body":{"components/Subjects.html":{}}}],["subjects.find(s",{"_index":946,"title":{},"body":{"components/LessonPage.html":{}}}],["subjects.html",{"_index":1660,"title":{},"body":{"components/Subjects.html":{}}}],["subjects.length",{"_index":1699,"title":{},"body":{"components/Subjects.html":{}}}],["subjectservice",{"_index":466,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/QuestionSettings.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["subjectsservice",{"_index":457,"title":{"injectables/SubjectsService.html":{}},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/NamingUpload.html":{},"components/QuestionSettings.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/TopicPreferences.html":{},"coverage.html":{}}}],["submit",{"_index":1461,"title":{},"body":{"components/Practice.html":{}}}],["submitanswers",{"_index":534,"title":{},"body":{"injectables/ExerciseService.html":{},"components/Practice.html":{}}}],["submitanswers(id",{"_index":540,"title":{},"body":{"injectables/ExerciseService.html":{}}}],["subscribe",{"_index":983,"title":{},"body":{"components/LessonPage.html":{},"components/Practice.html":{},"components/Signup.html":{},"injectables/SubscriptionService.html":{}}}],["subscribe(planid",{"_index":1797,"title":{},"body":{"injectables/SubscriptionService.html":{}}}],["subscription",{"_index":75,"title":{"components/Subscription.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["subscription'},{'name",{"_index":76,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["subscriptionguard",{"_index":1778,"title":{"guards/SubscriptionGuard.html":{}},"body":{"guards/SubscriptionGuard.html":{},"coverage.html":{}}}],["subscriptionservice",{"_index":1759,"title":{"injectables/SubscriptionService.html":{}},"body":{"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"coverage.html":{}}}],["subscriptionstatus",{"_index":1406,"title":{"interfaces/SubscriptionStatus.html":{}},"body":{"interfaces/Plan.html":{},"components/Subscription.html":{},"injectables/SubscriptionService.html":{},"interfaces/SubscriptionStatus.html":{},"coverage.html":{}}}],["subsvc",{"_index":1761,"title":{},"body":{"components/Subscription.html":{},"guards/SubscriptionGuard.html":{}}}],["subtopic",{"_index":77,"title":{"components/Subtopic.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["subtopic'},{'name",{"_index":78,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["subtopic.css",{"_index":1808,"title":{},"body":{"components/Subtopic.html":{}}}],["subtopic.html",{"_index":1807,"title":{},"body":{"components/Subtopic.html":{}}}],["subtopic.id",{"_index":1011,"title":{},"body":{"components/LessonPage.html":{},"components/Sidebar.html":{}}}],["subtopic.title",{"_index":1600,"title":{},"body":{"components/Sidebar.html":{}}}],["subtopic/subtopic",{"_index":805,"title":{},"body":{"components/LessonPage.html":{}}}],["subtopic_id",{"_index":1145,"title":{},"body":{"injectables/LessonService.html":{}}}],["subtopicid",{"_index":1125,"title":{},"body":{"injectables/LessonService.html":{}}}],["subtopicmodel",{"_index":1825,"title":{"interfaces/SubtopicModel.html":{}},"body":{"interfaces/SubtopicModel.html":{},"coverage.html":{}}}],["subtopics",{"_index":816,"title":{},"body":{"components/LessonPage.html":{}}}],["subtopics.findindex((s",{"_index":1071,"title":{},"body":{"components/LessonPage.html":{}}}],["subtopics.length",{"_index":1073,"title":{},"body":{"components/LessonPage.html":{}}}],["subtopics[newindex].id",{"_index":1075,"title":{},"body":{"components/LessonPage.html":{}}}],["success",{"_index":1202,"title":{},"body":{"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"injectables/NotificationService.html":{},"interfaces/SignupPayload.html":{},"components/Toast.html":{},"interfaces/VerifyEmailResponse.html":{},"miscellaneous/typealiases.html":{}}}],["successful",{"_index":1172,"title":{},"body":{"components/Login.html":{},"components/Signup.html":{}}}],["successfully",{"_index":1050,"title":{},"body":{"components/LessonPage.html":{}}}],["such",{"_index":903,"title":{},"body":{"components/LessonPage.html":{},"index.html":{}}}],["suited",{"_index":569,"title":{},"body":{"components/Features.html":{}}}],["suits",{"_index":2077,"title":{},"body":{"index.html":{}}}],["summaries",{"_index":579,"title":{},"body":{"components/Features.html":{}}}],["sure",{"_index":381,"title":{},"body":{"components/ConfirmLogout.html":{},"components/Practice.html":{}}}],["switchmap",{"_index":809,"title":{},"body":{"components/LessonPage.html":{},"components/Practice.html":{}}}],["switchmap((res",{"_index":956,"title":{},"body":{"components/LessonPage.html":{}}}],["switchmap((subject",{"_index":950,"title":{},"body":{"components/LessonPage.html":{}}}],["t",{"_index":699,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["t.id",{"_index":1061,"title":{},"body":{"components/LessonPage.html":{},"components/Sidebar.html":{}}}],["t1",{"_index":813,"title":{},"body":{"components/LessonPage.html":{}}}],["t2",{"_index":879,"title":{},"body":{"components/LessonPage.html":{}}}],["tab",{"_index":404,"title":{},"body":{"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/NamingUpload.html":{},"components/QuestionSettings.html":{},"components/TopicPreferences.html":{}}}],["tab'},{'name",{"_index":43,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["tab.css",{"_index":407,"title":{},"body":{"components/CreationStepTab.html":{}}}],["tab.html",{"_index":406,"title":{},"body":{"components/CreationStepTab.html":{}}}],["tab.ts",{"_index":402,"title":{},"body":{"components/CreationStepTab.html":{},"coverage.html":{}}}],["tab.ts:12",{"_index":417,"title":{},"body":{"components/CreationStepTab.html":{}}}],["tab.ts:13",{"_index":415,"title":{},"body":{"components/CreationStepTab.html":{}}}],["tab.ts:14",{"_index":414,"title":{},"body":{"components/CreationStepTab.html":{}}}],["tab.ts:16",{"_index":419,"title":{},"body":{"components/CreationStepTab.html":{}}}],["tab.ts:17",{"_index":420,"title":{},"body":{"components/CreationStepTab.html":{}}}],["tab.ts:19",{"_index":418,"title":{},"body":{"components/CreationStepTab.html":{}}}],["tab/creation",{"_index":401,"title":{},"body":{"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/NamingUpload.html":{},"components/QuestionSettings.html":{},"components/TopicPreferences.html":{},"coverage.html":{}}}],["table",{"_index":2000,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1999,"title":{},"body":{"coverage.html":{}}}],["tailored",{"_index":571,"title":{},"body":{"components/Features.html":{},"components/Landing.html":{}}}],["tailwind",{"_index":2010,"title":{},"body":{"dependencies.html":{}}}],["take",{"_index":1102,"title":{},"body":{"components/LessonPage.html":{},"components/Practice.html":{}}}],["tap",{"_index":1441,"title":{},"body":{"components/Practice.html":{}}}],["tap((value",{"_index":1480,"title":{},"body":{"components/Practice.html":{}}}],["tell",{"_index":573,"title":{},"body":{"components/Features.html":{}}}],["temperatures",{"_index":886,"title":{},"body":{"components/LessonPage.html":{}}}],["template",{"_index":4,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["templateurl",{"_index":13,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["test",{"_index":2066,"title":{},"body":{"index.html":{}}}],["testing",{"_index":2073,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":2071,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2063,"title":{},"body":{"index.html":{}}}],["text",{"_index":413,"title":{},"body":{"components/CreationStepTab.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"interfaces/SaveQuestionData.html":{},"components/Signup.html":{},"interfaces/SubtopicModel.html":{},"components/Toast.html":{}}}],["textcolour",{"_index":409,"title":{},"body":{"components/CreationStepTab.html":{}}}],["this._timer",{"_index":1368,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.active",{"_index":424,"title":{},"body":{"components/CreationStepTab.html":{}}}],["this.appfiletype",{"_index":645,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["this.auth.accesstoken",{"_index":163,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.auth.logout",{"_index":181,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/Header.html":{}}}],["this.authservice.signup",{"_index":1635,"title":{},"body":{"components/Signup.html":{}}}],["this.bgcolour",{"_index":425,"title":{},"body":{"components/CreationStepTab.html":{}}}],["this.cdr.detectchanges",{"_index":1005,"title":{},"body":{"components/LessonPage.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["this.changeprogress.emit",{"_index":1515,"title":{},"body":{"components/Practice.html":{}}}],["this.changequestion.emit({id",{"_index":1448,"title":{},"body":{"components/Practice.html":{}}}],["this.chatbotservice.getchathistory(this.subjectid).subscribe",{"_index":936,"title":{},"body":{"components/LessonPage.html":{}}}],["this.chatbotservice.sendmessage(this.subjectid",{"_index":347,"title":{},"body":{"components/Chatbot.html":{}}}],["this.chatcontainer?.nativeelement",{"_index":338,"title":{},"body":{"components/Chatbot.html":{}}}],["this.chathistory",{"_index":285,"title":{},"body":{"components/Chatbot.html":{},"components/LessonPage.html":{}}}],["this.chathistory()?.push",{"_index":344,"title":{},"body":{"components/Chatbot.html":{}}}],["this.chathistory.update(history",{"_index":349,"title":{},"body":{"components/Chatbot.html":{}}}],["this.chatmetadata.exam_id",{"_index":1086,"title":{},"body":{"components/LessonPage.html":{}}}],["this.chatmetadata.exercise_id",{"_index":1085,"title":{},"body":{"components/LessonPage.html":{}}}],["this.chatmetadata.question_id",{"_index":1087,"title":{},"body":{"components/LessonPage.html":{}}}],["this.chatmetadata.sub_topic_id",{"_index":1082,"title":{},"body":{"components/LessonPage.html":{}}}],["this.chatmetadata.sub_topic_name",{"_index":1083,"title":{},"body":{"components/LessonPage.html":{}}}],["this.chatmetadata.topic_id",{"_index":1078,"title":{},"body":{"components/LessonPage.html":{}}}],["this.chatmetadata.topic_name",{"_index":1080,"title":{},"body":{"components/LessonPage.html":{}}}],["this.chatopen",{"_index":1027,"title":{},"body":{"components/LessonPage.html":{}}}],["this.checkfortopiccompleteness(topic_id",{"_index":1025,"title":{},"body":{"components/LessonPage.html":{}}}],["this.clear",{"_index":1370,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.closechat.emit",{"_index":329,"title":{},"body":{"components/Chatbot.html":{}}}],["this.content().topics.find((t",{"_index":1595,"title":{},"body":{"components/Sidebar.html":{}}}],["this.currentmessage",{"_index":342,"title":{},"body":{"components/Chatbot.html":{}}}],["this.currenttopic().id",{"_index":1821,"title":{},"body":{"components/Subtopic.html":{}}}],["this.currentuser$.asobservable",{"_index":1954,"title":{},"body":{"injectables/UserService.html":{}}}],["this.currentuser$.next(user",{"_index":1953,"title":{},"body":{"injectables/UserService.html":{}}}],["this.currentview",{"_index":1016,"title":{},"body":{"components/LessonPage.html":{},"components/Practice.html":{}}}],["this.currentview().content.questions.findindex((q",{"_index":1449,"title":{},"body":{"components/Practice.html":{}}}],["this.currentview().content.questions.foreach((question",{"_index":1464,"title":{},"body":{"components/Practice.html":{}}}],["this.currentview().content.questions.length",{"_index":1444,"title":{},"body":{"components/Practice.html":{}}}],["this.currentview().content.questions[newindex",{"_index":1446,"title":{},"body":{"components/Practice.html":{}}}],["this.currentview().content.score",{"_index":1514,"title":{},"body":{"components/Practice.html":{}}}],["this.currentview().id",{"_index":1507,"title":{},"body":{"components/Practice.html":{}}}],["this.currentview().type",{"_index":1504,"title":{},"body":{"components/Practice.html":{}}}],["this.currentview.content.score",{"_index":1028,"title":{},"body":{"components/LessonPage.html":{}}}],["this.currentview.content.title",{"_index":1084,"title":{},"body":{"components/LessonPage.html":{}}}],["this.currentview.id",{"_index":999,"title":{},"body":{"components/LessonPage.html":{}}}],["this.currentview.type",{"_index":1076,"title":{},"body":{"components/LessonPage.html":{}}}],["this.cyclesubtopic.emit",{"_index":1820,"title":{},"body":{"components/Subtopic.html":{}}}],["this.email",{"_index":1638,"title":{},"body":{"components/Signup.html":{}}}],["this.emailctrl.invalid",{"_index":1629,"title":{},"body":{"components/Signup.html":{}}}],["this.examsettings.include",{"_index":492,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["this.examsettings.preference",{"_index":494,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["this.examsettings.questiontypes",{"_index":475,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["this.examsettings.questiontypes.filter((qt",{"_index":476,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["this.examsettings.questiontypes.length",{"_index":493,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["this.examsettings.questiontypes.push(event.target.value",{"_index":474,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["this.exercisecompleted.emit(this.topicid",{"_index":1509,"title":{},"body":{"components/Practice.html":{}}}],["this.exercisesettings.include",{"_index":483,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["this.exercisesettings.preference",{"_index":488,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["this.exercisesettings.questiontypes",{"_index":503,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["this.exercisesettings.questiontypes.length",{"_index":484,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["this.fileerror.emit(res.reason",{"_index":649,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["this.fileok.emit(f",{"_index":648,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["this.fileok.emit(null",{"_index":651,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["this.files",{"_index":1271,"title":{},"body":{"components/NamingUpload.html":{}}}],["this.files).subscribe",{"_index":1302,"title":{},"body":{"components/NamingUpload.html":{}}}],["this.files.filter((f",{"_index":1276,"title":{},"body":{"components/NamingUpload.html":{}}}],["this.files.length",{"_index":1287,"title":{},"body":{"components/NamingUpload.html":{}}}],["this.firstname",{"_index":1636,"title":{},"body":{"components/Signup.html":{}}}],["this.firstnamectrl.invalid",{"_index":1631,"title":{},"body":{"components/Signup.html":{}}}],["this.getheaders",{"_index":716,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["this.gettopicdatafromexercise",{"_index":1088,"title":{},"body":{"components/LessonPage.html":{}}}],["this.gettopicdatafromsubtopic",{"_index":1077,"title":{},"body":{"components/LessonPage.html":{}}}],["this.gettopicdatafromsubtopic().id",{"_index":1019,"title":{},"body":{"components/LessonPage.html":{}}}],["this.http.delete(`${this.apiurl}/${endpoint",{"_index":719,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["this.http.get('session/list",{"_index":1739,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["this.http.get(`${this.apiurl}/${endpoint",{"_index":714,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["this.http.get(`${this.apiurl}/${id}/answers",{"_index":547,"title":{},"body":{"injectables/ExerciseService.html":{}}}],["this.http.get(`${this.baseurl}/me",{"_index":1951,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`${this.baseurl}/plans",{"_index":1802,"title":{},"body":{"injectables/SubscriptionService.html":{}}}],["this.http.get(`${this.baseurl}/status",{"_index":1804,"title":{},"body":{"injectables/SubscriptionService.html":{}}}],["this.http.get(`chatbot/${sessionid}/chat",{"_index":369,"title":{},"body":{"injectables/ChatbotService.html":{}}}],["this.http.get(`session/${sessionid}/get",{"_index":1141,"title":{},"body":{"injectables/LessonService.html":{}}}],["this.http.get(`topic/${sessionid}/list",{"_index":1139,"title":{},"body":{"injectables/LessonService.html":{}}}],["this.http.get(`topic/${topicid}/get",{"_index":1140,"title":{},"body":{"injectables/LessonService.html":{}}}],["this.http.post('auth/login",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post('auth/logout",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post('auth/refresh",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post('auth/sign",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post('auth/verify",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post('session/create",{"_index":1740,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["this.http.post(`${this.apiurl}/${endpoint",{"_index":717,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["this.http.post(`${this.apiurl}/${id}/submit",{"_index":548,"title":{},"body":{"injectables/ExerciseService.html":{}}}],["this.http.post(`${this.baseurl}/cancel",{"_index":1805,"title":{},"body":{"injectables/SubscriptionService.html":{}}}],["this.http.post(`${this.baseurl}/subscribe",{"_index":1803,"title":{},"body":{"injectables/SubscriptionService.html":{}}}],["this.http.post(`chatbot/${sessionid}/send",{"_index":368,"title":{},"body":{"injectables/ChatbotService.html":{}}}],["this.http.post(`chatbot/answer",{"_index":1142,"title":{},"body":{"injectables/LessonService.html":{}}}],["this.http.post(`session/${sessionid}/docs/ingest",{"_index":1744,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["this.http.post(`session/${sessionid}/docs/label",{"_index":1745,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["this.http.post(`session/${sessionid}/generate",{"_index":1747,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["this.http.post(`session/${sessionid}/select",{"_index":1746,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["this.http.put(`${this.apiurl}/${endpoint",{"_index":718,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["this.http.put(`${this.baseurl}/me",{"_index":1952,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.put(`session/${sessionid}/save",{"_index":1149,"title":{},"body":{"injectables/LessonService.html":{}}}],["this.http.put(`session/${sessionid}/update",{"_index":1753,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["this.http.put(`topic/${topicid}/mark",{"_index":1144,"title":{},"body":{"injectables/LessonService.html":{}}}],["this.http.put(`topic/${topicid}/save",{"_index":1146,"title":{},"body":{"injectables/LessonService.html":{}}}],["this.injector",{"_index":303,"title":{},"body":{"components/Chatbot.html":{}}}],["this.lastname",{"_index":1637,"title":{},"body":{"components/Signup.html":{}}}],["this.lastnamectrl.invalid",{"_index":1632,"title":{},"body":{"components/Signup.html":{}}}],["this.learningstyle).subscribe",{"_index":1922,"title":{},"body":{"components/TopicPreferences.html":{}}}],["this.learningstylectrl.invalid",{"_index":1912,"title":{},"body":{"components/TopicPreferences.html":{}}}],["this.lessonservice.getallsubtopics(topic.id).pipe",{"_index":968,"title":{},"body":{"components/LessonPage.html":{}}}],["this.lessonservice.getalltopics(this.subjectid",{"_index":955,"title":{},"body":{"components/LessonPage.html":{}}}],["this.lessonservice.getalltopics(this.subjectid).subscribe",{"_index":1903,"title":{},"body":{"components/TopicPreferences.html":{}}}],["this.lessonservice.getexam(this.subjectid).pipe",{"_index":980,"title":{},"body":{"components/LessonPage.html":{}}}],["this.lessonservice.getexercise(topic.id).pipe",{"_index":971,"title":{},"body":{"components/LessonPage.html":{}}}],["this.lessonservice.marksubtopicasread(topic_id",{"_index":1020,"title":{},"body":{"components/LessonPage.html":{}}}],["this.lessonservice.saveexamscore(this.subjectid",{"_index":1510,"title":{},"body":{"components/Practice.html":{}}}],["this.lessonservice.saveexercisescore(this.topicid",{"_index":1506,"title":{},"body":{"components/Practice.html":{}}}],["this.lessonservice.scoreessayquestion(this.subjectid",{"_index":1478,"title":{},"body":{"components/Practice.html":{}}}],["this.loading",{"_index":341,"title":{},"body":{"components/Chatbot.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{},"components/TopicPreferences.html":{}}}],["this.maxbytes",{"_index":646,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["this.md.render(value",{"_index":1224,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["this.message.set(msg",{"_index":1366,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.message.set(null",{"_index":1373,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.metadata()).subscribe",{"_index":348,"title":{},"body":{"components/Chatbot.html":{}}}],["this.msg",{"_index":1858,"title":{},"body":{"components/Toast.html":{}}}],["this.navigatesection.emit('contact",{"_index":738,"title":{},"body":{"components/Landing.html":{}}}],["this.navigatesection.emit('features",{"_index":736,"title":{},"body":{"components/Landing.html":{}}}],["this.navigatesection.emit('pricing",{"_index":737,"title":{},"body":{"components/Landing.html":{}}}],["this.navigatesection.emit('top",{"_index":735,"title":{},"body":{"components/Landing.html":{}}}],["this.notify.clear",{"_index":1861,"title":{},"body":{"components/Toast.html":{}}}],["this.notify.message",{"_index":1859,"title":{},"body":{"components/Toast.html":{}}}],["this.notify.showerror",{"_index":1267,"title":{},"body":{"components/NamingUpload.html":{}}}],["this.notify.showerror(\"at",{"_index":1911,"title":{},"body":{"components/TopicPreferences.html":{}}}],["this.notify.showerror(\"choose",{"_index":485,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["this.notify.showerror(\"exam",{"_index":495,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["this.notify.showerror(\"exercise",{"_index":489,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["this.notify.showerror(\"failed",{"_index":1907,"title":{},"body":{"components/TopicPreferences.html":{}}}],["this.notify.showerror(\"learning",{"_index":1913,"title":{},"body":{"components/TopicPreferences.html":{}}}],["this.notify.showerror('at",{"_index":1288,"title":{},"body":{"components/NamingUpload.html":{}}}],["this.notify.showerror('invalid",{"_index":1180,"title":{},"body":{"components/Login.html":{}}}],["this.notify.showerror('subject",{"_index":1286,"title":{},"body":{"components/NamingUpload.html":{}}}],["this.notify.showsuccess(`${validfiles.length",{"_index":1273,"title":{},"body":{"components/NamingUpload.html":{}}}],["this.notify.type",{"_index":1860,"title":{},"body":{"components/Toast.html":{}}}],["this.password",{"_index":1639,"title":{},"body":{"components/Signup.html":{}}}],["this.passwordctrl.invalid",{"_index":1630,"title":{},"body":{"components/Signup.html":{}}}],["this.passwordvisible",{"_index":1624,"title":{},"body":{"components/Signup.html":{}}}],["this.plans.set(plans",{"_index":1771,"title":{},"body":{"components/Subscription.html":{}}}],["this.question",{"_index":1445,"title":{},"body":{"components/Practice.html":{}}}],["this.question.id",{"_index":1443,"title":{},"body":{"components/Practice.html":{}}}],["this.question.id)?.options",{"_index":1458,"title":{},"body":{"components/Practice.html":{}}}],["this.question.options.find((o",{"_index":1455,"title":{},"body":{"components/Practice.html":{}}}],["this.question.options.foreach((option",{"_index":1451,"title":{},"body":{"components/Practice.html":{}}}],["this.question.type",{"_index":1450,"title":{},"body":{"components/Practice.html":{}}}],["this.refresh",{"_index":1772,"title":{},"body":{"components/Subscription.html":{}}}],["this.router.navigate",{"_index":1309,"title":{},"body":{"components/NamingUpload.html":{}}}],["this.router.navigate(['/dashboard",{"_index":1177,"title":{},"body":{"components/Login.html":{}}}],["this.router.navigate(['/dashboard/subscription",{"_index":1788,"title":{},"body":{"guards/SubscriptionGuard.html":{}}}],["this.router.navigate(['/login",{"_index":184,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/Home.html":{},"components/Signup.html":{}}}],["this.router.navigate(['/signup",{"_index":739,"title":{},"body":{"components/Landing.html":{}}}],["this.router.navigate(['/subject",{"_index":1694,"title":{},"body":{"components/Subjects.html":{}}}],["this.router.navigate([`/lesson/${subject.id",{"_index":1698,"title":{},"body":{"components/Subjects.html":{}}}],["this.router.navigate([`/lesson/${this.subjectid",{"_index":517,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["this.router.navigate([`/subject",{"_index":1695,"title":{},"body":{"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["this.router.navigatebyurl",{"_index":1340,"title":{},"body":{"components/NotFound.html":{}}}],["this.router.navigatebyurl('/login",{"_index":670,"title":{},"body":{"components/Header.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(html",{"_index":1225,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["this.scrolltobottom",{"_index":302,"title":{},"body":{"components/Chatbot.html":{}}}],["this.show('error",{"_index":1371,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.show('success",{"_index":1372,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.showlogout.set(false",{"_index":669,"title":{},"body":{"components/Header.html":{}}}],["this.showlogout.set(true",{"_index":668,"title":{},"body":{"components/Header.html":{}}}],["this.status.set(st",{"_index":1776,"title":{},"body":{"components/Subscription.html":{}}}],["this.subjectcontent",{"_index":953,"title":{},"body":{"components/LessonPage.html":{}}}],["this.subjectcontent.exam",{"_index":981,"title":{},"body":{"components/LessonPage.html":{}}}],["this.subjectcontent.exam.id",{"_index":1000,"title":{},"body":{"components/LessonPage.html":{}}}],["this.subjectcontent.exam.score",{"_index":1043,"title":{},"body":{"components/LessonPage.html":{}}}],["this.subjectcontent.topics",{"_index":964,"title":{},"body":{"components/LessonPage.html":{}}}],["this.subjectcontent.topics.find((t",{"_index":1060,"title":{},"body":{"components/LessonPage.html":{}}}],["this.subjectcontent.topics.find((topic",{"_index":1056,"title":{},"body":{"components/LessonPage.html":{}}}],["this.subjectcontent.topics.foreach((topic",{"_index":1033,"title":{},"body":{"components/LessonPage.html":{}}}],["this.subjectcontent.topics[0",{"_index":1002,"title":{},"body":{"components/LessonPage.html":{}}}],["this.subjectid",{"_index":502,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/QuestionSettings.html":{}}}],["this.subjectname",{"_index":1294,"title":{},"body":{"components/NamingUpload.html":{}}}],["this.subjectname.trim",{"_index":1285,"title":{},"body":{"components/NamingUpload.html":{}}}],["this.subjects",{"_index":1685,"title":{},"body":{"components/Subjects.html":{}}}],["this.subjectservice.createsubject(this.subjectname).subscribe",{"_index":1297,"title":{},"body":{"components/NamingUpload.html":{}}}],["this.subjectservice.generateexam",{"_index":504,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["this.subjectservice.generateexercise",{"_index":501,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["this.subjectservice.generatelesson(this.subjectid",{"_index":1921,"title":{},"body":{"components/TopicPreferences.html":{}}}],["this.subjectservice.getallsubjects().pipe",{"_index":940,"title":{},"body":{"components/LessonPage.html":{}}}],["this.subjectservice.getallsubjects().subscribe",{"_index":1684,"title":{},"body":{"components/Subjects.html":{}}}],["this.subjectservice.ingestdocuments(sessionid",{"_index":1301,"title":{},"body":{"components/NamingUpload.html":{}}}],["this.subjectservice.labeldocuments(sessionid).subscribe",{"_index":1306,"title":{},"body":{"components/NamingUpload.html":{}}}],["this.subjectservice.selecttopics(this.subjectid",{"_index":1917,"title":{},"body":{"components/TopicPreferences.html":{}}}],["this.subjectservice.updatesessionprogress(this.subjectid",{"_index":1047,"title":{},"body":{"components/LessonPage.html":{}}}],["this.subjectservice.updatesessionstatus(this.subjectid",{"_index":513,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["this.subsvc.cancel().subscribe",{"_index":1774,"title":{},"body":{"components/Subscription.html":{}}}],["this.subsvc.getplans().subscribe(plans",{"_index":1770,"title":{},"body":{"components/Subscription.html":{}}}],["this.subsvc.getstatus().pipe",{"_index":1785,"title":{},"body":{"guards/SubscriptionGuard.html":{}}}],["this.subsvc.getstatus().subscribe(st",{"_index":1775,"title":{},"body":{"components/Subscription.html":{}}}],["this.subsvc.subscribe(id).subscribe",{"_index":1773,"title":{},"body":{"components/Subscription.html":{}}}],["this.textcolour",{"_index":430,"title":{},"body":{"components/CreationStepTab.html":{}}}],["this.topics",{"_index":1904,"title":{},"body":{"components/TopicPreferences.html":{}}}],["this.topics.filter((topic",{"_index":1909,"title":{},"body":{"components/TopicPreferences.html":{}}}],["this.type",{"_index":1850,"title":{},"body":{"components/Toast.html":{}}}],["this.type.set(null",{"_index":1374,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.type.set(type",{"_index":1365,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.updatechatmetadata",{"_index":1017,"title":{},"body":{"components/LessonPage.html":{}}}],["this.updatecurrentview",{"_index":991,"title":{},"body":{"components/LessonPage.html":{}}}],["this.updateprogress",{"_index":1024,"title":{},"body":{"components/LessonPage.html":{}}}],["this.updateview.emit",{"_index":1598,"title":{},"body":{"components/Sidebar.html":{}}}],["this.viewready",{"_index":294,"title":{},"body":{"components/Chatbot.html":{}}}],["this.vscroller.scrolltoanchor(section",{"_index":690,"title":{},"body":{"components/Home.html":{}}}],["this.vscroller.scrolltoposition([0",{"_index":689,"title":{},"body":{"components/Home.html":{}}}],["through",{"_index":1032,"title":{},"body":{"components/LessonPage.html":{}}}],["throw",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{},"components/LessonPage.html":{},"miscellaneous/variables.html":{}}}],["throwerror",{"_index":155,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["time",{"_index":1103,"title":{},"body":{"components/LessonPage.html":{},"components/Practice.html":{}}}],["timelimit",{"_index":450,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{},"injectables/SubjectsService.html":{}}}],["timestamp",{"_index":252,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/Chatbot.html":{},"components/LessonPage.html":{}}}],["title",{"_index":117,"title":{},"body":{"components/App.html":{},"components/LessonPage.html":{},"interfaces/SubtopicModel.html":{},"interfaces/TopicModel.html":{}}}],["toast",{"_index":79,"title":{"components/Toast.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["toast'},{'name",{"_index":80,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["toast.html",{"_index":1829,"title":{},"body":{"components/Toast.html":{}}}],["togglechatpopup",{"_index":766,"title":{},"body":{"components/LessonPage.html":{}}}],["toggled",{"_index":1091,"title":{},"body":{"components/LessonPage.html":{}}}],["toggleexamtype",{"_index":1564,"title":{},"body":{"components/QuestionSettings.html":{}}}],["toggleexamtype(event",{"_index":472,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["toggleexercisetype",{"_index":1565,"title":{},"body":{"components/QuestionSettings.html":{}}}],["toggleexercisetype(event",{"_index":1569,"title":{},"body":{"components/QuestionSettings.html":{}}}],["toggleexpandtopic",{"_index":1584,"title":{},"body":{"components/Sidebar.html":{}}}],["toggleexpandtopic(topic_id",{"_index":1592,"title":{},"body":{"components/Sidebar.html":{}}}],["togglepasswordvisibility",{"_index":1156,"title":{},"body":{"components/Login.html":{},"components/Signup.html":{}}}],["toggleselectoption",{"_index":1417,"title":{},"body":{"components/Practice.html":{}}}],["toggleselectoption(id",{"_index":1433,"title":{},"body":{"components/Practice.html":{}}}],["toggletopicselection",{"_index":1873,"title":{},"body":{"components/TopicPreferences.html":{}}}],["toggletopicselection(topic_id",{"_index":1877,"title":{},"body":{"components/TopicPreferences.html":{}}}],["token",{"_index":162,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/HttpBaseService.html":{}}}],["tokens/session",{"_index":180,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["tools",{"_index":2046,"title":{},"body":{"index.html":{}}}],["top",{"_index":682,"title":{},"body":{"components/Home.html":{}}}],["topic",{"_index":82,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["topic.completed",{"_index":963,"title":{},"body":{"components/LessonPage.html":{}}}],["topic.exercise",{"_index":975,"title":{},"body":{"components/LessonPage.html":{},"components/Sidebar.html":{}}}],["topic.exercise.id",{"_index":995,"title":{},"body":{"components/LessonPage.html":{}}}],["topic.exercise.score",{"_index":994,"title":{},"body":{"components/LessonPage.html":{}}}],["topic.expanded",{"_index":1596,"title":{},"body":{"components/Sidebar.html":{}}}],["topic.id",{"_index":961,"title":{},"body":{"components/LessonPage.html":{},"components/Sidebar.html":{},"components/TopicPreferences.html":{}}}],["topic.id)).subscribe",{"_index":1919,"title":{},"body":{"components/TopicPreferences.html":{}}}],["topic.selected",{"_index":1902,"title":{},"body":{"components/TopicPreferences.html":{}}}],["topic.selected).map((topic",{"_index":960,"title":{},"body":{"components/LessonPage.html":{}}}],["topic.subtopics",{"_index":973,"title":{},"body":{"components/LessonPage.html":{},"components/Sidebar.html":{}}}],["topic.subtopics.every((st",{"_index":1064,"title":{},"body":{"components/LessonPage.html":{}}}],["topic.subtopics.filter((st",{"_index":1037,"title":{},"body":{"components/LessonPage.html":{}}}],["topic.subtopics.find((st",{"_index":989,"title":{},"body":{"components/LessonPage.html":{}}}],["topic.subtopics.length",{"_index":1036,"title":{},"body":{"components/LessonPage.html":{}}}],["topic.subtopics.some((subtopic",{"_index":1057,"title":{},"body":{"components/LessonPage.html":{}}}],["topic.subtopics?.length",{"_index":1035,"title":{},"body":{"components/LessonPage.html":{}}}],["topic.title",{"_index":962,"title":{},"body":{"components/LessonPage.html":{},"components/Sidebar.html":{},"components/TopicPreferences.html":{}}}],["topic_id",{"_index":780,"title":{},"body":{"components/LessonPage.html":{},"components/Sidebar.html":{},"components/TopicPreferences.html":{}}}],["topic_id).subtopics",{"_index":1023,"title":{},"body":{"components/LessonPage.html":{}}}],["topicdata",{"_index":1055,"title":{},"body":{"components/LessonPage.html":{}}}],["topicdata.id",{"_index":1079,"title":{},"body":{"components/LessonPage.html":{}}}],["topicdata.title",{"_index":1081,"title":{},"body":{"components/LessonPage.html":{}}}],["topicdata?.id",{"_index":1058,"title":{},"body":{"components/LessonPage.html":{}}}],["topicdata?.title",{"_index":1059,"title":{},"body":{"components/LessonPage.html":{}}}],["topicid",{"_index":1117,"title":{},"body":{"injectables/LessonService.html":{},"components/Practice.html":{}}}],["topicids",{"_index":1732,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["topicmodel",{"_index":1863,"title":{"interfaces/TopicModel.html":{}},"body":{"interfaces/TopicModel.html":{},"components/TopicPreferences.html":{},"coverage.html":{}}}],["topicpreferences",{"_index":81,"title":{"components/TopicPreferences.html":{}},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["topicrequests",{"_index":966,"title":{},"body":{"components/LessonPage.html":{}}}],["topics",{"_index":567,"title":{},"body":{"components/Features.html":{},"components/LessonPage.html":{},"components/NamingUpload.html":{},"injectables/SubjectsService.html":{},"components/TopicPreferences.html":{}}}],["topics.map((topic",{"_index":967,"title":{},"body":{"components/LessonPage.html":{}}}],["topicsresponse",{"_index":957,"title":{},"body":{"components/LessonPage.html":{}}}],["topicsresponse.filter((topic",{"_index":959,"title":{},"body":{"components/LessonPage.html":{}}}],["total",{"_index":1030,"title":{},"body":{"components/LessonPage.html":{}}}],["track",{"_index":286,"title":{},"body":{"components/Chatbot.html":{},"components/NamingUpload.html":{},"components/Practice.html":{},"components/Sidebar.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["transform",{"_index":1207,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["transform(value",{"_index":1208,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["tropical",{"_index":895,"title":{},"body":{"components/LessonPage.html":{}}}],["true",{"_index":333,"title":{},"body":{"components/Chatbot.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/LessonPage.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"directives/PasswordValidator.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"miscellaneous/variables.html":{}}}],["trust",{"_index":1496,"title":{},"body":{"components/Practice.html":{}}}],["try",{"_index":289,"title":{},"body":{"components/Chatbot.html":{},"components/Landing.html":{},"components/NamingUpload.html":{},"components/Pricing.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/TopicPreferences.html":{}}}],["tslib",{"_index":2013,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":565,"title":{},"body":{"components/Features.html":{}}}],["type",{"_index":108,"title":{},"body":{"interfaces/AnswerModel.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/ChatMessage.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/ConfirmLogout.html":{},"components/CreationStepTab.html":{},"interfaces/ExamModel.html":{},"classes/ExamSettings.html":{},"interfaces/ExerciseModel.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"injectables/HttpBaseService.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"directives/PasswordValidator.html":{},"interfaces/Plan.html":{},"components/Practice.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"interfaces/SignupPayload.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"guards/SubscriptionGuard.html":{},"injectables/SubscriptionService.html":{},"interfaces/SubscriptionStatus.html":{},"components/Subtopic.html":{},"interfaces/SubtopicModel.html":{},"components/Toast.html":{},"interfaces/TopicModel.html":{},"components/TopicPreferences.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"interfaces/VerifyEmailResponse.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.directive.ts",{"_index":604,"title":{},"body":{"directives/FileTypeDirective.html":{},"coverage.html":{}}}],["type.directive.ts:11",{"_index":612,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["type.directive.ts:13",{"_index":619,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["type.directive.ts:15",{"_index":628,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["type.directive.ts:17",{"_index":624,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["type.directive.ts:20",{"_index":632,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["typealiases",{"_index":2088,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":615,"title":{},"body":{"directives/FileTypeDirective.html":{},"components/NamingUpload.html":{},"interfaces/QuestionModel.html":{},"interfaces/QuestionOption.html":{},"components/QuestionSettings.html":{},"interfaces/SaveQuestionData.html":{},"miscellaneous/functions.html":{}}}],["typically",{"_index":1291,"title":{},"body":{"components/NamingUpload.html":{},"components/TopicPreferences.html":{}}}],["typographer",{"_index":1214,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["uamds",{"_index":1671,"title":{},"body":{"components/Subjects.html":{}}}],["undefined",{"_index":1041,"title":{},"body":{"components/LessonPage.html":{},"pipes/MarkdownPipe.html":{}}}],["understanding",{"_index":875,"title":{},"body":{"components/LessonPage.html":{}}}],["unexpected",{"_index":2118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":2062,"title":{},"body":{"index.html":{}}}],["unlock",{"_index":740,"title":{},"body":{"components/Landing.html":{},"components/Pricing.html":{}}}],["unreadsubtopic",{"_index":988,"title":{},"body":{"components/LessonPage.html":{}}}],["unreadsubtopic.id",{"_index":992,"title":{},"body":{"components/LessonPage.html":{}}}],["unsupported",{"_index":1268,"title":{},"body":{"components/NamingUpload.html":{}}}],["until",{"_index":298,"title":{},"body":{"components/Chatbot.html":{}}}],["unwrap",{"_index":943,"title":{},"body":{"components/LessonPage.html":{}}}],["up",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"components/Login.html":{},"components/Pricing.html":{}}}],["update",{"_index":519,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/QuestionSettings.html":{}}}],["update_tick",{"_index":1754,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["updatechatmetadata",{"_index":767,"title":{},"body":{"components/LessonPage.html":{}}}],["updatechatmetadata(question_event",{"_index":785,"title":{},"body":{"components/LessonPage.html":{}}}],["updatecurrentview",{"_index":768,"title":{},"body":{"components/LessonPage.html":{}}}],["updatecurrentview(event",{"_index":788,"title":{},"body":{"components/LessonPage.html":{}}}],["updated",{"_index":516,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/QuestionSettings.html":{}}}],["updateoninputchange",{"_index":1413,"title":{},"body":{"components/Practice.html":{}}}],["updateprofile",{"_index":1938,"title":{},"body":{"injectables/UserService.html":{}}}],["updateprofile(data",{"_index":1944,"title":{},"body":{"injectables/UserService.html":{}}}],["updateprogress",{"_index":769,"title":{},"body":{"components/LessonPage.html":{}}}],["updates",{"_index":1066,"title":{},"body":{"components/LessonPage.html":{}}}],["updatesessionprogress",{"_index":1715,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["updatesessionprogress(sessionid",{"_index":1734,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["updatesessionstatus",{"_index":1716,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["updatesessionstatus(sessionid",{"_index":1736,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["updateview",{"_index":1585,"title":{},"body":{"components/Sidebar.html":{}}}],["updating",{"_index":507,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/QuestionSettings.html":{}}}],["upload",{"_index":561,"title":{},"body":{"components/Features.html":{},"components/Landing.html":{},"components/NamingUpload.html":{},"components/Pricing.html":{},"components/Subjects.html":{},"miscellaneous/variables.html":{}}}],["upload').then(m",{"_index":2141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["upload'},{'name",{"_index":59,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["upload.css",{"_index":1230,"title":{},"body":{"components/NamingUpload.html":{}}}],["upload.html",{"_index":1229,"title":{},"body":{"components/NamingUpload.html":{}}}],["upload.ts",{"_index":1228,"title":{},"body":{"components/NamingUpload.html":{},"coverage.html":{}}}],["upload.ts:16",{"_index":1261,"title":{},"body":{"components/NamingUpload.html":{}}}],["upload.ts:17",{"_index":1258,"title":{},"body":{"components/NamingUpload.html":{}}}],["upload.ts:18",{"_index":1259,"title":{},"body":{"components/NamingUpload.html":{}}}],["upload.ts:19",{"_index":1260,"title":{},"body":{"components/NamingUpload.html":{}}}],["upload.ts:20",{"_index":1262,"title":{},"body":{"components/NamingUpload.html":{}}}],["upload.ts:21",{"_index":1240,"title":{},"body":{"components/NamingUpload.html":{}}}],["upload.ts:25",{"_index":1252,"title":{},"body":{"components/NamingUpload.html":{}}}],["upload.ts:33",{"_index":1250,"title":{},"body":{"components/NamingUpload.html":{}}}],["upload.ts:38",{"_index":1248,"title":{},"body":{"components/NamingUpload.html":{}}}],["upload.ts:42",{"_index":1254,"title":{},"body":{"components/NamingUpload.html":{}}}],["upload.ts:49",{"_index":1243,"title":{},"body":{"components/NamingUpload.html":{}}}],["upload.ts:73",{"_index":1257,"title":{},"body":{"components/NamingUpload.html":{}}}],["upload.ts:77",{"_index":1245,"title":{},"body":{"components/NamingUpload.html":{}}}],["upload.ts:94",{"_index":1255,"title":{},"body":{"components/NamingUpload.html":{}}}],["upload/naming",{"_index":1227,"title":{},"body":{"components/NamingUpload.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uploaded",{"_index":1289,"title":{},"body":{"components/NamingUpload.html":{}}}],["urbanization",{"_index":906,"title":{},"body":{"components/LessonPage.html":{}}}],["url",{"_index":927,"title":{},"body":{"components/LessonPage.html":{}}}],["url.com/api",{"_index":2110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["url.split",{"_index":930,"title":{},"body":{"components/LessonPage.html":{}}}],["use",{"_index":2068,"title":{},"body":{"index.html":{}}}],["use(markdownitkatex",{"_index":1215,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["use_time_limit",{"_index":1752,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["useclass",{"_index":2107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useexisting",{"_index":1386,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["user",{"_index":345,"title":{},"body":{"components/Chatbot.html":{},"components/LessonPage.html":{},"components/Login.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"interfaces/SignupPayload.html":{},"injectables/UserService.html":{},"interfaces/VerifyEmailResponse.html":{}}}],["user.model",{"_index":1198,"title":{},"body":{"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"interfaces/SignupPayload.html":{},"interfaces/VerifyEmailResponse.html":{}}}],["usermodel",{"_index":219,"title":{"interfaces/UserModel.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"interfaces/SignupPayload.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"interfaces/VerifyEmailResponse.html":{},"coverage.html":{}}}],["userservice",{"_index":1932,"title":{"injectables/UserService.html":{}},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["using",{"_index":2022,"title":{},"body":{"index.html":{}}}],["utils/file",{"_index":638,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["valid",{"_index":1634,"title":{},"body":{"components/Signup.html":{}}}],["validate",{"_index":480,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"directives/PasswordValidator.html":{},"components/QuestionSettings.html":{}}}],["validate(control",{"_index":1379,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["validation.util",{"_index":639,"title":{},"body":{"directives/FileTypeDirective.html":{}}}],["validation.util.ts",{"_index":1995,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["validationerrors",{"_index":1383,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["validator",{"_index":1377,"title":{},"body":{"directives/PasswordValidator.html":{},"components/Signup.html":{}}}],["validator.ts",{"_index":1376,"title":{},"body":{"directives/PasswordValidator.html":{},"coverage.html":{}}}],["validator.ts:15",{"_index":1381,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["validfiles",{"_index":1272,"title":{},"body":{"components/NamingUpload.html":{}}}],["validfiles.length",{"_index":1270,"title":{},"body":{"components/NamingUpload.html":{}}}],["validfiles.push(file",{"_index":1264,"title":{},"body":{"components/NamingUpload.html":{}}}],["value",{"_index":119,"title":{},"body":{"components/App.html":{},"injectables/AuthService.html":{},"components/Chatbot.html":{},"injectables/ChatbotService.html":{},"components/CreationStepTab.html":{},"classes/ExamSettings.html":{},"injectables/ExerciseService.html":{},"classes/ExerciseSettings.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"injectables/HttpBaseService.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/Login.html":{},"pipes/MarkdownPipe.html":{},"components/NamingUpload.html":{},"injectables/NotificationService.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Signup.html":{},"components/Subjects.html":{},"injectables/SubjectsService.html":{},"components/Subscription.html":{},"injectables/SubscriptionService.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["value.correct",{"_index":1482,"title":{},"body":{"components/Practice.html":{}}}],["value.feedback",{"_index":1486,"title":{},"body":{"components/Practice.html":{}}}],["var",{"_index":28,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{}}}],["variable",{"_index":1965,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2095,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vary",{"_index":892,"title":{},"body":{"components/LessonPage.html":{}}}],["verify",{"_index":85,"title":{},"body":{"components/About.html":{},"components/App.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"miscellaneous/variables.html":{}}}],["verifyemail",{"_index":84,"title":{"components/VerifyEmail.html":{}},"body":{"components/About.html":{},"components/App.html":{},"injectables/AuthService.html":{},"components/Chatbot.html":{},"components/ConfirmLogout.html":{},"components/Contact.html":{},"components/CreationStepTab.html":{},"components/Features.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"components/VerifyEmail.html":{},"coverage.html":{}}}],["verifyemail(token",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyemailresponse",{"_index":1201,"title":{"interfaces/VerifyEmailResponse.html":{}},"body":{"interfaces/LoginPayload.html":{},"interfaces/LoginResponse.html":{},"interfaces/SignupPayload.html":{},"interfaces/VerifyEmailResponse.html":{},"coverage.html":{}}}],["version",{"_index":2025,"title":{},"body":{"index.html":{},"properties.html":{}}}],["view",{"_index":292,"title":{},"body":{"components/Chatbot.html":{},"components/LessonPage.html":{},"components/Practice.html":{},"components/Sidebar.html":{}}}],["viewchild",{"_index":321,"title":{},"body":{"components/Chatbot.html":{},"components/Login.html":{},"components/Signup.html":{},"components/TopicPreferences.html":{}}}],["viewchild('chatcontainer",{"_index":309,"title":{},"body":{"components/Chatbot.html":{}}}],["viewchild('emailctrl",{"_index":1163,"title":{},"body":{"components/Login.html":{},"components/Signup.html":{}}}],["viewchild('firstnamectrl",{"_index":1615,"title":{},"body":{"components/Signup.html":{}}}],["viewchild('lastnamectrl",{"_index":1618,"title":{},"body":{"components/Signup.html":{}}}],["viewchild('learningstylectrl",{"_index":1880,"title":{},"body":{"components/TopicPreferences.html":{}}}],["viewchild('passwordctrl",{"_index":1168,"title":{},"body":{"components/Login.html":{},"components/Signup.html":{}}}],["viewportscroller",{"_index":678,"title":{},"body":{"components/Home.html":{}}}],["viewready",{"_index":264,"title":{},"body":{"components/Chatbot.html":{}}}],["visit",{"_index":2083,"title":{},"body":{"index.html":{}}}],["void",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{},"components/Chatbot.html":{},"components/CreationStepTab.html":{},"directives/FileTypeDirective.html":{},"components/Header.html":{},"components/Home.html":{},"components/Landing.html":{},"components/LessonPage.html":{},"components/Login.html":{},"components/NamingUpload.html":{},"components/NotFound.html":{},"injectables/NotificationService.html":{},"components/Practice.html":{},"components/QuestionSettings.html":{},"components/Sidebar.html":{},"components/Signup.html":{},"components/Subjects.html":{},"components/Subscription.html":{},"components/Subtopic.html":{},"components/Toast.html":{},"components/TopicPreferences.html":{},"injectables/UserService.html":{}}}],["vscroller",{"_index":677,"title":{},"body":{"components/Home.html":{}}}],["wait",{"_index":505,"title":{},"body":{"classes/ExamSettings.html":{},"classes/ExerciseSettings.html":{},"components/LessonPage.html":{},"components/QuestionSettings.html":{}}}],["want",{"_index":382,"title":{},"body":{"components/ConfirmLogout.html":{},"components/Practice.html":{},"components/Pricing.html":{},"components/QuestionSettings.html":{},"components/TopicPreferences.html":{},"miscellaneous/variables.html":{}}}],["warn",{"_index":1364,"title":{},"body":{"injectables/NotificationService.html":{},"components/Toast.html":{},"miscellaneous/typealiases.html":{}}}],["water",{"_index":920,"title":{},"body":{"components/LessonPage.html":{}}}],["weather",{"_index":884,"title":{},"body":{"components/LessonPage.html":{}}}],["welcome",{"_index":1181,"title":{},"body":{"components/Login.html":{}}}],["well",{"_index":1577,"title":{},"body":{"components/QuestionSettings.html":{}}}],["whenever",{"_index":2040,"title":{},"body":{"index.html":{}}}],["white",{"_index":1848,"title":{},"body":{"components/Toast.html":{}}}],["window.location.pathname",{"_index":928,"title":{},"body":{"components/LessonPage.html":{}}}],["window.settimeout",{"_index":1369,"title":{},"body":{"injectables/NotificationService.html":{}}}],["work",{"_index":1494,"title":{},"body":{"components/Practice.html":{}}}],["works",{"_index":23,"title":{},"body":{"components/About.html":{},"components/VerifyEmail.html":{}}}],["world",{"_index":826,"title":{},"body":{"components/LessonPage.html":{}}}],["x",{"_index":1330,"title":{},"body":{"components/NamingUpload.html":{},"components/Toast.html":{}}}],["yellow",{"_index":1852,"title":{},"body":{"components/Toast.html":{}}}],["yes",{"_index":363,"title":{},"body":{"injectables/ChatbotService.html":{},"components/ConfirmLogout.html":{},"components/LessonPage.html":{},"injectables/LessonService.html":{},"components/QuestionSettings.html":{}}}],["yourself",{"_index":593,"title":{},"body":{"components/Features.html":{}}}],["z",{"_index":1839,"title":{},"body":{"components/Toast.html":{}}}],["z\\d!@#$%^&*()_",{"_index":1392,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["z])(?=.*\\d)[a",{"_index":1391,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["za",{"_index":1390,"title":{},"body":{"directives/PasswordValidator.html":{}}}],["zones",{"_index":881,"title":{},"body":{"components/LessonPage.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/About.html":{"url":"components/About.html","title":"component - About","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  About\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/about-ignore/about.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./about.html\n            \n\n\n\n            \n                styleUrl\n                ./about.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  imports: [],\n  templateUrl: './about.html',\n  styleUrl: './about.css'\n})\nexport class About {\n\n}\n\n    \n\n    \n        about works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'about works!'\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'About'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnswerModel.html":{"url":"interfaces/AnswerModel.html","title":"interface - AnswerModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnswerModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/answer.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            correctOptions\n                                        \n                                \n                                \n                                        \n                                            feeback\n                                        \n                                \n                                \n                                        \n                                            isCorrect\n                                        \n                                \n                                \n                                        \n                                            prompt\n                                        \n                                \n                                \n                                        \n                                            questionId\n                                        \n                                \n                                \n                                        \n                                            selectedOptions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        correctOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        correctOptions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        feeback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        feeback:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isCorrect\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isCorrect:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prompt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prompt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedOptions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AnswerModel {\n    questionId: string;\n    prompt: string;\n    selectedOptions: string[];\n    correctOptions: string[];\n    isCorrect: boolean;\n    feeback: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/App.html":{"url":"components/App.html","title":"component - App","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  App\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                                Toast\n                                Header\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.html\n            \n\n\n\n            \n                styleUrl\n                ./app.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('maestro_frontend')\n                    \n                \n                    \n                        \n                                Defined in src/app/app.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, signal } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { Toast } from \"./shared/components/toast/toast\";\nimport { Header } from \"./shared/components/header/header\";\n\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet, Toast, Header],\n  templateUrl: './app.html',\n  styleUrl: './app.css'\n})\nexport class App {\n  protected readonly title = signal('maestro_frontend');\n}\n\n    \n\n    \n        \n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'App'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interceptors/auth.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/interceptors/auth.interceptor.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/interceptors/auth.interceptor.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpErrorResponse,\n  HttpEvent\n} from '@angular/common/http';\nimport { catchError, throwError, Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private auth: AuthService, private router: Router) {}\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const token = this.auth.accessToken;\n    const authReq = token\n      ? req.clone({ setHeaders: { Authorization: `Bearer ${token}` } })\n      : req;\n\n    return next.handle(authReq).pipe(\n      catchError((err: HttpErrorResponse) => {\n        if (err.status === 401) {\n          console.log('Unauthorized request - logging out');\n          // clear stored tokens/session\n          this.auth.logout();  \n\n          // redirect to login page\n          this.router.navigate(['/login']);\n        }\n        return throwError(() => err);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                refreshAccessToken\n                            \n                            \n                                refreshToken\n                            \n                            \n                                signup\n                            \n                            \n                                    Private\n                                storeTokens\n                            \n                            \n                                verifyEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    accessToken\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(credentials: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshAccessToken\n                        \n                    \n                \n            \n            \n                \nrefreshAccessToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshToken\n                        \n                    \n                \n            \n            \n                \nrefreshToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signup\n                        \n                    \n                \n            \n            \n                \nsignup(data: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        storeTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    storeTokens(res: LoginResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                            LoginResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyEmail\n                        \n                    \n                \n            \n            \n                \nverifyEmail(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpBaseService)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        accessToken\n                    \n                \n\n                \n                    \n                        getaccessToken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/auth.service.ts:43\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpBaseService } from './http-base.service';\nimport { UserModel } from '../models/user.model';\nimport { LoginResponse } from '../models/auth-payload.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  refreshToken(): Observable {\n      throw new Error('Method not implemented.');\n  }\n  http = inject(HttpBaseService);\n\n  signup(data: { first_name: string, last_name: string, email: string, password: string }): Observable {\n    return this.http.post('auth/sign-up', data);\n  }\n\n  login(credentials: { email: string; password: string }): Observable {\n    return this.http.post('auth/login', credentials);\n  }\n\n  refreshAccessToken(): Observable {\n    return this.http.post('auth/refresh-token', {});\n  }\n\n  verifyEmail(token: string): Observable {\n    return this.http.post('auth/verify-email', { token });\n  }\n\n  logout(): void {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n  }\n\n  // logout(): Observable {\n  //   const response = this.http.post('auth/logout', { refreshToken: localStorage.getItem('refreshToken') });\n  //   localStorage.removeItem('accessToken');\n  //   localStorage.removeItem('refreshToken');\n  //   return response\n  // }\n  get accessToken(): string | null {\n    return localStorage.getItem('accessToken');\n  }\n\n  private storeTokens(res: LoginResponse): void{\n    localStorage.setItem('accessToken', res.accessToken);\n    localStorage.setItem('refreshToken', res.refreshToken);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChatMessage.html":{"url":"interfaces/ChatMessage.html","title":"interface - ChatMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChatMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/chat-message.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            sender\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sender:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ChatMessage {\n  sender: string;\n  timestamp: string;\n  message: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Chatbot.html":{"url":"components/Chatbot.html","title":"component - Chatbot","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  Chatbot\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/lesson/chatbot/chatbot.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chatbot\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                            MarkdownPipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./chatbot.html\n            \n\n\n\n            \n                styleUrl\n                ./chatbot.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                autoScrollEffect\n                            \n                            \n                                chatbotService\n                            \n                            \n                                    \n                                    Private\n                                chatContainer\n                            \n                            \n                                currentMessage\n                            \n                            \n                                    Private\n                                injector\n                            \n                            \n                                loading\n                            \n                            \n                                    Private\n                                viewReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                onCloseChat\n                            \n                            \n                                    Private\n                                scrollToBottom\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                chatHistory\n                            \n                            \n                                metadata\n                            \n                            \n                                subjectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                chatHistory\n                            \n                            \n                                closeChat\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        chatHistory\n                    \n                \n                \n                    \n                        Type :         ChatMessage[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/lesson/chatbot/chatbot.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        metadata\n                    \n                \n                \n                    \n                        Type :         ChatMetadata\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/lesson/chatbot/chatbot.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        subjectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/lesson/chatbot/chatbot.ts:17\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        chatHistory\n                    \n                \n                \n                    \n                        Type :         ChatMessage[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/lesson/chatbot/chatbot.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        closeChat\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/lesson/chatbot/chatbot.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/chatbot/chatbot.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCloseChat\n                        \n                    \n                \n            \n            \n                \nonCloseChat()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/chatbot/chatbot.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scrollToBottom\n                        \n                    \n                \n            \n            \n                \n                        \n                    scrollToBottom()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/chatbot/chatbot.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/chatbot/chatbot.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        autoScrollEffect\n                        \n                    \n                \n            \n                \n                    \n                        Default value : effect(\n    () => {\n      const history = this.chatHistory(); // track changes\n      // don’t try to scroll before the view exists\n      if (!this.viewReady || history.length === 0) return;\n\n      // defer until DOM has rendered the new item\n      queueMicrotask(() => this.scrollToBottom());\n    },\n    { injector: this.injector }\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/chatbot/chatbot.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chatbotService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ChatbotService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/chatbot/chatbot.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        chatContainer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('chatContainer')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/chatbot/chatbot.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/chatbot/chatbot.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        injector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Injector)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/chatbot/chatbot.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/chatbot/chatbot.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        viewReady\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/chatbot/chatbot.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, input, model, output, AfterViewInit, ElementRef, ViewChild, effect, Injector } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { timestamp } from 'rxjs';\nimport { ChatMessage } from '../../../core/models/chat-message.model';\nimport { ChatbotService } from '../../../core/services/chatbot.service';\nimport { ChatMetadata } from '../../../core/models/chat-metadata.model';\nimport { MarkdownPipe } from '../../../shared/pipes/markdown-pipe';\n\n@Component({\n  selector: 'app-chatbot',\n  imports: [FormsModule, MarkdownPipe],\n  templateUrl: './chatbot.html',\n  styleUrl: './chatbot.css'\n})\nexport class Chatbot {\n  chatHistory = model([]);\n  subjectId = input()\n  metadata = input();\n  closeChat = output();\n  currentMessage: string = ''; \n  loading = false;\n  chatbotService = inject(ChatbotService)\n  @ViewChild('chatContainer') private chatContainer!: ElementRef;\n\n  onCloseChat() {\n    this.closeChat.emit({});\n  }\n\n  private injector = inject(Injector);\n  private viewReady = false;\n\n  // Create the effect in an injection context\n  private autoScrollEffect = effect(\n    () => {\n      const history = this.chatHistory(); // track changes\n      // don’t try to scroll before the view exists\n      if (!this.viewReady || history.length === 0) return;\n\n      // defer until DOM has rendered the new item\n      queueMicrotask(() => this.scrollToBottom());\n    },\n    { injector: this.injector }\n  );\n\n  ngAfterViewInit() {\n    this.viewReady = true;\n    // initial scroll (e.g., when history is preloaded)\n    queueMicrotask(() => this.scrollToBottom());\n  }\n\n  private scrollToBottom() {\n    const el = this.chatContainer?.nativeElement;\n    if (!el) return;\n    el.scrollTop = el.scrollHeight;\n  }\n\n  sendMessage() {\n    this.loading = true;\n    if (!this.currentMessage) {\n      this.loading = false;\n      return\n    }\n\n    console.log(this.currentMessage);\n    this.chatHistory()?.push({\n      sender: \"user\",\n      message: this.currentMessage,\n      timestamp: Date().toLocaleString(),\n    })\n\n    this.chatbotService.sendMessage(this.subjectId(), this.currentMessage, this.metadata()).subscribe({\n      next: (response) => {\n        this.chatHistory.update(history => [\n          ...history,\n          {\n            sender: \"assistant\",\n            message: response.response,\n            timestamp: new Date().toLocaleString(),\n          }\n        ]);\n        this.currentMessage = '';\n        this.loading = false;\n        console.log(response);\n      }, error: (err) => {\n        console.error(`Error sending message: ${err}`);\n        this.loading = false;\n      },\n    });\n    \n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n\n  \n  \n    @for (chat of chatHistory(); track $index) {\n      \n      \n      \n    }\n  \n\n  \n  \n    \n\n    \n    \n      Send\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  @for (chat of chatHistory(); track $index) {                      }                        Send      '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'Chatbot'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChatbotService.html":{"url":"injectables/ChatbotService.html","title":"injectable - ChatbotService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ChatbotService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/chatbot.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getChatHistory\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getChatHistory\n                        \n                    \n                \n            \n            \n                \ngetChatHistory(sessionId?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/chatbot.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(sessionId?: string, message?: string, metadata?: ChatMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/chatbot.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                metadata\n                                            \n                                                            ChatMetadata\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpBaseService)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/chatbot.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpBaseService } from './http-base.service';\nimport { ChatMetadata } from '../models/chat-metadata.model';\n\n@Injectable({ providedIn: 'root' })\nexport class ChatbotService {\n  http = inject(HttpBaseService);\n\n  sendMessage(sessionId?: string, message?: string, metadata?: ChatMetadata): Observable {\n    return this.http.post(`chatbot/${sessionId}/send-message`, { message, metadata });\n  }\n\n  getChatHistory(sessionId?: string): Observable {\n    return this.http.get(`chatbot/${sessionId}/chat-history`);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmLogout.html":{"url":"components/ConfirmLogout.html","title":"component - ConfirmLogout","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ConfirmLogout\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/confirm-logout/confirm-logout.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-logout\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./confirm-logout.html\n            \n\n\n\n            \n                styleUrl\n                ./confirm-logout.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        cancel\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/confirm-logout/confirm-logout.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        confirm\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/confirm-logout/confirm-logout.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-confirm-logout',\n  imports: [CommonModule],\n  templateUrl: './confirm-logout.html',\n  styleUrl: './confirm-logout.css'\n})\nexport class ConfirmLogout {\n  @Output() confirm = new EventEmitter();\n  @Output() cancel = new EventEmitter();\n}\n\n    \n\n    \n        \n  \n    Logout\n    Are you sure you want to log out?\n    \n      \n        Cancel\n      \n      \n        Yes, Logout\n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Logout    Are you sure you want to log out?                  Cancel                    Yes, Logout            '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmLogout'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Contact.html":{"url":"components/Contact.html","title":"component - Contact","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  Contact\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/contact/contact.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contact\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./contact.html\n            \n\n\n\n            \n                styleUrl\n                ./contact.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  imports: [],\n  templateUrl: './contact.html',\n  styleUrl: './contact.css'\n})\nexport class Contact {\n\n}\n\n    \n\n    \n        \n\n  \n  \n    \n    \n      \n      \n        \n          \n            \n          \n\n          \n            Maestro\n          \n        \n        \n          Your Personalized Learning Companion\n        \n      \n      \n      \n        \n          Quick Links\n          \n            \n              Home\n            \n            \n              Features\n            \n            \n              Pricing\n            \n          \n        \n\n        \n          \n            Contact Information\n          \n          \n            \n            info@maestro.org\n          \n        \n      \n    \n\n    \n    \n\n    \n    \n      \n        &copy; 2025 Maestro. All rights reserved.\n      \n      \n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                      Maestro                                    Your Personalized Learning Companion                                            Quick Links                                    Home                                      Features                                      Pricing                                                            Contact Information                                            info@maestro.org                                                          © 2025 Maestro. All rights reserved.                                                                                                            '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'Contact'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreationStepTab.html":{"url":"components/CreationStepTab.html","title":"component - CreationStepTab","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  CreationStepTab\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/subject-create/creation-step-tab/creation-step-tab.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-creation-step-tab\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./creation-step-tab.html\n            \n\n\n\n            \n                styleUrl\n                ./creation-step-tab.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bgColour\n                            \n                            \n                                textColour\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                icon\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/subject-create/creation-step-tab/creation-step-tab.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/subject-create/creation-step-tab/creation-step-tab.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/subject-create/creation-step-tab/creation-step-tab.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/subject-create/creation-step-tab/creation-step-tab.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bgColour\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/creation-step-tab/creation-step-tab.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        textColour\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/creation-step-tab/creation-step-tab.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule, NgClass } from '@angular/common';\nimport { Component, input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-creation-step-tab',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './creation-step-tab.html',\n  styleUrl: './creation-step-tab.css'\n})\nexport class CreationStepTab implements OnInit {\n  text = input.required();\n  icon = input(null);\n  active = input();\n\n  bgColour = '';\n  textColour = '';\n\n  ngOnInit () {\n    if (this.active()) {\n      this.bgColour = 'bg-prussian-blue-800';\n      this.textColour = 'text-prussian-blue-900';\n    } else {\n      this.bgColour = 'bg-prussian-blue-250';\n      this.textColour = 'text-prussian-blue-500';\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n    {{ text() }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ text() }}  '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreationStepTab'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExamModel.html":{"url":"interfaces/ExamModel.html","title":"interface - ExamModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExamModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/exam.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            questions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            score\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questions:         QuestionModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         QuestionModel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        score\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        score:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { QuestionModel } from \"./question.model\";\n\nexport interface ExamModel {\n  id: string;\n  score?: number;\n  questions: QuestionModel[];\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExamSettings.html":{"url":"classes/ExamSettings.html","title":"class - ExamSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExamSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/subject-create/question-settings/question-settings.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                include\n                            \n                            \n                                preference\n                            \n                            \n                                questionTypes\n                            \n                            \n                                timeLimit\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        include\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/question-settings/question-settings.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preference\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/question-settings/question-settings.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questionTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/question-settings/question-settings.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeLimit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/question-settings/question-settings.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ChangeDetectorRef, Component, inject } from '@angular/core';\nimport { Header } from '../../../shared/components/header/header';\nimport { CreationStepTab } from '../creation-step-tab/creation-step-tab';\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { SubjectsService } from '../../../core/services/subjects.service';\nimport { forkJoin, Observable } from 'rxjs';\nimport { NotificationService } from '../../../core/services/notification.service'; //  = []\n  preference: string = ''\n}\nclass ExamSettings {\n  include: boolean = false\n  questionTypes: Array = []\n  preference: string = ''\n  timeLimit: any = null\n}\n\n@Component({\n  selector: 'app-question-settings',\n  imports: [Header, CreationStepTab, FormsModule],\n  templateUrl: './question-settings.html',\n  styleUrl: './question-settings.css'\n})\nexport class QuestionSettings {\n  exerciseSettings = new ExerciseSettings();\n  examSettings = new ExamSettings();\n  loading = false;\n  subjectId = '';\n  subjectService = inject(SubjectsService)\n  notify = inject(NotificationService); //  qt !== event.target.value);\n    }\n  }\n\n  toggleExamType(event: any) {\n    if (event.target.checked) {\n      this.examSettings.questionTypes.push(event.target.value);\n    } else {\n      this.examSettings.questionTypes = this.examSettings.questionTypes.filter((qt) => qt !== event.target.value);\n    }\n  }\n\n  onSubmit() {\n    this.loading = true;\n    let exerciseValidated = false;\n    let examValidated = false;\n  \n    // Validate exercise fields\n    if (this.exerciseSettings.include) {\n      if (this.exerciseSettings.questionTypes.length == 0) {\n        this.notify.showError(\"Choose at least one question type for the exercises\");\n        this.loading = false;\n        return;\n      }\n      if (!this.exerciseSettings.preference) {\n        this.notify.showError(\"Exercise preference cannot be empty\");\n        this.loading = false;\n        return;\n      }\n    }\n    exerciseValidated = true;\n  \n    // Validate exam fields\n    if (this.examSettings.include) {\n      if (this.examSettings.questionTypes.length == 0) {\n        this.notify.showError(\"Choose at least one question type for the exam\");\n        this.loading = false;\n        return;\n      }\n      if (!this.examSettings.preference) {\n        this.notify.showError(\"Exam preference cannot be empty\");\n        this.loading = false;\n        return;\n      }\n    }\n    examValidated = true;\n  \n    // Collect all requests to run in parallel\n    const requests: Observable[] = [];\n  \n    if (this.exerciseSettings.include && exerciseValidated) {\n      requests.push(\n        this.subjectService.generateExercise(\n          this.subjectId,\n          this.exerciseSettings.preference,\n          this.exerciseSettings.questionTypes\n        )\n      );\n    }\n  \n    if (this.examSettings.include && examValidated) {\n      requests.push(\n        this.subjectService.generateExam(\n          this.subjectId,\n          this.examSettings.preference,\n          this.examSettings.questionTypes\n        )\n      );\n    }\n  \n    // If there are requests, wait for them to finish before updating status\n    if (requests.length > 0) {\n      forkJoin(requests).subscribe({\n        next: (responses) => {\n          console.log(\"Generation responses:\", responses);\n          this.subjectService.updateSessionStatus(this.subjectId, \"In Progress\").subscribe({\n            next: () => {\n              console.log(\"Session status updated\");\n              this.router.navigate([`/lesson/${this.subjectId}`]);\n            },\n            error: (err) => {\n              console.error(\"Failed to update session status\", err);\n              this.router.navigate([`/lesson/${this.subjectId}`]);\n            },\n            complete: () => (this.loading = false),\n          });\n        },\n        error: (err) => {\n          console.error(\"Error during generation:\", err);\n          this.loading = false;\n        }\n      });\n    } else {\n      // If no requests to generate, just update status directly\n      this.subjectService.updateSessionStatus(this.subjectId, \"In Progress\").subscribe({\n        next: () => {\n          console.log(\"Session status updated (no generation needed)\");\n          this.router.navigate([`/lesson/${this.subjectId}`]);\n        },\n        error: (err) => {\n          console.error(\"Failed to update session status\", err);\n          this.router.navigate([`/lesson/${this.subjectId}`]);\n        },\n        complete: () => (this.loading = false),\n      });\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExerciseModel.html":{"url":"interfaces/ExerciseModel.html","title":"interface - ExerciseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExerciseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/exercise.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            questions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            score\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questions:         QuestionModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         QuestionModel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        score\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        score:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { QuestionModel } from \"./question.model\";\n\nexport interface ExerciseModel {\n  id: string;\n  score?: number;\n  questions: QuestionModel[];\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExerciseService.html":{"url":"injectables/ExerciseService.html","title":"injectable - ExerciseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ExerciseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/exercise.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPastAnswers\n                            \n                            \n                                submitAnswers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/exercise.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPastAnswers\n                        \n                    \n                \n            \n            \n                \ngetPastAnswers(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/exercise.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitAnswers\n                        \n                    \n                \n            \n            \n                \nsubmitAnswers(id: string, payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/exercise.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.apiUrl}/exercises`\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/exercise.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AnswerModel } from '../models/answer.model';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({ providedIn: 'root' })\nexport class ExerciseService {\n  private apiUrl = `${environment.apiUrl}/exercises`;\n\n  constructor(private http: HttpClient) {}\n\n  getPastAnswers(id: string): Observable {\n    return this.http.get(`${this.apiUrl}/${id}/answers`);\n  }\n\n  submitAnswers(id: string, payload: any): Observable {\n    return this.http.post(`${this.apiUrl}/${id}/submit`, payload);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExerciseSettings.html":{"url":"classes/ExerciseSettings.html","title":"class - ExerciseSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExerciseSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/subject-create/question-settings/question-settings.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                include\n                            \n                            \n                                preference\n                            \n                            \n                                questionTypes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        include\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/question-settings/question-settings.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preference\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/question-settings/question-settings.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questionTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/question-settings/question-settings.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ChangeDetectorRef, Component, inject } from '@angular/core';\nimport { Header } from '../../../shared/components/header/header';\nimport { CreationStepTab } from '../creation-step-tab/creation-step-tab';\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { SubjectsService } from '../../../core/services/subjects.service';\nimport { forkJoin, Observable } from 'rxjs';\nimport { NotificationService } from '../../../core/services/notification.service'; //  = []\n  preference: string = ''\n}\nclass ExamSettings {\n  include: boolean = false\n  questionTypes: Array = []\n  preference: string = ''\n  timeLimit: any = null\n}\n\n@Component({\n  selector: 'app-question-settings',\n  imports: [Header, CreationStepTab, FormsModule],\n  templateUrl: './question-settings.html',\n  styleUrl: './question-settings.css'\n})\nexport class QuestionSettings {\n  exerciseSettings = new ExerciseSettings();\n  examSettings = new ExamSettings();\n  loading = false;\n  subjectId = '';\n  subjectService = inject(SubjectsService)\n  notify = inject(NotificationService); //  qt !== event.target.value);\n    }\n  }\n\n  toggleExamType(event: any) {\n    if (event.target.checked) {\n      this.examSettings.questionTypes.push(event.target.value);\n    } else {\n      this.examSettings.questionTypes = this.examSettings.questionTypes.filter((qt) => qt !== event.target.value);\n    }\n  }\n\n  onSubmit() {\n    this.loading = true;\n    let exerciseValidated = false;\n    let examValidated = false;\n  \n    // Validate exercise fields\n    if (this.exerciseSettings.include) {\n      if (this.exerciseSettings.questionTypes.length == 0) {\n        this.notify.showError(\"Choose at least one question type for the exercises\");\n        this.loading = false;\n        return;\n      }\n      if (!this.exerciseSettings.preference) {\n        this.notify.showError(\"Exercise preference cannot be empty\");\n        this.loading = false;\n        return;\n      }\n    }\n    exerciseValidated = true;\n  \n    // Validate exam fields\n    if (this.examSettings.include) {\n      if (this.examSettings.questionTypes.length == 0) {\n        this.notify.showError(\"Choose at least one question type for the exam\");\n        this.loading = false;\n        return;\n      }\n      if (!this.examSettings.preference) {\n        this.notify.showError(\"Exam preference cannot be empty\");\n        this.loading = false;\n        return;\n      }\n    }\n    examValidated = true;\n  \n    // Collect all requests to run in parallel\n    const requests: Observable[] = [];\n  \n    if (this.exerciseSettings.include && exerciseValidated) {\n      requests.push(\n        this.subjectService.generateExercise(\n          this.subjectId,\n          this.exerciseSettings.preference,\n          this.exerciseSettings.questionTypes\n        )\n      );\n    }\n  \n    if (this.examSettings.include && examValidated) {\n      requests.push(\n        this.subjectService.generateExam(\n          this.subjectId,\n          this.examSettings.preference,\n          this.examSettings.questionTypes\n        )\n      );\n    }\n  \n    // If there are requests, wait for them to finish before updating status\n    if (requests.length > 0) {\n      forkJoin(requests).subscribe({\n        next: (responses) => {\n          console.log(\"Generation responses:\", responses);\n          this.subjectService.updateSessionStatus(this.subjectId, \"In Progress\").subscribe({\n            next: () => {\n              console.log(\"Session status updated\");\n              this.router.navigate([`/lesson/${this.subjectId}`]);\n            },\n            error: (err) => {\n              console.error(\"Failed to update session status\", err);\n              this.router.navigate([`/lesson/${this.subjectId}`]);\n            },\n            complete: () => (this.loading = false),\n          });\n        },\n        error: (err) => {\n          console.error(\"Error during generation:\", err);\n          this.loading = false;\n        }\n      });\n    } else {\n      // If no requests to generate, just update status directly\n      this.subjectService.updateSessionStatus(this.subjectId, \"In Progress\").subscribe({\n        next: () => {\n          console.log(\"Session status updated (no generation needed)\");\n          this.router.navigate([`/lesson/${this.subjectId}`]);\n        },\n        error: (err) => {\n          console.error(\"Failed to update session status\", err);\n          this.router.navigate([`/lesson/${this.subjectId}`]);\n        },\n        complete: () => (this.loading = false),\n      });\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Features.html":{"url":"components/Features.html","title":"component - Features","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  Features\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/features/features.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-features\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./features.html\n            \n\n\n\n            \n                styleUrl\n                ./features.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-features',\n  imports: [],\n  templateUrl: './features.html',\n  styleUrl: './features.css'\n})\nexport class Features {\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        Features\n      \n      \n      \n        Experience Smarter Learning, Designed for You\n      \n    \n\n    \n\n    \n      \n        \n          \n        \n        \n          \n          \n            Easy Material Comprehension\n          \n          \n          \n            Upload your PDFs and DOCX files, and let Maestro turn complex topics\n            into easy lessons suited to your learning style.\n          \n        \n      \n      \n      \n        \n          \n        \n        \n          \n            Tailored Learning Paths\n          \n          \n            Tell Maestro your learning style and your preferred complexity. Get\n            content that resonates.\n          \n        \n      \n      \n      \n        \n          \n        \n        \n          \n            Engaging Summaries & Notes\n          \n          \n            Forget endless highlighting. Maestro creates interactive summaries\n            and notes to help you grasp key concepts quickly.\n          \n        \n      \n      \n      \n        \n          \n        \n        \n          \n            Practice & Exam Options\n          \n          \n            Challenge yourself with AI-driven quizzes and exams that adapt to\n            your progress, pinpointing areas for improvement.\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Features                          Experience Smarter Learning, Designed for You                                                                                          Easy Material Comprehension                                          Upload your PDFs and DOCX files, and let Maestro turn complex topics            into easy lessons suited to your learning style.                                                                                            Tailored Learning Paths                                Tell Maestro your learning style and your preferred complexity. Get            content that resonates.                                                                                            Engaging Summaries & Notes                                Forget endless highlighting. Maestro creates interactive summaries            and notes to help you grasp key concepts quickly.                                                                                            Practice & Exam Options                                Challenge yourself with AI-driven quizzes and exams that adapt to            your progress, pinpointing areas for improvement.                              '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'Features'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/FileTypeDirective.html":{"url":"directives/FileTypeDirective.html","title":"directive - FileTypeDirective","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Directives\n  FileTypeDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/file-type.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appFileType]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                onChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appFileType\n                            \n                            \n                                maxBytes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                fileError\n                            \n                            \n                                fileOk\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        appFileType\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/file-type.directive.ts:11\n                            \n                        \n                \n                    \n                        Allowed MIME types, e.g., ['application/pdf','image/png']\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        maxBytes\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10 * 1024 * 1024\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/file-type.directive.ts:13\n                            \n                        \n                \n                    \n                        Max size in bytes (default 10MB)\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        fileError\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/file-type.directive.ts:17\n                            \n                        \n                \n                    \n                        Emits error reason when rejected\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fileOk\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/file-type.directive.ts:15\n                            \n                        \n                \n                    \n                        Emits file when ok; null when rejected\n\n                    \n                \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            change\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/file-type.directive.ts:20\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onChange\n                        \n                    \n                \n            \n            \n                \n                        \n                    onChange(ev: Event)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('change', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/directives/file-type.directive.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ev\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, EventEmitter, HostListener, Input, Output } from '@angular/core';\nimport { isAllowedFile } from '../utils/file-validation.util';\n\n@Directive({\n  selector: '[appFileType]',\n  standalone: true\n})\nexport class FileTypeDirective {\n  /** Allowed MIME types, e.g., ['application/pdf','image/png'] */\n  @Input() appFileType: string[] = [];\n  /** Max size in bytes (default 10MB) */\n  @Input() maxBytes = 10 * 1024 * 1024;\n  /** Emits file when ok; null when rejected */\n  @Output() fileOk = new EventEmitter();\n  /** Emits error reason when rejected */\n  @Output() fileError = new EventEmitter();\n\n  @HostListener('change', ['$event'])\n  onChange(ev: Event) {\n    const input = ev.target as HTMLInputElement;\n    const f = input.files?.[0];\n    if (!f) return;\n    const res = isAllowedFile(f, this.appFileType, this.maxBytes);\n    if (res.ok) {\n      this.fileOk.emit(f);\n    } else {\n      this.fileError.emit(res.reason || 'Invalid file.');\n      this.fileOk.emit(null);\n      input.value = ''; // reset selection\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Header.html":{"url":"components/Header.html","title":"component - Header","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  Header\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/header/header.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterLink\n                            RouterLinkActive\n                                ConfirmLogout\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./header.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showLogout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelLogout\n                            \n                            \n                                confirmLogout\n                            \n                            \n                                openLogout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/header/header.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelLogout\n                        \n                    \n                \n            \n            \n                \ncancelLogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/header/header.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmLogout\n                        \n                    \n                \n            \n            \n                \nconfirmLogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/header/header.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openLogout\n                        \n                    \n                \n            \n            \n                \nopenLogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/header/header.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        showLogout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/header/header.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, signal } from '@angular/core';\nimport { RouterLink, RouterLinkActive, Router } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { ConfirmLogout } from '../confirm-logout/confirm-logout';\nimport { AuthService } from '../../../core/services/auth.service';\n\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [CommonModule, RouterLink, RouterLinkActive, ConfirmLogout],\n  templateUrl: './header.html'\n})\nexport class Header {\n  showLogout = signal(false);\n\n  constructor(private auth: AuthService, private router: Router) {}\n\n  openLogout() { this.showLogout.set(true); }\n  cancelLogout() { this.showLogout.set(false); }\n  confirmLogout() {\n    this.auth.logout();\n    this.showLogout.set(false);\n    this.router.navigateByUrl('/login');\n  }\n}\n    \n\n    \n        \n  \n  \n    \n    Maestro\n  \n\n  \n  \n    \n    \n      Home\n      Dashboard\n      Subscription\n    \n\n    \n    \n      \n        Logout\n      \n\n      \n    \n  \n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Maestro                    Home      Dashboard      Subscription                          Logout                  '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'Header'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Home.html":{"url":"components/Home.html","title":"component - Home","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  Home\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home/home.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n            \n                imports\n                \n                                Landing\n                                Features\n                                Pricing\n                                Contact\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.html\n            \n\n\n\n            \n                styleUrl\n                ./home.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                scrollTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, vscroller: ViewportScroller)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/home/home.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        vscroller\n                                                  \n                                                        \n                                                                    ViewportScroller\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home/home.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scrollTo\n                        \n                    \n                \n            \n            \n                \nscrollTo(section: \"top\" | \"features\" | \"pricing\" | \"contact\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home/home.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                        \"top\" | \"features\" | \"pricing\" | \"contact\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ViewportScroller } from '@angular/common';\nimport { Landing } from '../landing/landing';\nimport { Features } from '../features/features';\nimport { Pricing } from '../pricing/pricing';\nimport { Contact } from '../contact/contact';\n\n@Component({\n  selector: 'app-home',\n  imports: [Landing, Features, Pricing, Contact],\n  templateUrl: './home.html',\n  styleUrl: './home.css'\n})\nexport class Home {\n  constructor(\n    private router: Router,\n    private vscroller: ViewportScroller\n  ) {}\n\n  ngOnInit(): void {\n    // this.router.navigate(['/login']);\n  }\n\n  scrollTo(section: 'top' | 'features' | 'pricing' | 'contact' ) {\n    if (section === 'top') {\n      this.vscroller.scrollToPosition([0, 0]);\n    } else {\n      this.vscroller.scrollToAnchor(section);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'Home'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpBaseService.html":{"url":"injectables/HttpBaseService.html","title":"injectable - HttpBaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  HttpBaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/http-base.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                apiUrl\n                            \n                            \n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                    Private\n                                getHeaders\n                            \n                            \n                                post\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(endpoint: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http-base.service.ts:33\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(endpoint: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http-base.service.ts:21\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getHeaders\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHeaders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http-base.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         HttpHeaders\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        post\n                        \n                    \n                \n            \n            \n                \npost(endpoint: string, body: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http-base.service.ts:25\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(endpoint: string, body: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http-base.service.ts:29\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/http-base.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/http-base.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpBaseService {\n  private readonly apiUrl = environment.apiUrl;\n  http = inject(HttpClient);\n\n  private getHeaders(): HttpHeaders {\n    const token = localStorage.getItem('accessToken');\n    return new HttpHeaders({\n      Authorization: token ? `Bearer ${token}` : '',\n    });\n  }\n\n  get(endpoint: string): Observable {\n    return this.http.get(`${this.apiUrl}/${endpoint}`, { headers: this.getHeaders() });\n  }\n\n  post(endpoint: string, body: any): Observable {\n    return this.http.post(`${this.apiUrl}/${endpoint}`, body, { headers: this.getHeaders() });\n  }\n\n  put(endpoint: string, body: any): Observable {\n    return this.http.put(`${this.apiUrl}/${endpoint}`, body, { headers: this.getHeaders() });\n  }\n\n  delete(endpoint: string): Observable {\n    return this.http.delete(`${this.apiUrl}/${endpoint}`, { headers: this.getHeaders() });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Landing.html":{"url":"components/Landing.html","title":"component - Landing","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  Landing\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/landing/landing.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-landing\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./landing.html\n            \n\n\n\n            \n                styleUrl\n                ./landing.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onContactClick\n                            \n                            \n                                onFeaturesClick\n                            \n                            \n                                onGetStartedClick\n                            \n                            \n                                onHomeClick\n                            \n                            \n                                onPricingClick\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                navigateSection\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/landing/landing.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        navigateSection\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/landing/landing.ts:12\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onContactClick\n                        \n                    \n                \n            \n            \n                \nonContactClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/landing/landing.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFeaturesClick\n                        \n                    \n                \n            \n            \n                \nonFeaturesClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/landing/landing.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onGetStartedClick\n                        \n                    \n                \n            \n            \n                \nonGetStartedClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/landing/landing.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onHomeClick\n                        \n                    \n                \n            \n            \n                \nonHomeClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/landing/landing.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPricingClick\n                        \n                    \n                \n            \n            \n                \nonPricingClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/landing/landing.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Output, output } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-landing',\n  imports: [CommonModule],\n  templateUrl: './landing.html',\n  styleUrl: './landing.css'\n})\nexport class Landing {\n  @Output() navigateSection = new EventEmitter();\n\n  constructor(private router: Router) {}\n\n  onHomeClick() {\n    this.navigateSection.emit('top');\n  }\n\n  onFeaturesClick() {\n    this.navigateSection.emit('features');\n  }\n\n  onPricingClick() {\n    this.navigateSection.emit('pricing');\n  }\n\n  onContactClick() {\n    this.navigateSection.emit('contact');\n  }\n\n  onGetStartedClick() {\n    this.router.navigate(['/signup']);\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n\n  \n  \n    \n      \n        \n        Maestro\n      \n\n      \n      \n        Home\n        Features\n        Pricing\n        Contact us\n      \n\n      \n        Try Maestro\n      \n    \n\n    \n    \n      \n        \n          Unlock Your Learning Potential with Maestro\n        \n        \n          Upload your materials, customize how you learn, and get AI-crafted\n          lessons, quizzes, and study plans tailored just for you.\n        \n        \n          Get Started\n        \n      \n    \n\n    \n    \n      \n        Be among the first to shape the future of learning.\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Maestro                          Home        Features        Pricing        Contact us                    Try Maestro                                          Unlock Your Learning Potential with Maestro                          Upload your materials, customize how you learn, and get AI-crafted          lessons, quizzes, and study plans tailored just for you.                          Get Started                                        Be among the first to shape the future of learning.            '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'Landing'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LessonPage.html":{"url":"components/LessonPage.html","title":"component - LessonPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  LessonPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/lesson/lesson-page/lesson-page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-lesson-page\n            \n\n\n            \n                imports\n                \n                                Header\n                                Sidebar\n                                Chatbot\n                                Subtopic\n                                Practice\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./lesson-page.html\n            \n\n\n\n            \n                styleUrl\n                ./lesson-page.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chatbotService\n                            \n                            \n                                chatHistory\n                            \n                            \n                                chatMetadata\n                            \n                            \n                                chatOpen\n                            \n                            \n                                currentView\n                            \n                            \n                                lessonService\n                            \n                            \n                                subjectContent\n                            \n                            \n                                subjectId\n                            \n                            \n                                subjectService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                capitalizeFirstLetter\n                            \n                            \n                                changeSubtopic\n                            \n                            \n                                checkForTopicCompleteness\n                            \n                            \n                                getTopicDataFromExercise\n                            \n                            \n                                getTopicDataFromSubtopic\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleChatPopup\n                            \n                            \n                                updateChatMetadata\n                            \n                            \n                                updatecurrentView\n                            \n                            \n                                updateProgress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        capitalizeFirstLetter\n                        \n                    \n                \n            \n            \n                \ncapitalizeFirstLetter(str: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:464\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeSubtopic\n                        \n                    \n                \n            \n            \n                \nchangeSubtopic(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:409\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkForTopicCompleteness\n                        \n                    \n                \n            \n            \n                \ncheckForTopicCompleteness(topic_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:392\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                topic_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTopicDataFromExercise\n                        \n                    \n                \n            \n            \n                \ngetTopicDataFromExercise()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:386\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { id: any; title: any; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTopicDataFromSubtopic\n                        \n                    \n                \n            \n            \n                \ngetTopicDataFromSubtopic()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:380\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { id: any; title: any; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:185\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleChatPopup\n                        \n                    \n                \n            \n            \n                \ntoggleChatPopup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:459\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateChatMetadata\n                        \n                    \n                \n            \n            \n                \nupdateChatMetadata(question_event?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:428\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question_event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatecurrentView\n                        \n                    \n                \n            \n            \n                \nupdatecurrentView(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:292\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProgress\n                        \n                    \n                \n            \n            \n                \nupdateProgress()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:337\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chatbotService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ChatbotService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chatHistory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChatMessage[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chatMetadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChatMetadata\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chatOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentView\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n    type: 'subtopic', // 'subtopic', 'exercise', or 'exam'\n    id: '', // ID of the current subtopic, exercise question, or exam question\n    content: {} // Content to display based on the current view\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lessonService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LessonService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subjectContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subjectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subjectService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SubjectsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/lesson-page/lesson-page.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, inject, OnInit, signal } from '@angular/core';\nimport { Header } from '../../../shared/components/header/header';\nimport { Sidebar } from '../sidebar/sidebar';\nimport { Chatbot } from '../chatbot/chatbot';\nimport { Subtopic } from '../subtopic/subtopic';\nimport { Practice } from \"../practice/practice\";\nimport { SubjectsService } from '../../../core/services/subjects.service';\nimport { LessonService } from '../../../core/services/lesson.service';\nimport { ChatMetadata } from '../../../core/models/chat-metadata.model';\nimport { ChatbotService } from '../../../core/services/chatbot.service';\nimport { forkJoin, map, switchMap } from 'rxjs';\nimport { ChatMessage } from '../../../core/models/chat-message.model';\n\n@Component({\n  selector: 'app-lesson-page',\n  imports: [Header, Sidebar, Chatbot, Subtopic, Practice],\n  templateUrl: './lesson-page.html',\n  styleUrl: './lesson-page.css'\n})\nexport class LessonPage implements OnInit {\n  subjectId: string;\n  chatMetadata: ChatMetadata = {};\n  subjectContent: any = {};\n  currentView: any = {\n    type: 'subtopic', // 'subtopic', 'exercise', or 'exam'\n    id: '', // ID of the current subtopic, exercise question, or exam question\n    content: {} // Content to display based on the current view\n  }\n  chatHistory: ChatMessage[] = [];\n  chatOpen = false;\n  subjectService = inject(SubjectsService)\n  lessonService = inject(LessonService)\n  chatbotService = inject(ChatbotService)\n\n  // subjectContent: any = {\n  //   subject_name: 'Geography',\n  //   topics: [\n  //     {\n  //       expanded: false,\n  //       id: 't1',\n  //       title: 'Intro to Geography',\n  //       completed: false,\n  //       subtopics: [\n  //         {\n  //           id: 's1-t1',\n  //           title: 'Geography Basics',\n  //           content: 'Geography is the study of places and the relationships between people and their environments.',\n  //           read: true\n  //         },\n  //         {\n  //           id: 's2-t1',\n  //           title: 'World Capitals',\n  //           content: 'A capital city is the most important city in a country, often where the government is located.',\n  //           read: false\n  //         },\n  //         {\n  //           id: 's3-t1',\n  //           title: 'Physical Geography',\n  //           content: 'Physical geography focuses on the natural environment, including landforms, climates, and ecosystems.',\n  //           read: false\n  //         }\n  //       ],\n  //       exercise: {\n  //         id: 'et1',\n  //         score: null,\n  //         questions: [\n  //           {\n  //             question_id: 'q1-et1',\n  //             question_text: 'What is the capital of France?',\n  //             question_type: 'multiple choice',\n  //             options: [\n  //               { option_id: '1', option_text: 'Paris', is_correct: true, selected: false },\n  //               { option_id: '2', option_text: 'London', is_correct: false, selected: false },\n  //               { option_id: '3', option_text: 'Berlin', is_correct: false, selected: false },\n  //               { option_id: '4', option_text: 'Madrid', is_correct: false, selected: false }\n  //             ]\n  //           },\n  //           {\n  //             question_id: 'q2-et1',\n  //             question_text: 'Which of these are oceans on earth?',\n  //             question_type: 'multiple selection',\n  //             options: [\n  //               { option_id: '1', option_text: 'Atlantic Ocean', is_correct: true, selected: false },\n  //               { option_id: '2', option_text: 'Pacific Ocean', is_correct: true, selected: false },\n  //               { option_id: '3', option_text: 'Amazon River', is_correct: false, selected: false },\n  //               { option_id: '4', option_text: 'Nile River', is_correct: false, selected: false }\n  //             ]\n  //           },\n  //           {\n  //             question_id: 'q3-et1',\n  //             question_text: 'Describe the importance of studying geography in understanding global issues.',\n  //             question_type: 'essay',\n  //           }\n  //         ]\n  //       }\n  //     },\n  //     {\n  //       expanded: false,\n  //       id: 't2',\n  //       title: 'Physical Geography',\n  //       completed: true,\n  //       subtopics: [\n  //         {\n  //           id: 's1-t2',\n  //           title: 'Climate Zones',\n  //           content: 'Climate zones are regions of the world with distinct weather patterns and temperatures.',\n  //           read: true\n  //         },\n  //         {\n  //           id: 's2-t2',\n  //           title: 'Human Geography',\n  //           content: 'Human geography studies how humans interact with the environment and how cultures vary across regions.',\n  //           read: true\n  //         }\n  //       ],\n  //       exercise: {\n  //         id: 'et2',\n  //         score: 2,\n  //         questions: [\n  //           {\n  //             question_id: 'q1-et2',\n  //             question_text: 'What are the main climate zones of the world?',\n  //             question_type: 'multiple selection',\n  //             options: [\n  //               { option_id: '1', option_text: 'Tropical', is_correct: true, selected: true },\n  //               { option_id: '2', option_text: 'Arctic', is_correct: true, selected: true },\n  //               { option_id: '3', option_text: 'Desert', is_correct: true, selected: true },\n  //               { option_id: '4', option_text: 'Mountainous', is_correct: false, selected: false }\n  //             ]\n  //           },\n  //           {\n  //             question_id: 'q2-et2',\n  //             question_text: 'Explain how human activities impact the environment.',\n  //             question_type: 'essay',\n  //             answer: 'Human activities such as deforestation, pollution, and urbanization significantly impact the environment by altering ecosystems, contributing to climate change, and reducing biodiversity.'\n  //           }\n  //         ]\n  //       }\n  //     }\n  //   ],\n  //   exam: {\n  //     id: 'e1',\n  //     score: null,\n  //     questions: [\n  //       {\n  //         question_id: 'q1-e1',\n  //         question_text: 'What is the largest continent on Earth?',\n  //         question_type: 'multiple choice',\n  //         options: [\n  //           { option_id: '1', option_text: 'Asia', is_correct: true, selected: false },\n  //           { option_id: '2', option_text: 'Africa', is_correct: false, selected: false },\n  //           { option_id: '3', option_text: 'North America', is_correct: false, selected: false },\n  //           { option_id: '4', option_text: 'Europe', is_correct: false, selected: false }\n  //         ]\n  //       },\n  //       {\n  //         question_id: 'q2-e1',\n  //         question_text: 'Describe the water cycle and its significance in geography.',\n  //         question_type: 'essay',\n  //         answer: null\n  //       }\n  //     ]\n  //   }\n  // }\n  // chatHistory = [\n  //   {\n  //     sender: \"user\",\n  //     message: \"Hello\",\n  //     timestamp: \"\"\n  //   },\n  //   {\n  //     sender: \"assistant\",\n  //     message: \"Hi there, how can I help you?\",\n  //     timestamp: \"\"\n  //   },\n  // ]\n\n  constructor(private cdr: ChangeDetectorRef) {\n    // Extract subjectId from the route parameters\n    const url = window.location.pathname;\n    const parts = url.split('/');\n    this.subjectId = parts[parts.length - 1]; // Assuming the last part is the subjectId\n  }\n\n  ngOnInit(): void {\n    // Fetch chat history\n    this.chatbotService.getChatHistory(this.subjectId).subscribe({\n      next: (response) => {\n        this.chatHistory = response.history;\n      }, error(err) {\n        console.error(`Error fetching chat history ${err}`)\n      },\n    });\n\n\n    // 1. Fetch all subjects first\n    this.subjectService.getAllSubjects().pipe(\n      map((res: any) => res.sessions || []), // unwrap sessions array\n      map((subjects: any[]) => subjects.find(s => s.id === this.subjectId)), // pick current subject\n      switchMap((subject) => {\n        if (!subject) throw new Error('Subject not found');\n        \n        this.subjectContent = {\n          subject_name: subject.name,\n          topics: [],\n          exam: null\n        };\n  \n        // 2. Fetch topics for this subject\n        return this.lessonService.getAllTopics(this.subjectId);\n      }),\n      switchMap((res: any) => {\n        const topicsResponse = res.topics || []; // unwrap topics array\n  \n        // Shape topics\n        const topics = topicsResponse.filter((topic: any) => topic.selected).map((topic: any) => ({\n          expanded: false,\n          id: topic.id,\n          title: topic.title,\n          completed: topic.completed,\n          subtopics: [],\n          exercise: null\n        }));\n        this.subjectContent.topics = topics;\n  \n        // 3. For each topic fetch subtopics + exercise in parallel\n        const topicRequests = topics.map((topic: any) =>\n          forkJoin({\n            subtopics: this.lessonService.getAllSubtopics(topic.id).pipe(\n              map((r: any) => r.subtopics || [])\n            ),\n            exercise: this.lessonService.getExercise(topic.id).pipe(\n              map((r: any) => r.exercise || null)\n            )\n          }).pipe(\n            map((res) => {\n              topic.subtopics = res.subtopics;\n              topic.exercise = res.exercise;\n              console.log(topic.exercise)\n              return topic;\n            })\n          )\n        );\n  \n        return forkJoin(topicRequests); // wait for all topics to finish loading\n      }),\n      switchMap(() => {\n        // 4. Finally fetch exam\n        return this.lessonService.getExam(this.subjectId).pipe(\n          map((res: any) => {\n            this.subjectContent.exam = res.exam || null; // unwrap exam\n            return res.exam;\n          })\n        );\n      })\n    ).subscribe({\n      next: () => {\n        // ✅ Everything loaded, now set initial view\n        for (let topic of this.subjectContent.topics) {\n          if (!topic.completed) {\n            const unreadSubtopic = topic.subtopics.find((st: any) => !st.read);\n            if (unreadSubtopic) {\n              this.updatecurrentView({ id: unreadSubtopic.id, type: 'subtopic' });\n              break;\n            } else if (topic.exercise && topic.exercise.score === null) {\n              this.updatecurrentView({ id: topic.exercise.id, type: 'exercise' });\n              break;\n            }\n          }\n        }\n  \n        // If still nothing, set exam or fallback\n        if (!this.currentView.id && this.subjectContent.exam) {\n          this.updatecurrentView({ id: this.subjectContent.exam.id, type: 'exam' });\n        } else if (!this.currentView.id) {\n          const firstTopic = this.subjectContent.topics[0];\n          if (firstTopic && firstTopic.subtopics.length > 0) {\n            this.updatecurrentView({ id: firstTopic.subtopics[0].id, type: 'subtopic' });\n          }\n        }\n  \n        this.cdr.detectChanges();\n      },\n      error: (err) => {\n        console.error('Failed to initialize subject content:', err);\n      }\n    });\n  }\n  \n  \n  //\n  updatecurrentView(event: any) {\n    let content = null;\n\n    if (event.type === 'subtopic') {\n      content = this.subjectContent.topics\n        .flatMap((topic: any) => topic.subtopics)\n        .find((subtopic: any)=> subtopic.id === event.id) || {};\n      // check for completed topic\n      } else if (event.type === 'exercise') {\n        content = this.subjectContent.topics\n        .flatMap((topic: any) => topic.exercise)\n        .find((exercise: any) => exercise.id === event.id) || {};\n      } else if (event.type === 'exam') {\n        content = this.subjectContent.exam\n      }\n      \n    this.currentView = {\n      id: event.id,\n      type: event.type,\n      content: content\n    }\n\n    if (event.type === 'subtopic') {\n      this.updateChatMetadata();\n\n      // mark subtopic as read\n      const topic_id = this.getTopicDataFromSubtopic().id\n      this.lessonService.markSubtopicAsRead(topic_id, event.id).subscribe({\n        next: () => {\n          this.subjectContent.topics\n          .find((topic: any) => topic.id == topic_id).subtopics\n          .find((subtopic: any) => subtopic.id == event.id)\n          .read = true\n          this.updateProgress()\n          this.checkForTopicCompleteness(topic_id)\n        }, error(err) {\n          console.error(`Failed to mark subtopic as read: ${err}`)\n        },\n      });\n    } else if (this.chatOpen && (this.currentView.content.score == null)){\n      this.chatOpen = false;\n    }\n    console.log(this.currentView)\n  }\n\n  updateProgress() {\n    let total = 0;\n    let completed = 0;\n  \n    // --- Loop through topics ---\n    this.subjectContent.topics.forEach((topic: any) => {\n      // Count subtopics\n      if (topic.subtopics?.length) {\n        total += topic.subtopics.length;\n        completed += topic.subtopics.filter((st: any) => st.read).length;\n      }\n  \n      // Count exercise (each topic has exactly one exercise object)\n      if (topic.exercise) {\n        total += 1;\n        if (topic.exercise.score !== null && topic.exercise.score !== undefined) {\n          completed += 1;\n        }\n      }\n    });\n  \n    // --- Count exam (only one per subjectContent) ---\n    if (this.subjectContent.exam) {\n      total += 1;\n      if (this.subjectContent.exam.score !== null && this.subjectContent.exam.score !== undefined) {\n        completed += 1;\n      }\n    }\n  \n    // Calculate percentage\n    const fraction = (completed / total)\n    this.subjectService.updateSessionProgress(this.subjectId, fraction).subscribe({\n      next: () => {\n        console.log(\"Progress updated successfully\")\n        const percentage = total > 0 ? Math.round(fraction * 100) : 0;\n        console.log(`Progress: ${completed}/${total} (${percentage}%)`);\n      }, error(err) {\n        console.error(`Failed to update progress: ${err}`)\n      },\n    });\n  }  \n  \n  //\n  getTopicDataFromSubtopic() {\n    const topicData = this.subjectContent.topics.find((topic: any) => topic.subtopics.some((subtopic: any) => subtopic.id === this.currentView.id));\n    return { id: topicData?.id, title: topicData?.title};\n  }\n\n  //\n  getTopicDataFromExercise() {\n    const topicData = this.subjectContent.topics.find((topic: any) => topic.exercise && topic.exercise.id === this.currentView.id);\n    return { id: topicData?.id, title: topicData?.title};\n  }\n\n  //\n  checkForTopicCompleteness(topic_id: string) {\n    const topic = this.subjectContent.topics.find((t: any) => t.id === topic_id);\n  \n    if (!topic) return; // no topic found\n  \n    const allSubtopicsRead = Array.isArray(topic.subtopics) \n      ? topic.subtopics.every((st: any) => st.read) \n      : false;\n  \n    const hasExerciseScore = topic.exercise\n      ? topic.exercise.score !== null\n      : true;\n  \n    topic.completed = allSubtopicsRead && hasExerciseScore;\n  }\n\n  // Updates the current view to the previous or next subtopic\n  changeSubtopic(event: any) {\n    const id = event.id\n    const direction = event.direction;\n\n    const topic = this.subjectContent.topics.find((t: any) => t.id === id);\n    if (!topic) return;\n\n    const subtopics = topic.subtopics;\n    const currentIndex = subtopics.findIndex((s: any) => s.id === this.currentView.id);\n    if (currentIndex === -1) return;\n\n    let newIndex = currentIndex + (direction === 'next' ? 1 : -1);\n    if (newIndex = subtopics.length) newIndex = subtopics.length - 1; // Caps next subtopic at last subtopic\n\n    this.updatecurrentView({ id: subtopics[newIndex].id, type: 'subtopic'})\n  }\n\n  //\n  updateChatMetadata(question_event? : any) {\n    if (this.currentView.type === 'subtopic') {\n      const topicData = this.getTopicDataFromSubtopic()\n      this.chatMetadata.topic_id = topicData.id\n      this.chatMetadata.topic_name = topicData.title\n      this.chatMetadata.sub_topic_id = this.currentView.id\n      this.chatMetadata.sub_topic_name = this.currentView.content.title\n      this.chatMetadata.exercise_id = null\n      this.chatMetadata.exam_id = null\n      this.chatMetadata.question_id = null\n    } else if (this.currentView.type === 'exercise') {\n      const topicData = this.getTopicDataFromExercise()\n      this.chatMetadata.topic_id = topicData.id\n      this.chatMetadata.topic_name = topicData.title\n      this.chatMetadata.sub_topic_id = null\n      this.chatMetadata.sub_topic_name = null\n      this.chatMetadata.exercise_id = this.currentView.id\n      this.chatMetadata.exam_id = null\n      this.chatMetadata.question_id = question_event.id\n    } else if (this.currentView.type === 'exam') {\n      this.chatMetadata.topic_id = null\n      this.chatMetadata.topic_name = null\n      this.chatMetadata.sub_topic_id = null\n      this.chatMetadata.sub_topic_name = null\n      this.chatMetadata.exercise_id = null\n      this.chatMetadata.exam_id = this.currentView.id\n      this.chatMetadata.question_id = question_event.id\n    }\n  }\n\n  //\n  toggleChatPopup() {\n    this.chatOpen = !this.chatOpen\n    console.log(\"chat toggled\")\n  }\n\n  capitalizeFirstLetter(str: string) {\n    return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n  }\n}\n\n    \n\n    \n        \n\n\n@if (currentView.type === 'exercise' || currentView.type === 'exam') {\n  \n    \n      \n        Practice {{capitalizeFirstLetter(currentView.type)}} for {{(currentView.type === 'exercise') ? getTopicDataFromExercise().title : subjectContent.subject_name}}\n      \n      \n        {{ currentView.content.questions.length }} Question{{(currentView.content.questions.length > 1) ? 's' : '' }}\n      \n      These questions will help reinforce your understanding. Take your time to answer all the questions.\n    \n    \n      Score:\n      \n        @if (!(currentView.content.score == null)) {\n          {{currentView.content.score}} / {{currentView.content.questions.length}}\n        } @else {\n          Not Graded\n        }\n      \n    \n  \n}\n\n\n  \n\n  \n    @if (currentView.type === 'subtopic') {\n      \n    }\n    @if (currentView.type === 'exercise' || currentView.type === 'exam') {\n      \n    }\n  \n\n  \n\n\n\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (currentView.type === \\'exercise\\' || currentView.type === \\'exam\\') {                    Practice {{capitalizeFirstLetter(currentView.type)}} for {{(currentView.type === \\'exercise\\') ? getTopicDataFromExercise().title : subjectContent.subject_name}}                    {{ currentView.content.questions.length }} Question{{(currentView.content.questions.length > 1) ? \\'s\\' : \\'\\' }}            These questions will help reinforce your understanding. Take your time to answer all the questions.              Score:              @if (!(currentView.content.score == null)) {          {{currentView.content.score}} / {{currentView.content.questions.length}}        } @else {          Not Graded        }            }        @if (currentView.type === \\'subtopic\\') {          }    @if (currentView.type === \\'exercise\\' || currentView.type === \\'exam\\') {          }      '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'LessonPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LessonService.html":{"url":"injectables/LessonService.html","title":"injectable - LessonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  LessonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/lesson.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllSubtopics\n                            \n                            \n                                getAllTopics\n                            \n                            \n                                getExam\n                            \n                            \n                                getExercise\n                            \n                            \n                                markSubtopicAsRead\n                            \n                            \n                                saveExamScore\n                            \n                            \n                                saveExerciseScore\n                            \n                            \n                                scoreEssayQuestion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllSubtopics\n                        \n                    \n                \n            \n            \n                \ngetAllSubtopics(topicId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/lesson.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                topicId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllTopics\n                        \n                    \n                \n            \n            \n                \ngetAllTopics(sessionId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/lesson.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getExam\n                        \n                    \n                \n            \n            \n                \ngetExam(sessionId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/lesson.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getExercise\n                        \n                    \n                \n            \n            \n                \ngetExercise(topicId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/lesson.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                topicId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markSubtopicAsRead\n                        \n                    \n                \n            \n            \n                \nmarkSubtopicAsRead(topicId: string, subtopicId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/lesson.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                topicId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                subtopicId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveExamScore\n                        \n                    \n                \n            \n            \n                \nsaveExamScore(sessionId?: string, examId?: string, score?: number, questionData?: SaveQuestionData[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/lesson.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                examId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                score\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                questionData\n                                            \n                                                            SaveQuestionData[]\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveExerciseScore\n                        \n                    \n                \n            \n            \n                \nsaveExerciseScore(topicId?: string | null, exerciseId?: string, score?: number, questionData?: SaveQuestionData[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/lesson.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                topicId\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                exerciseId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                score\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                questionData\n                                            \n                                                            SaveQuestionData[]\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scoreEssayQuestion\n                        \n                    \n                \n            \n            \n                \nscoreEssayQuestion(sessionId?: string, questionId?: string, answer?: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/lesson.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                questionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                answer\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpBaseService)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/lesson.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpBaseService } from './http-base.service';\nimport { SaveQuestionData } from '../models/question.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LessonService {\n  http = inject(HttpBaseService);\n\n  getAllTopics(sessionId: string): Observable {\n    return this.http.get(`topic/${sessionId}/list`);\n  }\n\n  getAllSubtopics(topicId: string): Observable {\n    return this.http.get(`topic/${topicId}/get-content`);\n  }\n\n  getExercise(topicId: string): Observable {\n    return this.http.get(`topic/${topicId}/get-exercise`);\n  }\n\n  getExam(sessionId: string): Observable {\n    return this.http.get(`session/${sessionId}/get-exam`);\n  }\n\n  scoreEssayQuestion(sessionId?: string, questionId?: string, answer?: string | null): Observable {\n    return this.http.post(`chatbot/answer-question`, { session_id: sessionId, question_id: questionId, answer });\n  }\n\n  markSubtopicAsRead(topicId: string, subtopicId: string): Observable {\n    return this.http.put(`topic/${topicId}/mark-as-read`, { subtopic_id: subtopicId });\n  }\n\n  saveExerciseScore(topicId?: string | null, exerciseId?: string, score?: number, questionData?: SaveQuestionData[]): Observable {\n    return this.http.put(`topic/${topicId}/save-exercise-score`, { exercise_id: exerciseId, score, question_data: questionData });\n  }\n\n  saveExamScore(sessionId?: string, examId?: string, score?: number, questionData?: SaveQuestionData[]): Observable {\n    return this.http.put(`session/${sessionId}/save-exam-score`, { exam_id: examId, score, question_data: questionData });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Login.html":{"url":"components/Login.html","title":"component - Login","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  Login\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/auth/login/login.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authService\n                            \n                            \n                                email\n                            \n                            \n                                    \n                                emailCtrl\n                            \n                            \n                                loading\n                            \n                            \n                                notify\n                            \n                            \n                                password\n                            \n                            \n                                    \n                                passwordCtrl\n                            \n                            \n                                passwordVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                            \n                                togglePasswordVisibility\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/auth/login/login.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/auth/login/login.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePasswordVisibility\n                        \n                    \n                \n            \n            \n                \ntogglePasswordVisibility()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/auth/login/login.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/login/login.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/login/login.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        emailCtrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('emailCtrl')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/login/login.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/login/login.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notify\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(NotificationService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/login/login.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/login/login.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        passwordCtrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('passwordCtrl')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/login/login.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"password\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/login/login.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, ViewChild } from '@angular/core';\nimport { FormsModule, NgModel } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../../core/services/auth.service';\nimport { NotificationService } from '../../../core/services/notification.service'; //  {\n          console.log('Login successful', response);\n          localStorage.setItem('accessToken', response.accessToken);\n          localStorage.setItem('refreshToken', response.refreshToken);\n          const user = response.user;\n          console.log('Logged in user:', user);\n          this.router.navigate(['/dashboard']);\n        },\n        error: (error) => {\n          console.error('Login failed', error);\n          this.notify.showError('Invalid email or password');\n        }\n      });\n    }\n    this.loading = false;\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n      Maestro\n    \n    Welcome Back!\n    Access your personalized lessons and materials.\n    \n      \n      \n        Email Address\n        \n        \n        @if (emailCtrl.invalid && emailCtrl.touched) {\n          \n            @if (emailCtrl.errors?.['required']) {Email is required}\n            @if (emailCtrl.errors?.['email']) {Invalid email format}\n          \n        }\n      \n\n      \n      \n        Password\n        \n        \n        @if (passwordCtrl.invalid && passwordCtrl.touched) {\n          \n            Password is required\n          \n        }\n        \n          \n        \n      \n\n      \n        Next\n      \n    \n    \n      New to Maestro? Sign Up!\n    \n  \n  \n  \n    \n    \n      \n      Maestro\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Maestro        Welcome Back!    Access your personalized lessons and materials.                        Email Address                        @if (emailCtrl.invalid && emailCtrl.touched) {                      @if (emailCtrl.errors?.[\\'required\\']) {Email is required}            @if (emailCtrl.errors?.[\\'email\\']) {Invalid email format}                  }                          Password                        @if (passwordCtrl.invalid && passwordCtrl.touched) {                      Password is required                  }                                              Next                    New to Maestro? Sign Up!                              Maestro      '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'Login'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginPayload.html":{"url":"interfaces/LoginPayload.html","title":"interface - LoginPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/auth-payload.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserModel } from \"./user.model\";\n\nexport interface LoginPayload {\n  email: string;\n  password: string;\n}\n\nexport interface LoginResponse {\n  user: UserModel;\n  accessToken: string;\n  refreshToken: string;\n}\n\nexport interface SignupPayload {\n  name: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nexport interface VerifyEmailResponse {\n  success: boolean;\n  message: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginResponse.html":{"url":"interfaces/LoginResponse.html","title":"interface - LoginResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/auth-payload.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         UserModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserModel } from \"./user.model\";\n\nexport interface LoginPayload {\n  email: string;\n  password: string;\n}\n\nexport interface LoginResponse {\n  user: UserModel;\n  accessToken: string;\n  refreshToken: string;\n}\n\nexport interface SignupPayload {\n  name: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nexport interface VerifyEmailResponse {\n  success: boolean;\n  message: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/MarkdownPipe.html":{"url":"pipes/MarkdownPipe.html","title":"pipe - MarkdownPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  MarkdownPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/markdown-pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        markdown\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pipes/markdown-pipe.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | null | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     SafeHtml\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        md\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new MarkdownIt({ html: true, linkify: true, typographer: true })\n    .use(markdownItKatex)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/pipes/markdown-pipe.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport MarkdownIt from 'markdown-it';\nimport markdownItKatex from 'markdown-it-katex';\n\n@Pipe({\n  name: 'markdown',\n  standalone: true\n})\nexport class MarkdownPipe implements PipeTransform {\n  private md = new MarkdownIt({ html: true, linkify: true, typographer: true })\n    .use(markdownItKatex);\n\n  constructor(private sanitizer: DomSanitizer) {}\n\n  transform(value: string | null | undefined): SafeHtml {\n    if (!value) return '';\n    const html = this.md.render(value);\n    return this.sanitizer.bypassSecurityTrustHtml(html);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NamingUpload.html":{"url":"components/NamingUpload.html","title":"component - NamingUpload","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  NamingUpload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/subject-create/naming-upload/naming-upload.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-naming-upload\n            \n\n\n            \n                imports\n                \n                                Header\n                                CreationStepTab\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./naming-upload.html\n            \n\n\n\n            \n                styleUrl\n                ./naming-upload.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                files\n                            \n                            \n                                isDragging\n                            \n                            \n                                loading\n                            \n                            \n                                notify\n                            \n                            \n                                subjectName\n                            \n                            \n                                subjectService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addFiles\n                            \n                            \n                                formatFileSize\n                            \n                            \n                                onDragLeave\n                            \n                            \n                                onDragOver\n                            \n                            \n                                onFileDrop\n                            \n                            \n                                onFileSelect\n                            \n                            \n                                onSubmit\n                            \n                            \n                                removeFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/subject-create/naming-upload/naming-upload.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        addFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFiles(fileList: FileList)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/subject-create/naming-upload/naming-upload.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileList\n                                            \n                                                        FileList\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatFileSize\n                        \n                    \n                \n            \n            \n                \nformatFileSize(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/subject-create/naming-upload/naming-upload.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDragLeave\n                        \n                    \n                \n            \n            \n                \nonDragLeave(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/subject-create/naming-upload/naming-upload.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDragOver\n                        \n                    \n                \n            \n            \n                \nonDragOver(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/subject-create/naming-upload/naming-upload.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFileDrop\n                        \n                    \n                \n            \n            \n                \nonFileDrop(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/subject-create/naming-upload/naming-upload.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFileSelect\n                        \n                    \n                \n            \n            \n                \nonFileSelect(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/subject-create/naming-upload/naming-upload.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/subject-create/naming-upload/naming-upload.ts:94\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFile\n                        \n                    \n                \n            \n            \n                \nremoveFile(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/subject-create/naming-upload/naming-upload.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        files\n                        \n                    \n                \n            \n                \n                    \n                        Type :     File[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/naming-upload/naming-upload.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDragging\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/naming-upload/naming-upload.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/naming-upload/naming-upload.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notify\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(NotificationService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/naming-upload/naming-upload.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subjectName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/naming-upload/naming-upload.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subjectService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SubjectsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/naming-upload/naming-upload.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { Header } from '../../../shared/components/header/header';\nimport { Router } from '@angular/router';\nimport { CreationStepTab } from '../creation-step-tab/creation-step-tab';\nimport { FormsModule } from '@angular/forms';\nimport { SubjectsService } from '../../../core/services/subjects.service';\nimport { NotificationService } from '../../../core/services/notification.service'; //  {\n      if (allowedTypes.includes(file.type)) {\n        validFiles.push(file);\n      } else {\n        invalidFiles.push(file.name);\n      }\n    });\n\n    if (invalidFiles.length) {\n      this.notify.showError(\n        `Unsupported file types: ${invalidFiles.join(', ')}`\n      );\n    }\n    if (validFiles.length) {\n      this.files = [...this.files, ...validFiles];\n      this.notify.showSuccess(`${validFiles.length} file(s) added.`);\n    }\n  }\n\n  removeFile(file: File) {\n    this.files = this.files.filter((f) => f !== file);\n  }\n\n  formatFileSize(file: File) {\n    let size: any = file.size;\n    let end = null;\n    if (size >= 1_000_000) {\n      size /= 1_000_000;\n      size = size.toFixed(3);\n      end = 'MB';\n    } else if (size >= 1_000) {\n      size /= 1_000;\n      size = size.toFixed(3);\n      end = 'KB';\n    } else {\n      end = 'B';\n    }\n    return `${size} ${end}`;\n  }\n\n  onSubmit() {\n    this.loading = true;\n    if (this.subjectName.trim() === '') {\n      this.notify.showError('Subject name is required');\n      this.loading = false;\n      return;\n    }\n    if (this.files.length === 0) {\n      this.notify.showError('At least one file must be uploaded');\n      this.loading = false;\n      return;\n    }\n\n    // Here you would typically send the data to the backend\n    console.log('Subject Name:', this.subjectName);\n    console.log('Files:', this.files);\n    console.log('Stage 0' + this.loading);\n\n    // Create subject\n    this.subjectService.createSubject(this.subjectName).subscribe({\n      next: (response) => {\n        console.log('Stage 1' + this.loading);\n        console.log(response);\n        const sessionId = response.session.id;\n\n        // Ingest documents\n        this.subjectService.ingestDocuments(sessionId, this.files).subscribe({\n          next: (ingestResponse) => {\n            console.log(ingestResponse);\n            console.log('Stage 2' + this.loading);\n\n            // Label documents with topics\n            this.subjectService.labelDocuments(sessionId).subscribe({\n              next: (labelResponse) => {\n                console.log('Stage 3' + this.loading);\n                console.log(labelResponse);\n                this.router.navigate([\n                  `/subject-create/${sessionId}/topic-preferences`,\n                ]);\n                this.loading = false;\n              },\n\n              error: (err) => {\n                console.error('Error labeling documents:', err);\n                this.notify.showError(\n                  'Failed to label documents. Please try again later.'\n                );\n                this.loading = false;\n              },\n            });\n          },\n\n          error: (err) => {\n            console.error('Error ingesting documents:', err);\n            this.notify.showError(\n              'Failed to upload documents. Please try again later.'\n            );\n            this.loading = false;\n          },\n        });\n      },\n\n      error: (err) => {\n        console.error('Error creating subject:', err);\n        this.notify.showError(\n          'Failed to create subject. Please try again later.'\n        );\n        this.loading = false;\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n    \n  \n  Create a new subject\n  \n    Subject Name\n    \n    \n    @if (nameCtrl.invalid && nameCtrl.touched) {\n      \n        @if (nameCtrl.errors?.['required']) {Subject Name cannot be empty}\n      \n    }\n\n    \n    \n      \n        \n      \n      \n      Upload your PDFs and DOCX files here to start generating personalized lessons for this subject.\n      JPG, PNG, PDF. Max file size: 25MB.\n    \n\n    \n    @if (files.length > 0) {\n      \n        Selected files:\n        \n          @for (file of files; track $index) {\n            \n              {{ file.name }}\n              ({{formatFileSize(file)}})\n              \n                \n                X\n              \n            \n          }\n        \n      \n    }\n\n    \n      Create New Subject\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Create a new subject      Subject Name            @if (nameCtrl.invalid && nameCtrl.touched) {              @if (nameCtrl.errors?.[\\'required\\']) {Subject Name cannot be empty}          }                                        Upload your PDFs and DOCX files here to start generating personalized lessons for this subject.      JPG, PNG, PDF. Max file size: 25MB.            @if (files.length > 0) {              Selected files:                  @for (file of files; track $index) {                          {{ file.name }}              ({{formatFileSize(file)}})                                              X                                    }                  }          Create New Subject            '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'NamingUpload'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFound.html":{"url":"components/NotFound.html","title":"component - NotFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  NotFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/not-found/not-found.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./not-found.html\n            \n\n\n\n            \n                styleUrl\n                ./not-found.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goHome\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/not-found/not-found.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goHome\n                        \n                    \n                \n            \n            \n                \ngoHome()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/not-found/not-found.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-not-found',\n  imports: [CommonModule],\n  templateUrl: './not-found.html',\n  styleUrl: './not-found.css'\n})\nexport class NotFound {\n  constructor(private router: Router) {}\n  goHome() {\n    this.router.navigateByUrl('/');\n  }\n}\n\n    \n\n    \n        \n  404\n  Page not found\n  \n    Back to Home\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  404  Page not found      Back to Home  '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotFound'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/notification.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _timer\n                            \n                            \n                                message\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                show\n                            \n                            \n                                showError\n                            \n                            \n                                showSuccess\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/notification.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow(type: NoticeType, msg: string, ms: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/notification.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            NoticeType\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                msg\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                ms\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    4000\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n            \n                \nshowError(msg: string, ms: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/notification.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                msg\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                ms\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    5000\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccess\n                        \n                    \n                \n            \n            \n                \nshowSuccess(msg: string, ms: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/notification.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                msg\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                ms\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    2500\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _timer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/notification.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/notification.service.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/notification.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\n\nexport type NoticeType = 'success' | 'error' | 'info' | 'warn';\n\n@Injectable({ providedIn: 'root' })\nexport class NotificationService {\n  message = signal(null);\n  type = signal(null);\n  private _timer?: number;\n\n  show(type: NoticeType, msg: string, ms = 4000) {\n    this.type.set(type);\n    this.message.set(msg);\n    clearTimeout(this._timer);\n    this._timer = window.setTimeout(() => this.clear(), ms) as any;\n  }\n\n  showError(msg: string, ms = 5000) { this.show('error', msg, ms); }\n  showSuccess(msg: string, ms = 2500) { this.show('success', msg, ms); }\n  clear() { this.message.set(null); this.type.set(null); }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/PasswordValidator.html":{"url":"directives/PasswordValidator.html","title":"directive - PasswordValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Directives\n  PasswordValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/password-validator.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                PasswordValidator\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [appPasswordValidator]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/directives/password-validator.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidationErrors | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl, ValidationErrors } from '@angular/forms';\n\n@Directive({\n  selector: '[appPasswordValidator]',\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      useExisting: PasswordValidator,\n      multi: true,\n    },\n  ],\n})\nexport class PasswordValidator implements Validator {\n  validate(control: AbstractControl): ValidationErrors | null {\n    if (!control.value) return null;\n\n    const regex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d!@#$%^&*()_+.,?-]{8,}$/;\n    return regex.test(control.value) ? null : { invalidPassword: true };\n    const pw = control.get('password')?.value;\n    const cpw = control.get('confirmPassword')?.value;\n    return pw === cpw ? null : { passwordMismatch: true };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Plan.html":{"url":"interfaces/Plan.html","title":"interface - Plan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Plan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/subscription.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            durationDays\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            maxSubjects\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        durationDays\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        durationDays:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxSubjects\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxSubjects:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Plan {\n  id: string;\n  name: string;\n  price: number;\n  maxSubjects: number;\n  durationDays: number;\n}\n\nexport interface SubscriptionStatus {\n  plan: Plan;\n  startedAt: string;\n  expiresAt: string;\n  isActive: boolean;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Practice.html":{"url":"components/Practice.html","title":"component - Practice","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  Practice\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/lesson/practice/practice.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-practice\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                            MarkdownPipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./practice.html\n            \n\n\n\n            \n                styleUrl\n                ./practice.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lessonService\n                            \n                            \n                                loading\n                            \n                            \n                                question\n                            \n                            \n                                    Private\n                                updateOnInputChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                autoResize\n                            \n                            \n                                cycleQuestion\n                            \n                            \n                                getQuestionNumber\n                            \n                            \n                                submitAnswers\n                            \n                            \n                                toggleSelectOption\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentView\n                            \n                            \n                                subjectId\n                            \n                            \n                                topicId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changeProgress\n                            \n                            \n                                changeQuestion\n                            \n                            \n                                exerciseCompleted\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentView\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/lesson/practice/practice.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        subjectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/lesson/practice/practice.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        topicId\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/lesson/practice/practice.ts:17\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changeProgress\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/lesson/practice/practice.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        changeQuestion\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/lesson/practice/practice.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        exerciseCompleted\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/lesson/practice/practice.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        autoResize\n                        \n                    \n                \n            \n            \n                \nautoResize(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/practice/practice.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cycleQuestion\n                        \n                    \n                \n            \n            \n                \ncycleQuestion(direction: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/practice/practice.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                direction\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getQuestionNumber\n                        \n                    \n                \n            \n            \n                \ngetQuestionNumber()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/practice/practice.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitAnswers\n                        \n                    \n                \n            \n            \n                \nsubmitAnswers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/practice/practice.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSelectOption\n                        \n                    \n                \n            \n            \n                \ntoggleSelectOption(id: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/practice/practice.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        lessonService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LessonService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/practice/practice.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/practice/practice.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/practice/practice.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateOnInputChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : effect(() => {\n    const view = this.currentView(); // \n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lesson/practice/practice.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, effect, inject, input, OnInit, output, SimpleChanges } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { QuestionModel, SaveQuestionData } from '../../../core/models/question.model';\nimport { LessonService } from '../../../core/services/lesson.service';\nimport { catchError, forkJoin, Observable, of, switchMap, take, tap } from 'rxjs';\nimport { MarkdownPipe } from '../../../shared/pipes/markdown-pipe';\n\n@Component({\n  selector: 'app-practice',\n  imports: [FormsModule, MarkdownPipe],\n  templateUrl: './practice.html',\n  styleUrl: './practice.css'\n})\nexport class Practice {\n  currentView = input();\n  subjectId = input();\n  topicId = input()\n  changeQuestion = output();\n  exerciseCompleted = output();\n  changeProgress = output();\n  question: any;\n  loading = false;\n  lessonService = inject(LessonService)\n\n  // This will run any time currentView changes\n  private updateOnInputChange = effect(() => {\n    const view = this.currentView(); //  q.id === this.question.id);\n\n    let newIndex = currentIndex + (direction === 'next' ? 1 : -1);\n    if (newIndex = this.currentView().content.questions.length) newIndex = this.currentView().content.questions.length - 1; // Caps next question at last question\n\n    this.question = this.currentView().content.questions[newIndex]\n    console.log(this.question)\n    this.changeQuestion.emit({id: this.question.id})\n  }\n\n  getQuestionNumber() {\n    return this.currentView().content.questions.findIndex((q: any) => q.id === this.question.id) + 1;\n  }\n\n  toggleSelectOption(id: any) {\n    if (this.question.type === 'multiple choice') {\n      this.question.options.forEach((option: any) => {\n        option.selected = option.id === id;\n      });\n    } else if (this.question.type === 'multiple selection') {\n      const option = this.question.options.find((o: any) => o.id === id);\n      if (option) {\n        option.selected = !option.selected;\n      }\n    }\n    console.log(this.currentView()?.content?.questions.find((q: any) => q.id === this.question.id)?.options);\n  }\n\n  submitAnswers() {\n    const proceed = confirm(\"Are you sure you want to submit?\")\n    if (!proceed) return\n\n    this.loading = true;\n\n    let correctCount = 0;\n    let questionData: SaveQuestionData[] = [];\n\n    const essayCalls: Observable[] = [];\n\n    this.currentView().content.questions.forEach((question: QuestionModel) => {\n      let q: SaveQuestionData = {\n        id: question.id,\n        type: question.type,\n        options: [],\n        essay_answer: null,\n        essay_feedback: null\n      };\n\n      if (question.type === 'multiple choice' || question.type === 'multiple selection') {\n        const isCorrect = question.options?.every(opt => opt.selected === opt.correct);\n        if (isCorrect) correctCount++;\n        q.options = question.options?.map(opt => ({ id: opt.id, selected: opt.selected }));\n      } \n      \n      else if (question.type === 'essay') {\n        if (!question.essay_answer) question.essay_answer = \"\"\n        essayCalls.push(\n          this.lessonService.scoreEssayQuestion(this.subjectId(), question.id, question.essay_answer).pipe(\n            tap((value) => {\n              console.log(value)\n              if (value.correct) correctCount++;\n              q.essay_answer = question.essay_answer;\n              q.essay_feedback = question.essay_feedback = value.feedback;\n            }),\n            catchError(err => {\n              console.error(`Error scoring essay question: ${err}`);\n              return of(null);\n            })\n          )\n        );\n      }\n\n      questionData.push(q); // this might seem counterintuitive, but it actually does work with the async essay scoring, trust me bro, I asked gpt... I lied, it doesn't work\n    });\n\n    // save score observable\n    let saveCall$: Observable;\n    if (this.currentView().type === 'exercise') {\n      console.log(questionData)\n      saveCall$ = this.lessonService.saveExerciseScore(this.topicId(), this.currentView().id, correctCount, questionData).pipe(\n        tap(() => this.exerciseCompleted.emit(this.topicId()))\n        );\n    } else if (this.currentView().type === 'exam') {\n      console.log(questionData)\n      saveCall$ = this.lessonService.saveExamScore(this.subjectId(), this.currentView().id, correctCount, questionData);\n    } else {\n      saveCall$ = of(null);\n    }\n\n    // run essay scoring first, then save score\n    forkJoin(essayCalls.length > 0 ? essayCalls : [of(null)]).pipe(\n      switchMap(() => {\n        // Save final score into the currentView\n        this.currentView().content.score = correctCount;\n        return saveCall$;\n      })\n    ).subscribe({\n      next: () => {\n        this.changeProgress.emit({}); // Notify parent to refresh progress\n        this.loading = false; // ✅ only after scoring + saving\n      },\n      error: (err) => {\n        console.error('Failed to submit answers:', err);\n        this.loading = false;\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    Question {{getQuestionNumber()}}\n  \n  \n    \n    @if (question.type === 'essay') {\n      \n      @if (currentView().content.score) {\n        \n          Feedback: \n          \n        \n      }\n    } @else {\n      @for (option of question.options; track option.id) {\n        \n          \n          \n          \n        \n        @if (!(currentView().content.score == null)) {\n          \n            \n          \n        }\n      }\n    }\n  \n  \n  \n  \n    \n      \n      Previous\n    \n    \n      Next\n      \n    \n  \n\n  \n  \n    Submit\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Question {{getQuestionNumber()}}            @if (question.type === \\'essay\\') {            @if (currentView().content.score) {                  Feedback:                         }    } @else {      @for (option of question.options; track option.id) {                                                      @if (!(currentView().content.score == null)) {                                        }      }    }                        Previous              Next                    Submit  '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'Practice'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Pricing.html":{"url":"components/Pricing.html","title":"component - Pricing","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  Pricing\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/pricing/pricing.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pricing\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./pricing.html\n            \n\n\n\n            \n                styleUrl\n                ./pricing.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-pricing',\n  imports: [],\n  templateUrl: './pricing.html',\n  styleUrl: './pricing.css'\n})\nexport class Pricing {\n\n}\n\n    \n\n    \n        \n\n  \n    \n      Simple, Flexible Plans for\n      Every Learner\n    \n    \n      Start free, grow your study power as you go.\n    \n  \n\n  \n  \n    \n    \n      Starter\n      \n        ₦0/per month\n      \n      \n        Get started for free\n      \n      \n        For curious learners who want to try Maestro.\n      \n      \n      \n\n      \n        Features\n        \n          \n            \n            Create 2 personalized lessons each month\n          \n          \n            \n            Keep up to 5 lessons saved in your library\n          \n          \n            \n            Upload files up to 3MB each\n          \n        \n      \n    \n\n    \n    \n      \n      \n        \n          ★ Most Popular\n        \n      \n      Pro\n      \n        ₦6000/per month\n      \n      \n        Get Started\n      \n      \n        For consistent learners who need more flexibility.\n      \n      \n      \n        Features\n        \n          \n            \n            Unlock 8 lessons every month\n          \n          \n            \n            Store up to 20 lessons for easy access\n          \n          \n            \n            Upload documents up to 10MB\n          \n        \n      \n    \n\n    \n    \n      Premium\n      \n        ₦15,000/per month\n      \n      \n        Go Premium\n      \n      \n        For serious learners who want it all.\n      \n      \n      \n      \n        Features\n        \n          \n            \n            Generate up to 25 lessons per month\n          \n          \n            \n            Save 100 lessons in your personal library\n          \n          \n            \n            Upload files as large as 20MB\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Simple, Flexible Plans for      Every Learner              Start free, grow your study power as you go.                        Starter              ₦0/per month                    Get started for free                    For curious learners who want to try Maestro.                                Features                                          Create 2 personalized lessons each month                                            Keep up to 5 lessons saved in your library                                            Upload files up to 3MB each                                                                  ★ Most Popular                    Pro              ₦6000/per month                    Get Started                    For consistent learners who need more flexibility.                          Features                                          Unlock 8 lessons every month                                            Store up to 20 lessons for easy access                                            Upload documents up to 10MB                                          Premium              ₦15,000/per month                    Go Premium                    For serious learners who want it all.                                Features                                          Generate up to 25 lessons per month                                            Save 100 lessons in your personal library                                            Upload files as large as 20MB                              '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'Pricing'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QuestionModel.html":{"url":"interfaces/QuestionModel.html","title":"interface - QuestionModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QuestionModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/question.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            essay_answer\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            essay_feedback\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        essay_answer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        essay_answer:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        essay_feedback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        essay_feedback:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         QuestionOption[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         QuestionOption[] | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         QuestionType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         QuestionType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface QuestionOption {\n  id: string;\n  text: string;\n  correct: boolean;\n  selected: boolean;\n  explanation: string;\n}\n\nexport type QuestionType = 'multiple choice' | 'multiple selection' | 'essay';\n\nexport interface QuestionModel {\n  id: string;\n  text: string;\n  type: QuestionType;\n  options?: QuestionOption[] | null; // only for choice types\n  essay_answer?: string | null;\n  essay_feedback?: string | null;\n}\n\nexport interface SaveQuestionData {\n  id: string;\n  type: QuestionType;\n  options?: { id: string; selected: boolean }[] | null; // only for choice types\n  essay_answer?: string | null;\n  essay_feedback?: string | null;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QuestionOption.html":{"url":"interfaces/QuestionOption.html","title":"interface - QuestionOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QuestionOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/question.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            correct\n                                        \n                                \n                                \n                                        \n                                            explanation\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            selected\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        correct\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        correct:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        explanation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        explanation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface QuestionOption {\n  id: string;\n  text: string;\n  correct: boolean;\n  selected: boolean;\n  explanation: string;\n}\n\nexport type QuestionType = 'multiple choice' | 'multiple selection' | 'essay';\n\nexport interface QuestionModel {\n  id: string;\n  text: string;\n  type: QuestionType;\n  options?: QuestionOption[] | null; // only for choice types\n  essay_answer?: string | null;\n  essay_feedback?: string | null;\n}\n\nexport interface SaveQuestionData {\n  id: string;\n  type: QuestionType;\n  options?: { id: string; selected: boolean }[] | null; // only for choice types\n  essay_answer?: string | null;\n  essay_feedback?: string | null;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuestionSettings.html":{"url":"components/QuestionSettings.html","title":"component - QuestionSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  QuestionSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/subject-create/question-settings/question-settings.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-question-settings\n            \n\n\n            \n                imports\n                \n                                Header\n                                CreationStepTab\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./question-settings.html\n            \n\n\n\n            \n                styleUrl\n                ./question-settings.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                examSettings\n                            \n                            \n                                exerciseSettings\n                            \n                            \n                                loading\n                            \n                            \n                                notify\n                            \n                            \n                                subjectId\n                            \n                            \n                                subjectService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                            \n                                toggleExamType\n                            \n                            \n                                toggleExerciseType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/subject-create/question-settings/question-settings.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/subject-create/question-settings/question-settings.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleExamType\n                        \n                    \n                \n            \n            \n                \ntoggleExamType(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/subject-create/question-settings/question-settings.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleExerciseType\n                        \n                    \n                \n            \n            \n                \ntoggleExerciseType(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/subject-create/question-settings/question-settings.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        examSettings\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ExamSettings()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/question-settings/question-settings.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exerciseSettings\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ExerciseSettings()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/question-settings/question-settings.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/question-settings/question-settings.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notify\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(NotificationService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/question-settings/question-settings.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subjectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/question-settings/question-settings.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subjectService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SubjectsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/question-settings/question-settings.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, inject } from '@angular/core';\nimport { Header } from '../../../shared/components/header/header';\nimport { CreationStepTab } from '../creation-step-tab/creation-step-tab';\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { SubjectsService } from '../../../core/services/subjects.service';\nimport { forkJoin, Observable } from 'rxjs';\nimport { NotificationService } from '../../../core/services/notification.service'; //  = []\n  preference: string = ''\n}\nclass ExamSettings {\n  include: boolean = false\n  questionTypes: Array = []\n  preference: string = ''\n  timeLimit: any = null\n}\n\n@Component({\n  selector: 'app-question-settings',\n  imports: [Header, CreationStepTab, FormsModule],\n  templateUrl: './question-settings.html',\n  styleUrl: './question-settings.css'\n})\nexport class QuestionSettings {\n  exerciseSettings = new ExerciseSettings();\n  examSettings = new ExamSettings();\n  loading = false;\n  subjectId = '';\n  subjectService = inject(SubjectsService)\n  notify = inject(NotificationService); //  qt !== event.target.value);\n    }\n  }\n\n  toggleExamType(event: any) {\n    if (event.target.checked) {\n      this.examSettings.questionTypes.push(event.target.value);\n    } else {\n      this.examSettings.questionTypes = this.examSettings.questionTypes.filter((qt) => qt !== event.target.value);\n    }\n  }\n\n  onSubmit() {\n    this.loading = true;\n    let exerciseValidated = false;\n    let examValidated = false;\n  \n    // Validate exercise fields\n    if (this.exerciseSettings.include) {\n      if (this.exerciseSettings.questionTypes.length == 0) {\n        this.notify.showError(\"Choose at least one question type for the exercises\");\n        this.loading = false;\n        return;\n      }\n      if (!this.exerciseSettings.preference) {\n        this.notify.showError(\"Exercise preference cannot be empty\");\n        this.loading = false;\n        return;\n      }\n    }\n    exerciseValidated = true;\n  \n    // Validate exam fields\n    if (this.examSettings.include) {\n      if (this.examSettings.questionTypes.length == 0) {\n        this.notify.showError(\"Choose at least one question type for the exam\");\n        this.loading = false;\n        return;\n      }\n      if (!this.examSettings.preference) {\n        this.notify.showError(\"Exam preference cannot be empty\");\n        this.loading = false;\n        return;\n      }\n    }\n    examValidated = true;\n  \n    // Collect all requests to run in parallel\n    const requests: Observable[] = [];\n  \n    if (this.exerciseSettings.include && exerciseValidated) {\n      requests.push(\n        this.subjectService.generateExercise(\n          this.subjectId,\n          this.exerciseSettings.preference,\n          this.exerciseSettings.questionTypes\n        )\n      );\n    }\n  \n    if (this.examSettings.include && examValidated) {\n      requests.push(\n        this.subjectService.generateExam(\n          this.subjectId,\n          this.examSettings.preference,\n          this.examSettings.questionTypes\n        )\n      );\n    }\n  \n    // If there are requests, wait for them to finish before updating status\n    if (requests.length > 0) {\n      forkJoin(requests).subscribe({\n        next: (responses) => {\n          console.log(\"Generation responses:\", responses);\n          this.subjectService.updateSessionStatus(this.subjectId, \"In Progress\").subscribe({\n            next: () => {\n              console.log(\"Session status updated\");\n              this.router.navigate([`/lesson/${this.subjectId}`]);\n            },\n            error: (err) => {\n              console.error(\"Failed to update session status\", err);\n              this.router.navigate([`/lesson/${this.subjectId}`]);\n            },\n            complete: () => (this.loading = false),\n          });\n        },\n        error: (err) => {\n          console.error(\"Error during generation:\", err);\n          this.loading = false;\n        }\n      });\n    } else {\n      // If no requests to generate, just update status directly\n      this.subjectService.updateSessionStatus(this.subjectId, \"In Progress\").subscribe({\n        next: () => {\n          console.log(\"Session status updated (no generation needed)\");\n          this.router.navigate([`/lesson/${this.subjectId}`]);\n        },\n        error: (err) => {\n          console.error(\"Failed to update session status\", err);\n          this.router.navigate([`/lesson/${this.subjectId}`]);\n        },\n        complete: () => (this.loading = false),\n      });\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n  \n  \n    \n    \n    \n  \n\n  Set Practice Questions\n  \n    You can choose to generate practice exercises as well as an exam alongside the lesson.\n  \n\n  \n    \n    \n      Exercises\n      \n      Do you want to include exercises for each topic?\n      \n        \n        Yes\n      \n      \n        \n        No\n      \n\n      \n      What question types do you want for the exercise?\n      \n        \n        Multiple Choice\n      \n      \n        \n        Multiple Selection\n      \n      \n        \n        Essay\n      \n      \n      \n      How would you like the exercises to be?\n      \n    \n    \n    \n    \n      Exam\n      \n      Do you want to include an exam for the lesson?\n      \n        \n        Yes\n      \n      \n        \n        No\n      \n\n      \n      What question types do you want for the exam?\n      \n        \n        Multiple Choice\n      \n      \n        \n        Multiple Selection\n      \n      \n        \n        Essay\n      \n      \n      \n      How would you like the exam to be?\n      \n    \n  \n  \n    Next\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Set Practice Questions      You can choose to generate practice exercises as well as an exam alongside the lesson.                  Exercises            Do you want to include exercises for each topic?                      Yes                            No                  What question types do you want for the exercise?                      Multiple Choice                            Multiple Selection                            Essay                        How would you like the exercises to be?                            Exam            Do you want to include an exam for the lesson?                      Yes                            No                  What question types do you want for the exam?                      Multiple Choice                            Multiple Selection                            Essay                        How would you like the exam to be?                  Next      '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'QuestionSettings'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SaveQuestionData.html":{"url":"interfaces/SaveQuestionData.html","title":"interface - SaveQuestionData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SaveQuestionData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/question.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            essay_answer\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            essay_feedback\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        essay_answer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        essay_answer:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        essay_feedback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        essay_feedback:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     literal type[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[] | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         QuestionType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         QuestionType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface QuestionOption {\n  id: string;\n  text: string;\n  correct: boolean;\n  selected: boolean;\n  explanation: string;\n}\n\nexport type QuestionType = 'multiple choice' | 'multiple selection' | 'essay';\n\nexport interface QuestionModel {\n  id: string;\n  text: string;\n  type: QuestionType;\n  options?: QuestionOption[] | null; // only for choice types\n  essay_answer?: string | null;\n  essay_feedback?: string | null;\n}\n\nexport interface SaveQuestionData {\n  id: string;\n  type: QuestionType;\n  options?: { id: string; selected: boolean }[] | null; // only for choice types\n  essay_answer?: string | null;\n  essay_feedback?: string | null;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Sidebar.html":{"url":"components/Sidebar.html","title":"component - Sidebar","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  Sidebar\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/lesson/sidebar/sidebar.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n\n            \n                imports\n                \n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sidebar.html\n            \n\n\n\n            \n                styleUrl\n                ./sidebar.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logContent\n                            \n                            \n                                selectView\n                            \n                            \n                                toggleExpandTopic\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                currentView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                updateView\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/lesson/sidebar/sidebar.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        currentView\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/lesson/sidebar/sidebar.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        updateView\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/lesson/sidebar/sidebar.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logContent\n                        \n                    \n                \n            \n            \n                \nlogContent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/sidebar/sidebar.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectView\n                        \n                    \n                \n            \n            \n                \nselectView(id: string, type: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/sidebar/sidebar.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleExpandTopic\n                        \n                    \n                \n            \n            \n                \ntoggleExpandTopic(topic_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/sidebar/sidebar.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                topic_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, input, output } from '@angular/core';\nimport { RouterLink } from '@angular/router';\n\n@Component({\n  selector: 'app-sidebar',\n  imports: [RouterLink],\n  templateUrl: './sidebar.html',\n  styleUrl: './sidebar.css'\n})\nexport class Sidebar {\n  content = input();\n  currentView = input();\n  updateView = output();\n\n  logContent() {\n    console.log(this.content());\n  }\n\n  toggleExpandTopic(topic_id: string) {\n    const topic = this.content().topics.find((t: any) => t.id === topic_id);\n    if (topic) {\n      topic.expanded = !topic.expanded;\n    }\n  }\n\n  selectView(id: string, type: string) {\n    console.log(`Selected view: ${type} with ID: ${id}`);\n    this.updateView.emit({ id, type });\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n    \n    Back to Subjects\n  \n\n  \n  \n    \n    @for (topic of content().topics; track topic.id) {\n      \n        \n        {{ topic.title }}\n      \n      @if (topic.expanded) {\n        \n        @for (subtopic of topic.subtopics; track subtopic.id) {\n          \n            {{ subtopic.title }}\n          \n        }\n        \n        @if (topic.exercise) {\n          \n            Exercise\n          \n        }\n      }\n    }\n    \n    @if (content().exam) {\n      \n        Exam\n      \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      Back to Subjects              @for (topic of content().topics; track topic.id) {                      {{ topic.title }}            @if (topic.expanded) {                @for (subtopic of topic.subtopics; track subtopic.id) {                      {{ subtopic.title }}                  }                @if (topic.exercise) {                      Exercise                  }      }    }        @if (content().exam) {              Exam          }  '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'Sidebar'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Signup.html":{"url":"components/Signup.html","title":"component - Signup","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  Signup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/auth/signup/signup.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signup\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                                PasswordValidator\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./signup.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authService\n                            \n                            \n                                email\n                            \n                            \n                                    \n                                emailCtrl\n                            \n                            \n                                firstname\n                            \n                            \n                                    \n                                firstnameCtrl\n                            \n                            \n                                lastname\n                            \n                            \n                                    \n                                lastnameCtrl\n                            \n                            \n                                loading\n                            \n                            \n                                password\n                            \n                            \n                                    \n                                passwordCtrl\n                            \n                            \n                                passwordVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                            \n                                togglePasswordVisibility\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/auth/signup/signup.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/auth/signup/signup.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePasswordVisibility\n                        \n                    \n                \n            \n            \n                \ntogglePasswordVisibility()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/auth/signup/signup.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/signup/signup.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/signup/signup.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        emailCtrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('emailCtrl')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/signup/signup.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/signup/signup.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstnameCtrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('firstnameCtrl')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/signup/signup.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/signup/signup.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastnameCtrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('lastnameCtrl')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/signup/signup.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/signup/signup.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/signup/signup.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        passwordCtrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('passwordCtrl')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/signup/signup.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"password\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/signup/signup.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, ViewChild } from '@angular/core';\nimport { FormsModule, NgModel } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { PasswordValidator } from '../../../shared/directives/password-validator';\nimport { AuthService } from '../../../core/services/auth.service';\n\n@Component({\n  selector: 'app-signup',\n  imports: [FormsModule, PasswordValidator],\n  templateUrl: './signup.html',\n})\nexport class Signup {\n  firstname = \"\";\n  lastname = \"\";\n  email = \"\";\n  password = \"\";\n  passwordVisible = \"password\";\n  loading = false;\n  authService = inject(AuthService);\n  \n  @ViewChild('firstnameCtrl') firstnameCtrl!: NgModel;\n  @ViewChild('lastnameCtrl') lastnameCtrl!: NgModel;\n  @ViewChild('emailCtrl') emailCtrl!: NgModel;\n  @ViewChild('passwordCtrl') passwordCtrl!: NgModel;\n\n  constructor(private router: Router) {}\n\n  togglePasswordVisibility() {\n    if (this.passwordVisible === \"password\") {\n      this.passwordVisible = \"text\"\n    } else {\n      this.passwordVisible = \"password\"\n    }\n  }\n\n  onSubmit() {\n    this.loading = true;\n    // Later: replace with real API call\n    if (this.emailCtrl.invalid || this.passwordCtrl.invalid || this.firstnameCtrl.invalid || this.lastnameCtrl.invalid) {\n      alert(\"first name, last name, valid email, and valid password are required\");\n    } else {\n      this.authService.signup({ \n        first_name: this.firstname, last_name: this.lastname, email: this.email, password: this.password }).subscribe({\n        next: (response) => {\n          console.log('Signup successful', response);\n          alert('Signup successful! Please log in.');\n          this.router.navigate(['/login']);\n        },\n        error: (error) => {\n          console.error('Signup failed', error);\n          alert('Signup failed, Please try again.');\n        }\n      });\n    }\n    this.loading = false;\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n      Maestro\n    \n    Meet Maestro\n    Your AI-powered assistant for mastering complex subjects, simplified.\n    \n      \n        \n        \n          First Name\n          \n          \n          @if (firstnameCtrl.invalid && firstnameCtrl.touched) {\n            \n              First Name is required\n            \n          }\n        \n        \n        \n          Last Name\n          \n          \n          @if (lastnameCtrl.invalid && lastnameCtrl.touched) {\n            \n              Last Name is required\n            \n          }\n        \n      \n\n      \n      \n        Email Address\n        \n        \n        @if (emailCtrl.invalid && emailCtrl.touched) {\n          \n            @if (emailCtrl.errors?.['required']) {Email is required}\n            @if (emailCtrl.errors?.['email']) {Invalid email format}\n          \n        }\n      \n\n      \n      \n        Password\n        \n        \n        @if (passwordCtrl.invalid && passwordCtrl.touched) {\n          \n            @if (passwordCtrl.errors?.['required']) {Password is required}\n            @if (passwordCtrl.errors?.['invalidPassword']) {Password must be at least 8 characters and include letters & numbers}\n          \n        }\n        \n          \n        \n      \n\n      \n        Next\n      \n    \n    \n      Have a Maestro account? Log In\n    \n  \n  \n  \n    \n    \n      \n      Maestro\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Maestro        Meet Maestro    Your AI-powered assistant for mastering complex subjects, simplified.                                    First Name                              @if (firstnameCtrl.invalid && firstnameCtrl.touched) {                          First Name is required                      }                                  Last Name                              @if (lastnameCtrl.invalid && lastnameCtrl.touched) {                          Last Name is required                      }                                  Email Address                        @if (emailCtrl.invalid && emailCtrl.touched) {                      @if (emailCtrl.errors?.[\\'required\\']) {Email is required}            @if (emailCtrl.errors?.[\\'email\\']) {Invalid email format}                  }                          Password                        @if (passwordCtrl.invalid && passwordCtrl.touched) {                      @if (passwordCtrl.errors?.[\\'required\\']) {Password is required}            @if (passwordCtrl.errors?.[\\'invalidPassword\\']) {Password must be at least 8 characters and include letters & numbers}                  }                                              Next                    Have a Maestro account? Log In                              Maestro      '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'Signup'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignupPayload.html":{"url":"interfaces/SignupPayload.html","title":"interface - SignupPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignupPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/auth-payload.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            confirmPassword\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        confirmPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserModel } from \"./user.model\";\n\nexport interface LoginPayload {\n  email: string;\n  password: string;\n}\n\nexport interface LoginResponse {\n  user: UserModel;\n  accessToken: string;\n  refreshToken: string;\n}\n\nexport interface SignupPayload {\n  name: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nexport interface VerifyEmailResponse {\n  success: boolean;\n  message: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Subjects.html":{"url":"components/Subjects.html","title":"component - Subjects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  Subjects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/dashboard/subjects/subjects.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-subjects\n            \n\n\n            \n                imports\n                \n                                Header\n                            RouterLink\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./subjects.html\n            \n\n\n\n            \n                styleUrl\n                ./subjects.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                old_subjects\n                            \n                            \n                                subjects\n                            \n                            \n                                subjectService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateSubject\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/dashboard/subjects/subjects.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateSubject\n                        \n                    \n                \n            \n            \n                \nnavigateSubject(subject: SubjectModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/dashboard/subjects/subjects.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                subject\n                                            \n                                                            SubjectModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/dashboard/subjects/subjects.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        old_subjects\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubjectModel[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      \"id\": \"sj2nd-2dkap-uamds\",\n      \"name\": \"Mathematics\",\n      \"created_at\": new Date(\"2023-10-01T12:00:00Z\"),\n      \"status\": \"In Progress\",\n      \"completion\": 30,\n    },\n    {\n      \"id\": \"sj2nd-2dkap-uamds\",\n      \"name\": \"Science\",\n      \"created_at\": new Date(\"2023-10-01T12:00:00Z\"),\n      \"status\": \"Completed\",\n      \"completion\": 100,\n    },\n    {\n      \"id\": \"sj2nd-2dkap-uamds\",\n      \"name\": \"History\",\n      \"created_at\": new Date(\"2023-10-01T12:00:00Z\"),\n      \"status\": \"Not Started\",\n      \"completion\": 0,\n    },\n    {\n      \"id\": \"sj2nd-2dkap-uamds\",\n      \"name\": \"Literature\",\n      \"created_at\": new Date(\"2023-10-01T12:00:00Z\"),\n      \"status\": \"In Progress\",\n      \"completion\": 50,\n    }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/subjects/subjects.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subjects\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubjectModel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/subjects/subjects.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subjectService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SubjectsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/subjects/subjects.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, inject, OnInit } from '@angular/core';\nimport { Header } from '../../../shared/components/header/header';\nimport { Router, RouterLink } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { SubjectModel } from '../../../core/models/subject.model';\nimport { SubjectsService } from '../../../core/services/subjects.service';\n\n@Component({\n  selector: 'app-subjects',\n  imports: [Header, RouterLink, CommonModule],\n  templateUrl: './subjects.html',\n  styleUrl: './subjects.css'\n})\nexport class Subjects implements OnInit {\n  old_subjects: SubjectModel[] = [\n    {\n      \"id\": \"sj2nd-2dkap-uamds\",\n      \"name\": \"Mathematics\",\n      \"created_at\": new Date(\"2023-10-01T12:00:00Z\"),\n      \"status\": \"In Progress\",\n      \"completion\": 30,\n    },\n    {\n      \"id\": \"sj2nd-2dkap-uamds\",\n      \"name\": \"Science\",\n      \"created_at\": new Date(\"2023-10-01T12:00:00Z\"),\n      \"status\": \"Completed\",\n      \"completion\": 100,\n    },\n    {\n      \"id\": \"sj2nd-2dkap-uamds\",\n      \"name\": \"History\",\n      \"created_at\": new Date(\"2023-10-01T12:00:00Z\"),\n      \"status\": \"Not Started\",\n      \"completion\": 0,\n    },\n    {\n      \"id\": \"sj2nd-2dkap-uamds\",\n      \"name\": \"Literature\",\n      \"created_at\": new Date(\"2023-10-01T12:00:00Z\"),\n      \"status\": \"In Progress\",\n      \"completion\": 50,\n    }\n  ];\n  subjects: SubjectModel[] = [];\n  subjectService = inject(SubjectsService)\n\n  constructor(private router: Router, private cdr: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this.subjectService.getAllSubjects().subscribe({\n      next: (response) => {\n        console.log(response)\n        this.subjects = response.sessions;\n        console.log(this.subjects)\n        this.cdr.detectChanges();\n      },\n      error: (err) => {\n        console.error('Error fetching subjects:', err);\n        alert(\"Failed to load subjects. Please try again later.\");\n      }\n    });\n  }\n\n  navigateSubject(subject: SubjectModel) {\n    if (subject.status === 'pending document upload' || subject.status === 'pending topic labelling') {\n      this.router.navigate(['/subject-create/naming-upload'])\n    } else if (subject.status === 'pending topic selection' || subject.status === 'pending lesson generation') {\n      this.router.navigate([`/subject-create/${subject.id}/topic-preferences`])\n    } else if (subject.status === 'pending practice question generation') {\n      this.router.navigate([`/subject-create/${subject.id}/question-settings`])\n    } else {\n      this.router.navigate([`/lesson/${subject.id}`])\n    }\n  }\n}\n\n    \n\n    \n        \n@if (subjects.length == 0) {\n  \n    Start Your Learning Journey\n    Create subjects to keep your study materials neatly categorized and easy to find.\n    \n      Create New Subject\n      \n    \n  \n} @else {\n  \n    \n    \n      \n        \n        My Subjects\n      \n      \n        Create New Subject\n        \n      \n    \n\n    \n    \n      @for (subject of subjects; track subject.id) {\n        \n        \n          \n            {{subject.name}}\n            {{subject.status}}\n          \n          \n            \n            \n              \n                \n              \n            \n            {{(subject.completion*100).toFixed(0)}}%\n          \n        \n      }\n    \n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (subjects.length == 0) {      Start Your Learning Journey    Create subjects to keep your study materials neatly categorized and easy to find.          Create New Subject            } @else {                                My Subjects                    Create New Subject                                @for (subject of subjects; track subject.id) {                                      {{subject.name}}            {{subject.status}}                                                                                                                {{(subject.completion*100).toFixed(0)}}%                        }      }'\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'Subjects'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubjectsService.html":{"url":"injectables/SubjectsService.html","title":"injectable - SubjectsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  SubjectsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/subjects.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createSubject\n                            \n                            \n                                generateExam\n                            \n                            \n                                generateExercise\n                            \n                            \n                                generateLesson\n                            \n                            \n                                getAllSubjects\n                            \n                            \n                                ingestDocuments\n                            \n                            \n                                labelDocuments\n                            \n                            \n                                selectTopics\n                            \n                            \n                                updateSessionProgress\n                            \n                            \n                                updateSessionStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createSubject\n                        \n                    \n                \n            \n            \n                \ncreateSubject(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/subjects.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateExam\n                        \n                    \n                \n            \n            \n                \ngenerateExam(sessionId: string, prefs: string, questionTypes: string[], timeLimit: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/subjects.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                prefs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                questionTypes\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                timeLimit\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateExercise\n                        \n                    \n                \n            \n            \n                \ngenerateExercise(sessionId: string, prefs: string, questionTypes: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/subjects.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                prefs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                questionTypes\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateLesson\n                        \n                    \n                \n            \n            \n                \ngenerateLesson(sessionId: string, prefs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/subjects.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                prefs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllSubjects\n                        \n                    \n                \n            \n            \n                \ngetAllSubjects()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/subjects.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingestDocuments\n                        \n                    \n                \n            \n            \n                \ningestDocuments(sessionId: string, files: File[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/subjects.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                files\n                                            \n                                                        File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelDocuments\n                        \n                    \n                \n            \n            \n                \nlabelDocuments(sessionId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/subjects.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectTopics\n                        \n                    \n                \n            \n            \n                \nselectTopics(sessionId: string, topicIds: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/subjects.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                topicIds\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSessionProgress\n                        \n                    \n                \n            \n            \n                \nupdateSessionProgress(sessionId: string, progress: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/subjects.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                progress\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSessionStatus\n                        \n                    \n                \n            \n            \n                \nupdateSessionStatus(sessionId: string, status: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/subjects.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpBaseService)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/subjects.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpBaseService } from './http-base.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SubjectsService {\n  http = inject(HttpBaseService);\n\n  getAllSubjects(): Observable {\n    return this.http.get('session/list');\n  }\n\n  createSubject(name: string): Observable {\n    return this.http.post('session/create', { name });\n  }\n\n  ingestDocuments(sessionId: string, files: File[]): Observable {\n    const formData = new FormData();\n    files.forEach((file) => formData.append('files', file));\n    return this.http.post(`session/${sessionId}/docs/ingest`, formData);\n  }\n\n  labelDocuments(sessionId: string): Observable {\n    return this.http.post(`session/${sessionId}/docs/label`, {});\n  }\n\n  selectTopics(sessionId: string, topicIds: string[]): Observable {\n    return this.http.post(`session/${sessionId}/select-topics`, { topics: topicIds });\n  }\n\n  generateLesson(sessionId: string, prefs: string): Observable {\n    return this.http.post(`session/${sessionId}/generate-lesson`, { lesson_preference: prefs });\n  }\n\n  generateExercise(sessionId: string, prefs: string, questionTypes: string[]): Observable {\n    return this.http.post(`session/${sessionId}/generate-exercises`, { exercise_preference: prefs, question_types: questionTypes });\n  }\n\n  generateExam(sessionId: string, prefs: string, questionTypes: string[], timeLimit: boolean = false): Observable {\n    return this.http.post(`session/${sessionId}/generate-exam`, { exam_preference: prefs, question_types: questionTypes, use_time_limit: timeLimit });\n  }\n\n  updateSessionStatus(sessionId: string, status: string): Observable {\n    return this.http.put(`session/${sessionId}/update-status`, { status });\n  }\n\n  updateSessionProgress(sessionId: string, progress: number): Observable {\n    return this.http.put(`session/${sessionId}/update-progress`, { update_tick: progress });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Subscription.html":{"url":"components/Subscription.html","title":"component - Subscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  Subscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/dashboard/subscription/subscription.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-subscription\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                plans\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onCancel\n                            \n                            \n                                onSubscribe\n                            \n                            \n                                    Private\n                                refresh\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(subSvc: SubscriptionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/dashboard/subscription/subscription.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subSvc\n                                                  \n                                                        \n                                                                        SubscriptionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/dashboard/subscription/subscription.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/dashboard/subscription/subscription.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubscribe\n                        \n                    \n                \n            \n            \n                \nonSubscribe(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/dashboard/subscription/subscription.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        refresh\n                        \n                    \n                \n            \n            \n                \n                        \n                    refresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/dashboard/subscription/subscription.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        plans\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/subscription/subscription.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/subscription/subscription.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SubscriptionService } from '../../../core/services/subscription.service';\nimport {Plan, SubscriptionStatus} from '../../../core/models/subscription.model';\n\n@Component({\n  selector: 'app-subscription',\n  standalone: true,\n  imports: [CommonModule],\n  template: ` `\n})\nexport class Subscription implements OnInit {\n  plans = signal([]);\n  status = signal(null);\n\n  constructor(private subSvc: SubscriptionService) {}\n\n  ngOnInit() {\n    this.subSvc.getPlans().subscribe(plans => this.plans.set(plans));\n    this.refresh();\n  }\n\n  onSubscribe(id: string) {\n    this.subSvc.subscribe(id).subscribe(() => this.refresh());\n  }\n\n  onCancel() {\n    this.subSvc.cancel().subscribe(() => this.refresh());\n  }\n\n  private refresh() {\n    this.subSvc.getStatus().subscribe(st => this.status.set(st));\n  }\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'Subscription'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/SubscriptionGuard.html":{"url":"guards/SubscriptionGuard.html","title":"guard - SubscriptionGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    SubscriptionGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n                File\n            \n            \n                src/app/core/guards/subscription.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(subSvc: SubscriptionService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/subscription.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subSvc\n                                                  \n                                                        \n                                                                        SubscriptionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/subscription.guard.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  Router\n} from '@angular/router';\nimport { map } from 'rxjs';\nimport { SubscriptionService } from '../services/subscription.service';\n\n@Injectable({ providedIn: 'root' })\nexport class SubscriptionGuard implements CanActivate {\n  constructor(\n    private subSvc: SubscriptionService,\n    private router: Router\n  ) {}\n\n  canActivate() {\n    return this.subSvc.getStatus().pipe(\n      map(st => {\n        if (!st.isActive) {\n          this.router.navigate(['/dashboard/subscription']);\n          return false;\n        }\n        return true;\n      })\n    );\n  }\n}\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubscriptionService.html":{"url":"injectables/SubscriptionService.html","title":"injectable - SubscriptionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  SubscriptionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/subscription.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                getPlans\n                            \n                            \n                                getStatus\n                            \n                            \n                                subscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/subscription.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/subscription.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlans\n                        \n                    \n                \n            \n            \n                \ngetPlans()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/subscription.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStatus\n                        \n                    \n                \n            \n            \n                \ngetStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/subscription.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribe\n                        \n                    \n                \n            \n            \n                \nsubscribe(planId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/subscription.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                planId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '${environment.apiUrl}/subscriptions'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/subscription.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Plan, SubscriptionStatus } from '../models/subscription.model';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({ providedIn: 'root' })\nexport class SubscriptionService {\n  private baseUrl = '${environment.apiUrl}/subscriptions';\n\n  constructor(private http: HttpClient) {}\n\n  getPlans(): Observable {\n    return this.http.get(`${this.baseUrl}/plans`);\n  }\n\n  subscribe(planId: string): Observable {\n    return this.http.post(`${this.baseUrl}/subscribe`, { planId });\n  }\n\n  getStatus(): Observable {\n    return this.http.get(`${this.baseUrl}/status`);\n  }\n\n  cancel() : Observable {\n    return this.http.post(`${this.baseUrl}/cancel`, {});\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SubscriptionStatus.html":{"url":"interfaces/SubscriptionStatus.html","title":"interface - SubscriptionStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SubscriptionStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/subscription.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            expiresAt\n                                        \n                                \n                                \n                                        \n                                            isActive\n                                        \n                                \n                                \n                                        \n                                            plan\n                                        \n                                \n                                \n                                        \n                                            startedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expiresAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plan\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        plan:         Plan\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Plan\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Plan {\n  id: string;\n  name: string;\n  price: number;\n  maxSubjects: number;\n  durationDays: number;\n}\n\nexport interface SubscriptionStatus {\n  plan: Plan;\n  startedAt: string;\n  expiresAt: string;\n  isActive: boolean;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Subtopic.html":{"url":"components/Subtopic.html","title":"component - Subtopic","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  Subtopic\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/lesson/subtopic/subtopic.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-subtopic\n            \n\n\n            \n                imports\n                \n                            MarkdownPipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./subtopic.html\n            \n\n\n\n            \n                styleUrl\n                ./subtopic.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                nextSubtopic\n                            \n                            \n                                prevSubtopic\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentTopic\n                            \n                            \n                                currentView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                cycleSubtopic\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentTopic\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/lesson/subtopic/subtopic.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        currentView\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/lesson/subtopic/subtopic.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        cycleSubtopic\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/lesson/subtopic/subtopic.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        nextSubtopic\n                        \n                    \n                \n            \n            \n                \nnextSubtopic()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/subtopic/subtopic.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prevSubtopic\n                        \n                    \n                \n            \n            \n                \nprevSubtopic()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lesson/subtopic/subtopic.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, input, output } from '@angular/core';\nimport { MarkdownPipe } from '../../../shared/pipes/markdown-pipe';\n// import { MarkdownModule } from 'ngx-markdown';\n\n@Component({\n  selector: 'app-subtopic',\n  imports: [MarkdownPipe],\n  templateUrl: './subtopic.html',\n  styleUrl: './subtopic.css'\n})\nexport class Subtopic {\n  currentTopic = input();\n  currentView = input();\n  cycleSubtopic = output();\n\n  prevSubtopic() {\n    this.cycleSubtopic.emit({ id: this.currentTopic().id, direction: 'prev' });\n  }\n\n  nextSubtopic() {\n    this.cycleSubtopic.emit({ id: this.currentTopic().id, direction: 'next' });\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n    \n      {{ currentTopic().title }}\n      \n      {{ currentView().content.title }}\n    \n    \n    \n      \n        \n        Previous\n      \n      \n        Next\n        \n      \n    \n  \n\n  \n  \n    \n      \n    \n    {{ currentView().content.title }}\n  \n\n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ currentTopic().title }}            {{ currentView().content.title }}                                  Previous                    Next                                          {{ currentView().content.title }}      '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'Subtopic'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SubtopicModel.html":{"url":"interfaces/SubtopicModel.html","title":"interface - SubtopicModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SubtopicModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/subtopic.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            brief_description\n                                        \n                                \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            read\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        brief_description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        brief_description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        read\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        read:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SubtopicModel {\n  id: string;\n  title: string;\n  brief_description: string;\n  content: string;      // Text or markdown\n  read: boolean;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Toast.html":{"url":"components/Toast.html","title":"component - Toast","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  Toast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/toast/toast.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                NotificationService\n                \n            \n\n\n            \n                selector\n                app-toast\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./toast.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                classes\n                            \n                            \n                                msg\n                            \n                            \n                                    Public\n                                notify\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(notify: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/toast/toast.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/toast/toast.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        classes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => ({\n    'fixed bottom-4 right-4 z-50 flex items-center space-x-3 p-4 rounded shadow-lg text-white':\n      true,\n    'bg-green-500': this.type() === 'success',\n    'bg-red-500': this.type() === 'error',\n    'bg-blue-500': this.type() === 'info',\n    'bg-yellow-500': this.type() === 'warn'\n  }))\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/toast/toast.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        msg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/toast/toast.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        notify\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/toast/toast.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/toast/toast.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, computed } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NotificationService } from '../../../core/services/notification.service';\n\n@Component({\n  selector: 'app-toast',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './toast.html',\n  providers: [NotificationService]\n})\nexport class Toast {\n  msg: any;\n  type: any;\n  classes = computed(() => ({\n    'fixed bottom-4 right-4 z-50 flex items-center space-x-3 p-4 rounded shadow-lg text-white':\n      true,\n    'bg-green-500': this.type() === 'success',\n    'bg-red-500': this.type() === 'error',\n    'bg-blue-500': this.type() === 'info',\n    'bg-yellow-500': this.type() === 'warn'\n  }));\n\n  constructor(public notify: NotificationService) {\n    this.msg = this.notify.message;\n    this.type = this.notify.type;\n  }\n  close() { this.notify.clear(); }\n}\n    \n\n    \n        @if(msg()) {\n  \n    {{ msg() }}\n    ✕\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if(msg()) {      {{ msg() }}    ✕  }'\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'Toast'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TopicModel.html":{"url":"interfaces/TopicModel.html","title":"interface - TopicModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TopicModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/topic.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            brief_description\n                                        \n                                \n                                \n                                        \n                                            completed\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            selected\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        brief_description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        brief_description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        completed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TopicModel {\n  id: string;\n  title: string;\n  brief_description: string;\n  completed: boolean;\n  selected: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopicPreferences.html":{"url":"components/TopicPreferences.html","title":"component - TopicPreferences","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  TopicPreferences\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/subject-create/topic-preferences/topic-preferences.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-topic-preferences\n            \n\n\n            \n                imports\n                \n                                Header\n                                CreationStepTab\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./topic-preferences.html\n            \n\n\n\n            \n                styleUrl\n                ./topic-preferences.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                learningStyle\n                            \n                            \n                                    \n                                learningStyleCtrl\n                            \n                            \n                                lessonService\n                            \n                            \n                                loading\n                            \n                            \n                                notify\n                            \n                            \n                                old_topics\n                            \n                            \n                                subjectId\n                            \n                            \n                                subjectService\n                            \n                            \n                                topics\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                toggleTopicSelection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/subject-create/topic-preferences/topic-preferences.ts:68\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/subject-create/topic-preferences/topic-preferences.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/subject-create/topic-preferences/topic-preferences.ts:101\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleTopicSelection\n                        \n                    \n                \n            \n            \n                \ntoggleTopicSelection(topic_id: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/subject-create/topic-preferences/topic-preferences.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                topic_id\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        learningStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/topic-preferences/topic-preferences.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        learningStyleCtrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('learningStyleCtrl')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/topic-preferences/topic-preferences.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lessonService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LessonService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/topic-preferences/topic-preferences.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/topic-preferences/topic-preferences.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notify\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(NotificationService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/topic-preferences/topic-preferences.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        old_topics\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      \"id\": \"dksda-daidj2d-a2m90-1\",\n      \"name\": \"Definition\",\n      \"selected\": false\n    },\n    {\n      \"id\": \"dksda-daidj2d-a2m90-2\",\n      \"name\": \"Course Overview\",\n      \"selected\": false\n    },\n    {\n      \"id\": \"dksda-daidj2d-a2m90-3\",\n      \"name\": \"Key Features of the Course\",\n      \"selected\": false\n    },\n    {\n      \"id\": \"dksda-daidj2d-a2m90-4\",\n      \"name\": \"Learning Objectives\",\n      \"selected\": false\n    },\n    {\n      \"id\": \"dksda-daidj2d-a2m90-5\",\n      \"name\": \"Course Modules\",\n      \"selected\": false\n    },\n    {\n      \"id\": \"dksda-daidj2d-a2m90-6\",\n      \"name\": \"Assesment Methods\",\n      \"selected\": false\n    },\n    {\n      \"id\": \"dksda-daidj2d-a2m90-7\",\n      \"name\": \"Frequently Asked Questions (FAQs)\",\n      \"selected\": false\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/topic-preferences/topic-preferences.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subjectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/topic-preferences/topic-preferences.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subjectService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SubjectsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/topic-preferences/topic-preferences.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        topics\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TopicModel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/subject-create/topic-preferences/topic-preferences.ts:65\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, inject, OnInit, ViewChild } from '@angular/core';\nimport { Header } from '../../../shared/components/header/header';\nimport { CreationStepTab } from '../creation-step-tab/creation-step-tab';\nimport { FormsModule, NgModel } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { TopicModel } from '../../../core/models/topic.model';\nimport { SubjectsService } from '../../../core/services/subjects.service';\nimport { LessonService } from '../../../core/services/lesson.service';\nimport { NotificationService } from '../../../core/services/notification.service'; //  {\n        if (topic.id === topic_id) {topic.selected = !topic.selected}\n      }\n    )\n  }\n\n  ngOnInit(): void {\n    // Fetch topics from backend\n    this.lessonService.getAllTopics(this.subjectId).subscribe({\n      next: (response) => {\n        console.log(response)\n        this.topics = response.topics\n        console.log(this.topics)\n        this.cdr.detectChanges();\n      },\n      error: (err) => {\n        console.error('Error fetching topics:', err);\n        this.notify.showError(\"Failed to load topics. Please try again later.\");\n      }\n    });\n  }\n\n  onSubmit() {\n    const selectedTopics = this.topics.filter((topic) => topic.selected);\n    this.loading = true;\n    if (selectedTopics.length == 0) {\n      this.notify.showError(\"At least one topic must be selected\");\n      this.loading = false;\n      return\n    }\n    if (this.learningStyleCtrl.invalid) {\n      this.notify.showError(\"Learning Style is required\");\n      this.loading = false;\n      return\n    }\n\n    // Here you would typically send the data to the backend\n    console.log(selectedTopics);\n    console.log(this.learningStyle);\n\n    // Select topics\n    this.subjectService.selectTopics(this.subjectId, selectedTopics.map((topic) => topic.id)).subscribe({\n      next: (response) => {\n        console.log(\"Topics selected:\", response);\n\n        // Generate lesson\n        this.subjectService.generateLesson(this.subjectId, this.learningStyle).subscribe({\n          next: (response) => {\n            console.log(\"Lesson generated:\", response);\n            this.router.navigate([`/subject-create/${this.subjectId}/question-settings`])\n            this.loading = false;\n          },\n\n          error: (err) => {\n            console.error('Error generating lesson:', err);\n            this.notify.showError(\"Failed to generate lesson. Please try again later.\");\n            this.loading = false;\n          }\n        });\n      },\n      \n      error: (err) => {\n        console.error('Error selecting topics:', err);\n        this.notify.showError(\"Failed to select topics. Please try again later.\");\n        this.loading = false;\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n    \n    \n    \n  \n\n  Create Your Personalized Lesson\n  \n    Select the specific topics from your document that you want Maestro to focus on for your lesson.\n  \n\n  \n  \n    @for (topic of topics; track topic.id) {\n      \n        @if (topic.selected) {\n          \n          \n        }\n        {{topic.title}}\n      \n    }\n  \n\n  \n  Learning Style\n  \n    How would you like this lesson to be?\n    \n    \n    @if (learningStyleCtrl.invalid && learningStyleCtrl.touched) {\n      \n        Learning Style is required\n      \n    }\n    \n      Next\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Create Your Personalized Lesson      Select the specific topics from your document that you want Maestro to focus on for your lesson.          @for (topic of topics; track topic.id) {              @if (topic.selected) {                            }        {{topic.title}}          }      Learning Style      How would you like this lesson to be?            @if (learningStyleCtrl.invalid && learningStyleCtrl.touched) {              Learning Style is required          }          Next            '\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'TopicPreferences'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserModel.html":{"url":"interfaces/UserModel.html","title":"interface - UserModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/user.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            first_name\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            last_name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserModel {\n  id: string;\n  email: string;\n  first_name: string;\n  last_name: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                            \n                                    Private\n                                currentUser$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchProfile\n                            \n                            \n                                getCurrentUser\n                            \n                            \n                                setCurrentUser\n                            \n                            \n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/user.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchProfile\n                        \n                    \n                \n            \n            \n                \nfetchProfile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \ngetCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCurrentUser\n                        \n                    \n                \n            \n            \n                \nsetCurrentUser(user: UserModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProfile\n                        \n                    \n                \n            \n            \n                \nupdateProfile(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/api/users'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { UserModel } from '../models/user.model';\n\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n  private baseUrl = '/api/users';\n  private currentUser$ = new BehaviorSubject(null);\n\n  constructor(private http: HttpClient) {}\n\n  fetchProfile(): Observable {\n    return this.http.get(`${this.baseUrl}/me`);\n  }\n\n  updateProfile(data: Partial): Observable {\n    return this.http.put(`${this.baseUrl}/me`, data);\n  }\n\n  setCurrentUser(user: UserModel): void {\n    this.currentUser$.next(user);\n  }\n\n  getCurrentUser(): Observable {\n    return this.currentUser$.asObservable();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VerifyEmail.html":{"url":"components/VerifyEmail.html","title":"component - VerifyEmail","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  VerifyEmail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/auth/verify-email/verify-email.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-verify-email\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./verify-email.html\n            \n\n\n\n            \n                styleUrl\n                ./verify-email.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-verify-email',\n  imports: [],\n  templateUrl: './verify-email.html',\n  styleUrl: './verify-email.css'\n})\nexport class VerifyEmail {\n\n}\n\n    \n\n    \n        verify-email works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'verify-email works!'\n    var COMPONENTS = [{'name': 'About', 'selector': 'app-about'},{'name': 'App', 'selector': 'app-root'},{'name': 'Chatbot', 'selector': 'app-chatbot'},{'name': 'ConfirmLogout', 'selector': 'app-confirm-logout'},{'name': 'Contact', 'selector': 'app-contact'},{'name': 'CreationStepTab', 'selector': 'app-creation-step-tab'},{'name': 'Features', 'selector': 'app-features'},{'name': 'Header', 'selector': 'app-header'},{'name': 'Home', 'selector': 'app-home'},{'name': 'Landing', 'selector': 'app-landing'},{'name': 'LessonPage', 'selector': 'app-lesson-page'},{'name': 'Login', 'selector': 'app-login'},{'name': 'NamingUpload', 'selector': 'app-naming-upload'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Practice', 'selector': 'app-practice'},{'name': 'Pricing', 'selector': 'app-pricing'},{'name': 'QuestionSettings', 'selector': 'app-question-settings'},{'name': 'Sidebar', 'selector': 'app-sidebar'},{'name': 'Signup', 'selector': 'app-signup'},{'name': 'Subjects', 'selector': 'app-subjects'},{'name': 'Subscription', 'selector': 'app-subscription'},{'name': 'Subtopic', 'selector': 'app-subtopic'},{'name': 'Toast', 'selector': 'app-toast'},{'name': 'TopicPreferences', 'selector': 'app-topic-preferences'},{'name': 'VerifyEmail', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [{'name': 'FileTypeDirective', 'selector': '[appFileType]'},{'name': 'PasswordValidator', 'selector': '[appPasswordValidator]'}];\n    var ACTUAL_COMPONENT = {'name': 'VerifyEmail'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VerifyEmailResponse.html":{"url":"interfaces/VerifyEmailResponse.html","title":"interface - VerifyEmailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VerifyEmailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/auth-payload.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserModel } from \"./user.model\";\n\nexport interface LoginPayload {\n  email: string;\n  password: string;\n}\n\nexport interface LoginResponse {\n  user: UserModel;\n  accessToken: string;\n  refreshToken: string;\n}\n\nexport interface SignupPayload {\n  name: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nexport interface VerifyEmailResponse {\n  success: boolean;\n  message: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.ts\n            \n            variable\n            routes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.ts\n            \n            component\n            App\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/core/guards/subscription.guard.ts\n            \n            guard\n            SubscriptionGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/core/interceptors/auth.interceptor.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/core/interceptors/http-error.interceptor.ts\n            \n            variable\n            httpErrorInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/models/answer.model.ts\n            \n            interface\n            AnswerModel\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/app/core/models/auth-payload.model.ts\n            \n            interface\n            LoginPayload\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/core/models/auth-payload.model.ts\n            \n            interface\n            LoginResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/core/models/auth-payload.model.ts\n            \n            interface\n            SignupPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/app/core/models/auth-payload.model.ts\n            \n            interface\n            VerifyEmailResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/core/models/chat-message.model.ts\n            \n            interface\n            ChatMessage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/core/models/chat-metadata.model.ts\n            \n            type alias\n            ChatMetadata\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/models/exam.model.ts\n            \n            interface\n            ExamModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/core/models/exercise.model.ts\n            \n            interface\n            ExerciseModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/core/models/question.model.ts\n            \n            interface\n            QuestionModel\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/app/core/models/question.model.ts\n            \n            interface\n            QuestionOption\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/app/core/models/question.model.ts\n            \n            interface\n            SaveQuestionData\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/app/core/models/question.model.ts\n            \n            type alias\n            QuestionType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/models/subject.model.ts\n            \n            type alias\n            SubjectModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/models/subscription.model.ts\n            \n            interface\n            Plan\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/app/core/models/subscription.model.ts\n            \n            interface\n            SubscriptionStatus\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/app/core/models/subtopic.model.ts\n            \n            interface\n            SubtopicModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/app/core/models/topic.model.ts\n            \n            interface\n            TopicModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/app/core/models/user.model.ts\n            \n            interface\n            UserModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/app/core/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                        src/app/core/services/chatbot.service.ts\n            \n            injectable\n            ChatbotService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/core/services/exercise.service.ts\n            \n            injectable\n            ExerciseService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/app/core/services/http-base.service.ts\n            \n            injectable\n            HttpBaseService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/app/core/services/lesson.service.ts\n            \n            injectable\n            LessonService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                        src/app/core/services/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/app/core/services/notification.service.ts\n            \n            type alias\n            NoticeType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/services/subjects.service.ts\n            \n            injectable\n            SubjectsService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/app/core/services/subscription.service.ts\n            \n            injectable\n            SubscriptionService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/app/core/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/app/pages/auth/login/login.ts\n            \n            component\n            Login\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/app/pages/auth/signup/signup.ts\n            \n            component\n            Signup\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                        src/app/pages/auth/verify-email/verify-email.ts\n            \n            component\n            VerifyEmail\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/pages/dashboard/subjects/subjects.ts\n            \n            component\n            Subjects\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/app/pages/dashboard/subscription/subscription.ts\n            \n            component\n            Subscription\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/app/pages/home/about-ignore/about.ts\n            \n            component\n            About\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/pages/home/contact/contact.ts\n            \n            component\n            Contact\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/pages/home/features/features.ts\n            \n            component\n            Features\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/pages/home/home/home.ts\n            \n            component\n            Home\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/pages/home/landing/landing.ts\n            \n            component\n            Landing\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/app/pages/home/pricing/pricing.ts\n            \n            component\n            Pricing\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/pages/lesson/chatbot/chatbot.ts\n            \n            component\n            Chatbot\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                        src/app/pages/lesson/lesson-page/lesson-page.ts\n            \n            component\n            LessonPage\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                        src/app/pages/lesson/practice/practice.ts\n            \n            component\n            Practice\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                        src/app/pages/lesson/sidebar/sidebar.ts\n            \n            component\n            Sidebar\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/app/pages/lesson/subtopic/subtopic.ts\n            \n            component\n            Subtopic\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/app/pages/not-found/not-found.ts\n            \n            component\n            NotFound\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/pages/subject-create/creation-step-tab/creation-step-tab.ts\n            \n            component\n            CreationStepTab\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/app/pages/subject-create/naming-upload/naming-upload.ts\n            \n            component\n            NamingUpload\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                        src/app/pages/subject-create/question-settings/question-settings.ts\n            \n            component\n            QuestionSettings\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                        src/app/pages/subject-create/question-settings/question-settings.ts\n            \n            class\n            ExamSettings\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/app/pages/subject-create/question-settings/question-settings.ts\n            \n            class\n            ExerciseSettings\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/pages/subject-create/topic-preferences/topic-preferences.ts\n            \n            component\n            TopicPreferences\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                        src/app/pages/subject-create/topic-preferences/topic-preferences.ts\n            \n            type alias\n            Topic\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/shared/components/confirm-logout/confirm-logout.ts\n            \n            component\n            ConfirmLogout\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/shared/components/header/header.ts\n            \n            component\n            Header\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/app/shared/components/toast/toast.ts\n            \n            component\n            Toast\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/app/shared/directives/file-type.directive.ts\n            \n            directive\n            FileTypeDirective\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                        src/app/shared/directives/password-validator.ts\n            \n            directive\n            PasswordValidator\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/shared/pipes/markdown-pipe.ts\n            \n            pipe\n            MarkdownPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/shared/utils/file-validation.util.ts\n            \n            function\n            isAllowedFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ^20.1.0\n        \n            @angular/compiler : ^20.1.0\n        \n            @angular/core : ^20.1.0\n        \n            @angular/forms : ^20.1.0\n        \n            @angular/platform-browser : ^20.1.0\n        \n            @angular/router : ^20.1.0\n        \n            katex : ^0.16.22\n        \n            markdown-it : ^14.1.0\n        \n            markdown-it-katex : ^2.0.3\n        \n            ngx-markdown : ^20.0.0\n        \n            rxjs : ~7.8.0\n        \n            tailwind-scrollbar : ^1.3.1\n        \n            tslib : ^2.3.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            isAllowedFile   (src/.../file-validation.util.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/utils/file-validation.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isAllowedFile\n                        \n                    \n                \n            \n            \n                \nisAllowedFile(file: File, types, maxBytes: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                types\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                maxBytes\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \n\n\nMaestroFrontend\nThis project was generated using Angular CLI version 20.1.5.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n\n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    25 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    16 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ChatMetadata   (src/.../chat-metadata.model.ts)\n                        \n                        \n                            NoticeType   (src/.../notification.service.ts)\n                        \n                        \n                            QuestionType   (src/.../question.model.ts)\n                        \n                        \n                            SubjectModel   (src/.../subject.model.ts)\n                        \n                        \n                            Topic   (src/.../topic-preferences.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/models/chat-metadata.model.ts\n    \n    \n        \n            \n                \n                    \n                    ChatMetadata\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/services/notification.service.ts\n    \n    \n        \n            \n                \n                    \n                    NoticeType\n                \n            \n            \n                \n                        \"success\" | \"error\" | \"info\" | \"warn\"\n\n                \n            \n        \n    \n    src/app/core/models/question.model.ts\n    \n    \n        \n            \n                \n                    \n                    QuestionType\n                \n            \n            \n                \n                        \"multiple choice\" | \"multiple selection\" | \"essay\"\n\n                \n            \n        \n    \n    src/app/core/models/subject.model.ts\n    \n    \n        \n            \n                \n                    \n                    SubjectModel\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/pages/subject-create/topic-preferences/topic-preferences.ts\n    \n    \n        \n            \n                \n                    \n                    Topic\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            httpErrorInterceptor   (src/.../http-error.interceptor.ts)\n                        \n                        \n                            routes   (src/.../app.routes.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideBrowserGlobalErrorListeners(),\n    provideZonelessChangeDetection(),\n    provideRouter(routes),\n    provideHttpClient(withInterceptorsFromDi()),\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    provideMarkdown(),\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  apiUrl: 'https://your-backend-url.com/api' // deployed API\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  apiUrl: 'http://localhost:5000/api' // local dev API\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/interceptors/http-error.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        httpErrorInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\n  const notify = inject(NotificationService);\n  return next(req).pipe({\n    error: (err: HttpErrorResponse) => {\n      const msg =\n        err.error?.message ||\n        err.statusText ||\n        'An unexpected error occurred.';\n      notify.showError(msg);\n      throw err;\n    }\n  } as any);\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Routes\n\n                    \n                \n                \n                    \n                        Default value : [\n  // Home\n  { path: '', loadComponent: () => \"import('./pages/home/home/home').then(m => m.Home)\" },\n\n  // Auth\n  { path: 'signup', loadComponent: () => \"import('./pages/auth/signup/signup').then(m => m.Signup)\" },\n  { path: 'login', loadComponent: () => \"import('./pages/auth/login/login').then(m => m.Login)\" },\n  { path: 'verify-email', loadComponent: () => \"import('./pages/auth/verify-email/verify-email').then(m => m.VerifyEmail)\" },\n\n  // Dashboard\n  { path: 'dashboard', loadComponent: () => \"import('./pages/dashboard/subjects/subjects').then(m => m.Subjects)\" },\n  { path: 'dashboard/subscription', loadComponent: () => \"import('./pages/dashboard/subscription/subscription').then(m => m.Subscription)\" },\n\n  // Subject Creation (stepper flow, could be nested later if you want)\n  { path: 'subject-create/naming-upload', loadComponent: () => \"import('./pages/subject-create/naming-upload/naming-upload').then(m => m.NamingUpload)\" },\n  { path: 'subject-create/:sessionId/topic-preferences', loadComponent: () => \"import('./pages/subject-create/topic-preferences/topic-preferences').then(m => m.TopicPreferences)\" },\n  { path: 'subject-create/:sessionId/question-settings', loadComponent: () => \"import('./pages/subject-create/question-settings/question-settings').then(m => m.QuestionSettings)\" },\n\n  // Lesson\n  { path: 'lesson/:subjectId', loadComponent: () => \"import('./pages/lesson/lesson-page/lesson-page').then(m => m.LessonPage)\" },\n\n  // Not Found\n  { path: '**', loadComponent: () => \"import('./pages/not-found/not-found').then(m => m.NotFound)\" },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
